{
  "swagger": "2.0",
  "info": {
    "title": "tdex-daemon/v2/wallet.proto",
    "version": "version not set"
  },
  "tags": [
    {
      "name": "WalletService"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/v2/wallet/info": {
      "get": {
        "summary": "GetInfo returns info about the configuration and the internal wallet of tdexd.",
        "operationId": "WalletService_GetInfo",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2GetInfoResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "WalletService"
        ]
      }
    },
    "/v2/wallet/init": {
      "post": {
        "summary": "InitWallet is used when tdexd is starting up for the first time to fully\ninitialize the daemon and its internal wallet. \nThe wallet in the tdexd context is a database file on the disk that can be\nfound in the configured data directory. \nAt the very least a mnemonic and a wallet password must be provided to this \nRPC. The latter will be used to encrypt sensitive material on disk.\nOnce initialized the wallet is locked and since the password is never stored\non the disk, it's required to pass it into the Unlock RPC request to be able\nto manage the daemon for operations like depositing funds or opening a market.",
        "operationId": "WalletService_InitWallet",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "$ref": "#/definitions/v2InitWalletResponse"
                },
                "error": {
                  "$ref": "#/definitions/rpcStatus"
                }
              },
              "title": "Stream result of v2InitWalletResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v2InitWalletRequest"
            }
          }
        ],
        "tags": [
          "WalletService"
        ]
      }
    },
    "/v2/wallet/lock": {
      "post": {
        "summary": "LockWallet can be used to lock tdexd and disable any operation but those\nprovided by this service.",
        "operationId": "WalletService_LockWallet",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2LockWalletResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v2LockWalletRequest"
            }
          }
        ],
        "tags": [
          "WalletService"
        ]
      }
    },
    "/v2/wallet/password": {
      "post": {
        "summary": "ChangePassword changes the password of the encrypted wallet. This RPC\nrequires the internal wallet to be locked. It doesn't change the wallet state\nin any case, therefore, like after calling InitWallet, it is required to \nunlock the walket with UnlockWallet RPC after this operation succeeds.",
        "operationId": "WalletService_ChangePassword",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2ChangePasswordResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v2ChangePasswordRequest"
            }
          }
        ],
        "tags": [
          "WalletService"
        ]
      }
    },
    "/v2/wallet/seed": {
      "get": {
        "summary": "GenSeed is the first method that should be used to instantiate a new tdexd\ninstance. This method allows a caller to generate a new HD Wallet.\nOnce the seed is obtained and verified by the user, the InitWallet\nmethod should be used to commit the newly generated seed, and create the\nwallet.",
        "operationId": "WalletService_GenSeed",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2GenSeedResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "WalletService"
        ]
      }
    },
    "/v2/wallet/status": {
      "get": {
        "summary": "GetStatus is useful for external applications interacting with tdexd to know\nwhether its ready, meaning that also the wallet, operator trade services\nare able to serve requests.\nRestarting tdexd or initiliazing it by restoring an existing wallet can be\ntime-expensive operations causing tdexd to not be ready until they haven't\nfinished.",
        "operationId": "WalletService_GetStatus",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2GetStatusResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "WalletService"
        ]
      }
    },
    "/v2/wallet/unlock": {
      "post": {
        "summary": "UnlockWallet is used at startup of tdexd to provide a password to unlock\nthe wallet.",
        "operationId": "WalletService_UnlockWallet",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2UnlockWalletResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v2UnlockWalletRequest"
            }
          }
        ],
        "tags": [
          "WalletService"
        ]
      }
    }
  },
  "definitions": {
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "v2AccountInfo": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The optional friendly name assigned to the account."
        },
        "derivationPath": {
          "type": "string",
          "description": "The full derivation path."
        },
        "xpubs": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The master public keys."
        },
        "masterBlindingKey": {
          "type": "string",
          "description": "The master blinding key."
        }
      }
    },
    "v2BuildInfo": {
      "type": "object",
      "properties": {
        "version": {
          "type": "string",
          "title": "Version"
        },
        "commit": {
          "type": "string",
          "title": "Commit"
        },
        "date": {
          "type": "string",
          "title": "Date"
        }
      }
    },
    "v2ChangePasswordRequest": {
      "type": "object",
      "properties": {
        "currentPassword": {
          "type": "string",
          "description": "Current unlocking password."
        },
        "newPassword": {
          "type": "string",
          "description": "New unlocking password."
        }
      }
    },
    "v2ChangePasswordResponse": {
      "type": "object"
    },
    "v2GenSeedResponse": {
      "type": "object",
      "properties": {
        "seedMnemonic": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "v2GetInfoResponse": {
      "type": "object",
      "properties": {
        "rootPath": {
          "type": "string",
          "description": "The root path of the wallet of the daemon."
        },
        "accountInfo": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v2AccountInfo"
          },
          "description": "The list of info related to every account."
        },
        "network": {
          "type": "string",
          "title": "Network daemon running on"
        },
        "buildData": {
          "$ref": "#/definitions/v2BuildInfo",
          "title": "Daemon build information"
        }
      }
    },
    "v2GetStatusResponse": {
      "type": "object",
      "properties": {
        "initialized": {
          "type": "boolean",
          "description": "whether the daemon is initialized with an HD wallet."
        },
        "unlocked": {
          "type": "boolean",
          "description": "whether the daemon's wallet is unlocked."
        },
        "synced": {
          "type": "boolean",
          "description": "whether the daemon's wallet utxo set is up-to-date'."
        }
      }
    },
    "v2InitWalletRequest": {
      "type": "object",
      "properties": {
        "password": {
          "type": "string",
          "description": "wallet_password is the passphrase that should be used to encrypt the\nwallet. This MUST be at least 8 chars in length. After creation, this\npassword is required to unlock/lock the daemon."
        },
        "seedMnemonic": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "seed_mnemonic is a 24-word mnemonic that encodes a prior seed obtained by the\nuser. This MUST be a generated by the GenSeed method"
        },
        "restore": {
          "type": "boolean",
          "description": "the flag to let the daemon restore existing funds for the wallet."
        }
      }
    },
    "v2InitWalletResponse": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        }
      }
    },
    "v2LockWalletRequest": {
      "type": "object",
      "properties": {
        "password": {
          "type": "string",
          "description": "The unlocking password."
        }
      }
    },
    "v2LockWalletResponse": {
      "type": "object"
    },
    "v2UnlockWalletRequest": {
      "type": "object",
      "properties": {
        "password": {
          "type": "string",
          "description": "The unlocking password."
        }
      }
    },
    "v2UnlockWalletResponse": {
      "type": "object"
    }
  }
}
