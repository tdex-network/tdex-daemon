// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.15.8
// source: operator.proto

package operator

import (
	types "github.com/tdex-network/tdex-protobuf/generated/go/types"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Custom types
type StrategyType int32

const (
	StrategyType_PLUGGABLE  StrategyType = 0
	StrategyType_BALANCED   StrategyType = 1
	StrategyType_UNBALANCED StrategyType = 2
)

// Enum value maps for StrategyType.
var (
	StrategyType_name = map[int32]string{
		0: "PLUGGABLE",
		1: "BALANCED",
		2: "UNBALANCED",
	}
	StrategyType_value = map[string]int32{
		"PLUGGABLE":  0,
		"BALANCED":   1,
		"UNBALANCED": 2,
	}
)

func (x StrategyType) Enum() *StrategyType {
	p := new(StrategyType)
	*p = x
	return p
}

func (x StrategyType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (StrategyType) Descriptor() protoreflect.EnumDescriptor {
	return file_operator_proto_enumTypes[0].Descriptor()
}

func (StrategyType) Type() protoreflect.EnumType {
	return &file_operator_proto_enumTypes[0]
}

func (x StrategyType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use StrategyType.Descriptor instead.
func (StrategyType) EnumDescriptor() ([]byte, []int) {
	return file_operator_proto_rawDescGZIP(), []int{0}
}

type TradeStatus int32

const (
	TradeStatus_UNDEFINED TradeStatus = 0
	TradeStatus_REQUEST   TradeStatus = 1
	TradeStatus_ACCEPT    TradeStatus = 2
	TradeStatus_COMPLETE  TradeStatus = 3
	TradeStatus_SETTLED   TradeStatus = 4
	TradeStatus_EXPIRED   TradeStatus = 5
)

// Enum value maps for TradeStatus.
var (
	TradeStatus_name = map[int32]string{
		0: "UNDEFINED",
		1: "REQUEST",
		2: "ACCEPT",
		3: "COMPLETE",
		4: "SETTLED",
		5: "EXPIRED",
	}
	TradeStatus_value = map[string]int32{
		"UNDEFINED": 0,
		"REQUEST":   1,
		"ACCEPT":    2,
		"COMPLETE":  3,
		"SETTLED":   4,
		"EXPIRED":   5,
	}
)

func (x TradeStatus) Enum() *TradeStatus {
	p := new(TradeStatus)
	*p = x
	return p
}

func (x TradeStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TradeStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_operator_proto_enumTypes[1].Descriptor()
}

func (TradeStatus) Type() protoreflect.EnumType {
	return &file_operator_proto_enumTypes[1]
}

func (x TradeStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TradeStatus.Descriptor instead.
func (TradeStatus) EnumDescriptor() ([]byte, []int) {
	return file_operator_proto_rawDescGZIP(), []int{1}
}

type ActionType int32

const (
	ActionType_TRADE_SETTLED       ActionType = 0
	ActionType_ACCOUNT_LOW_BALANCE ActionType = 1
	ActionType_ACCOUNT_WITHDRAW    ActionType = 2
	ActionType_ALL_ACTIONS         ActionType = 3
)

// Enum value maps for ActionType.
var (
	ActionType_name = map[int32]string{
		0: "TRADE_SETTLED",
		1: "ACCOUNT_LOW_BALANCE",
		2: "ACCOUNT_WITHDRAW",
		3: "ALL_ACTIONS",
	}
	ActionType_value = map[string]int32{
		"TRADE_SETTLED":       0,
		"ACCOUNT_LOW_BALANCE": 1,
		"ACCOUNT_WITHDRAW":    2,
		"ALL_ACTIONS":         3,
	}
)

func (x ActionType) Enum() *ActionType {
	p := new(ActionType)
	*p = x
	return p
}

func (x ActionType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ActionType) Descriptor() protoreflect.EnumDescriptor {
	return file_operator_proto_enumTypes[2].Descriptor()
}

func (ActionType) Type() protoreflect.EnumType {
	return &file_operator_proto_enumTypes[2]
}

func (x ActionType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ActionType.Descriptor instead.
func (ActionType) EnumDescriptor() ([]byte, []int) {
	return file_operator_proto_rawDescGZIP(), []int{2}
}

type GetInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetInfoRequest) Reset() {
	*x = GetInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_operator_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetInfoRequest) ProtoMessage() {}

func (x *GetInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_operator_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetInfoRequest.ProtoReflect.Descriptor instead.
func (*GetInfoRequest) Descriptor() ([]byte, []int) {
	return file_operator_proto_rawDescGZIP(), []int{0}
}

type GetInfoReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RootPath          string         `protobuf:"bytes,1,opt,name=root_path,json=rootPath,proto3" json:"root_path,omitempty"`
	MasterBlindingKey string         `protobuf:"bytes,2,opt,name=master_blinding_key,json=masterBlindingKey,proto3" json:"master_blinding_key,omitempty"`
	AccountInfo       []*AccountInfo `protobuf:"bytes,3,rep,name=account_info,json=accountInfo,proto3" json:"account_info,omitempty"`
}

func (x *GetInfoReply) Reset() {
	*x = GetInfoReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_operator_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetInfoReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetInfoReply) ProtoMessage() {}

func (x *GetInfoReply) ProtoReflect() protoreflect.Message {
	mi := &file_operator_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetInfoReply.ProtoReflect.Descriptor instead.
func (*GetInfoReply) Descriptor() ([]byte, []int) {
	return file_operator_proto_rawDescGZIP(), []int{1}
}

func (x *GetInfoReply) GetRootPath() string {
	if x != nil {
		return x.RootPath
	}
	return ""
}

func (x *GetInfoReply) GetMasterBlindingKey() string {
	if x != nil {
		return x.MasterBlindingKey
	}
	return ""
}

func (x *GetInfoReply) GetAccountInfo() []*AccountInfo {
	if x != nil {
		return x.AccountInfo
	}
	return nil
}

type DropMarketRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountIndex uint64 `protobuf:"varint,1,opt,name=account_index,json=accountIndex,proto3" json:"account_index,omitempty"`
}

func (x *DropMarketRequest) Reset() {
	*x = DropMarketRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_operator_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DropMarketRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DropMarketRequest) ProtoMessage() {}

func (x *DropMarketRequest) ProtoReflect() protoreflect.Message {
	mi := &file_operator_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DropMarketRequest.ProtoReflect.Descriptor instead.
func (*DropMarketRequest) Descriptor() ([]byte, []int) {
	return file_operator_proto_rawDescGZIP(), []int{2}
}

func (x *DropMarketRequest) GetAccountIndex() uint64 {
	if x != nil {
		return x.AccountIndex
	}
	return 0
}

type DropMarketReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DropMarketReply) Reset() {
	*x = DropMarketReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_operator_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DropMarketReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DropMarketReply) ProtoMessage() {}

func (x *DropMarketReply) ProtoReflect() protoreflect.Message {
	mi := &file_operator_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DropMarketReply.ProtoReflect.Descriptor instead.
func (*DropMarketReply) Descriptor() ([]byte, []int) {
	return file_operator_proto_rawDescGZIP(), []int{3}
}

type ListUtxosRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountIndex uint64 `protobuf:"varint,1,opt,name=account_index,json=accountIndex,proto3" json:"account_index,omitempty"`
	Page         *Page  `protobuf:"bytes,2,opt,name=page,proto3" json:"page,omitempty"`
}

func (x *ListUtxosRequest) Reset() {
	*x = ListUtxosRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_operator_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListUtxosRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListUtxosRequest) ProtoMessage() {}

func (x *ListUtxosRequest) ProtoReflect() protoreflect.Message {
	mi := &file_operator_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListUtxosRequest.ProtoReflect.Descriptor instead.
func (*ListUtxosRequest) Descriptor() ([]byte, []int) {
	return file_operator_proto_rawDescGZIP(), []int{4}
}

func (x *ListUtxosRequest) GetAccountIndex() uint64 {
	if x != nil {
		return x.AccountIndex
	}
	return 0
}

func (x *ListUtxosRequest) GetPage() *Page {
	if x != nil {
		return x.Page
	}
	return nil
}

type ListUtxosReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Unspents []*UtxoInfo `protobuf:"bytes,1,rep,name=unspents,proto3" json:"unspents,omitempty"`
	Spents   []*UtxoInfo `protobuf:"bytes,2,rep,name=spents,proto3" json:"spents,omitempty"`
	Locks    []*UtxoInfo `protobuf:"bytes,3,rep,name=locks,proto3" json:"locks,omitempty"`
}

func (x *ListUtxosReply) Reset() {
	*x = ListUtxosReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_operator_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListUtxosReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListUtxosReply) ProtoMessage() {}

func (x *ListUtxosReply) ProtoReflect() protoreflect.Message {
	mi := &file_operator_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListUtxosReply.ProtoReflect.Descriptor instead.
func (*ListUtxosReply) Descriptor() ([]byte, []int) {
	return file_operator_proto_rawDescGZIP(), []int{5}
}

func (x *ListUtxosReply) GetUnspents() []*UtxoInfo {
	if x != nil {
		return x.Unspents
	}
	return nil
}

func (x *ListUtxosReply) GetSpents() []*UtxoInfo {
	if x != nil {
		return x.Spents
	}
	return nil
}

func (x *ListUtxosReply) GetLocks() []*UtxoInfo {
	if x != nil {
		return x.Locks
	}
	return nil
}

type UtxoInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Outpoint *TxOutpoint `protobuf:"bytes,1,opt,name=outpoint,proto3" json:"outpoint,omitempty"`
	Value    uint64      `protobuf:"varint,2,opt,name=value,proto3" json:"value,omitempty"`
	Asset    string      `protobuf:"bytes,3,opt,name=asset,proto3" json:"asset,omitempty"`
}

func (x *UtxoInfo) Reset() {
	*x = UtxoInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_operator_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UtxoInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UtxoInfo) ProtoMessage() {}

func (x *UtxoInfo) ProtoReflect() protoreflect.Message {
	mi := &file_operator_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UtxoInfo.ProtoReflect.Descriptor instead.
func (*UtxoInfo) Descriptor() ([]byte, []int) {
	return file_operator_proto_rawDescGZIP(), []int{6}
}

func (x *UtxoInfo) GetOutpoint() *TxOutpoint {
	if x != nil {
		return x.Outpoint
	}
	return nil
}

func (x *UtxoInfo) GetValue() uint64 {
	if x != nil {
		return x.Value
	}
	return 0
}

func (x *UtxoInfo) GetAsset() string {
	if x != nil {
		return x.Asset
	}
	return ""
}

type ReloadUtxosRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ReloadUtxosRequest) Reset() {
	*x = ReloadUtxosRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_operator_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReloadUtxosRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReloadUtxosRequest) ProtoMessage() {}

func (x *ReloadUtxosRequest) ProtoReflect() protoreflect.Message {
	mi := &file_operator_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReloadUtxosRequest.ProtoReflect.Descriptor instead.
func (*ReloadUtxosRequest) Descriptor() ([]byte, []int) {
	return file_operator_proto_rawDescGZIP(), []int{7}
}

type ReloadUtxosReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ReloadUtxosReply) Reset() {
	*x = ReloadUtxosReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_operator_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReloadUtxosReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReloadUtxosReply) ProtoMessage() {}

func (x *ReloadUtxosReply) ProtoReflect() protoreflect.Message {
	mi := &file_operator_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReloadUtxosReply.ProtoReflect.Descriptor instead.
func (*ReloadUtxosReply) Descriptor() ([]byte, []int) {
	return file_operator_proto_rawDescGZIP(), []int{8}
}

type DepositMarketRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Market         *types.Market `protobuf:"bytes,1,opt,name=market,proto3" json:"market,omitempty"`                                          // Market to get an address from. Could be empty.
	NumOfAddresses int64         `protobuf:"varint,2,opt,name=num_of_addresses,json=numOfAddresses,proto3" json:"num_of_addresses,omitempty"` // Number of addresses to be derived for market.
}

func (x *DepositMarketRequest) Reset() {
	*x = DepositMarketRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_operator_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DepositMarketRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DepositMarketRequest) ProtoMessage() {}

func (x *DepositMarketRequest) ProtoReflect() protoreflect.Message {
	mi := &file_operator_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DepositMarketRequest.ProtoReflect.Descriptor instead.
func (*DepositMarketRequest) Descriptor() ([]byte, []int) {
	return file_operator_proto_rawDescGZIP(), []int{9}
}

func (x *DepositMarketRequest) GetMarket() *types.Market {
	if x != nil {
		return x.Market
	}
	return nil
}

func (x *DepositMarketRequest) GetNumOfAddresses() int64 {
	if x != nil {
		return x.NumOfAddresses
	}
	return 0
}

type DepositMarketReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Addresses []string `protobuf:"bytes,1,rep,name=addresses,proto3" json:"addresses,omitempty"`
}

func (x *DepositMarketReply) Reset() {
	*x = DepositMarketReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_operator_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DepositMarketReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DepositMarketReply) ProtoMessage() {}

func (x *DepositMarketReply) ProtoReflect() protoreflect.Message {
	mi := &file_operator_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DepositMarketReply.ProtoReflect.Descriptor instead.
func (*DepositMarketReply) Descriptor() ([]byte, []int) {
	return file_operator_proto_rawDescGZIP(), []int{10}
}

func (x *DepositMarketReply) GetAddresses() []string {
	if x != nil {
		return x.Addresses
	}
	return nil
}

type ListDepositMarketRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Market *types.Market `protobuf:"bytes,1,opt,name=market,proto3" json:"market,omitempty"` // Market to get an address from. Could be empty.
}

func (x *ListDepositMarketRequest) Reset() {
	*x = ListDepositMarketRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_operator_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListDepositMarketRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDepositMarketRequest) ProtoMessage() {}

func (x *ListDepositMarketRequest) ProtoReflect() protoreflect.Message {
	mi := &file_operator_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDepositMarketRequest.ProtoReflect.Descriptor instead.
func (*ListDepositMarketRequest) Descriptor() ([]byte, []int) {
	return file_operator_proto_rawDescGZIP(), []int{11}
}

func (x *ListDepositMarketRequest) GetMarket() *types.Market {
	if x != nil {
		return x.Market
	}
	return nil
}

type ListDepositMarketReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address []string `protobuf:"bytes,1,rep,name=address,proto3" json:"address,omitempty"`
}

func (x *ListDepositMarketReply) Reset() {
	*x = ListDepositMarketReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_operator_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListDepositMarketReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDepositMarketReply) ProtoMessage() {}

func (x *ListDepositMarketReply) ProtoReflect() protoreflect.Message {
	mi := &file_operator_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDepositMarketReply.ProtoReflect.Descriptor instead.
func (*ListDepositMarketReply) Descriptor() ([]byte, []int) {
	return file_operator_proto_rawDescGZIP(), []int{12}
}

func (x *ListDepositMarketReply) GetAddress() []string {
	if x != nil {
		return x.Address
	}
	return nil
}

type DepositFeeAccountRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NumOfAddresses int64 `protobuf:"varint,1,opt,name=num_of_addresses,json=numOfAddresses,proto3" json:"num_of_addresses,omitempty"` // Number of addresses to be derived for Fee Account.
}

func (x *DepositFeeAccountRequest) Reset() {
	*x = DepositFeeAccountRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_operator_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DepositFeeAccountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DepositFeeAccountRequest) ProtoMessage() {}

func (x *DepositFeeAccountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_operator_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DepositFeeAccountRequest.ProtoReflect.Descriptor instead.
func (*DepositFeeAccountRequest) Descriptor() ([]byte, []int) {
	return file_operator_proto_rawDescGZIP(), []int{13}
}

func (x *DepositFeeAccountRequest) GetNumOfAddresses() int64 {
	if x != nil {
		return x.NumOfAddresses
	}
	return 0
}

type DepositFeeAccountReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AddressWithBlindingKey []*types.AddressWithBlindingKey `protobuf:"bytes,1,rep,name=address_with_blinding_key,json=addressWithBlindingKey,proto3" json:"address_with_blinding_key,omitempty"` // AddressInfo contains address and blinding key
}

func (x *DepositFeeAccountReply) Reset() {
	*x = DepositFeeAccountReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_operator_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DepositFeeAccountReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DepositFeeAccountReply) ProtoMessage() {}

func (x *DepositFeeAccountReply) ProtoReflect() protoreflect.Message {
	mi := &file_operator_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DepositFeeAccountReply.ProtoReflect.Descriptor instead.
func (*DepositFeeAccountReply) Descriptor() ([]byte, []int) {
	return file_operator_proto_rawDescGZIP(), []int{14}
}

func (x *DepositFeeAccountReply) GetAddressWithBlindingKey() []*types.AddressWithBlindingKey {
	if x != nil {
		return x.AddressWithBlindingKey
	}
	return nil
}

type BalanceFeeAccountRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *BalanceFeeAccountRequest) Reset() {
	*x = BalanceFeeAccountRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_operator_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BalanceFeeAccountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BalanceFeeAccountRequest) ProtoMessage() {}

func (x *BalanceFeeAccountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_operator_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BalanceFeeAccountRequest.ProtoReflect.Descriptor instead.
func (*BalanceFeeAccountRequest) Descriptor() ([]byte, []int) {
	return file_operator_proto_rawDescGZIP(), []int{15}
}

type BalanceFeeAccountReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Balance int64 `protobuf:"varint,1,opt,name=balance,proto3" json:"balance,omitempty"`
}

func (x *BalanceFeeAccountReply) Reset() {
	*x = BalanceFeeAccountReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_operator_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BalanceFeeAccountReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BalanceFeeAccountReply) ProtoMessage() {}

func (x *BalanceFeeAccountReply) ProtoReflect() protoreflect.Message {
	mi := &file_operator_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BalanceFeeAccountReply.ProtoReflect.Descriptor instead.
func (*BalanceFeeAccountReply) Descriptor() ([]byte, []int) {
	return file_operator_proto_rawDescGZIP(), []int{16}
}

func (x *BalanceFeeAccountReply) GetBalance() int64 {
	if x != nil {
		return x.Balance
	}
	return 0
}

type ListMarketRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListMarketRequest) Reset() {
	*x = ListMarketRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_operator_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListMarketRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMarketRequest) ProtoMessage() {}

func (x *ListMarketRequest) ProtoReflect() protoreflect.Message {
	mi := &file_operator_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMarketRequest.ProtoReflect.Descriptor instead.
func (*ListMarketRequest) Descriptor() ([]byte, []int) {
	return file_operator_proto_rawDescGZIP(), []int{17}
}

type ListMarketReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Markets []*MarketInfo `protobuf:"bytes,1,rep,name=markets,proto3" json:"markets,omitempty"`
}

func (x *ListMarketReply) Reset() {
	*x = ListMarketReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_operator_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListMarketReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMarketReply) ProtoMessage() {}

func (x *ListMarketReply) ProtoReflect() protoreflect.Message {
	mi := &file_operator_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMarketReply.ProtoReflect.Descriptor instead.
func (*ListMarketReply) Descriptor() ([]byte, []int) {
	return file_operator_proto_rawDescGZIP(), []int{18}
}

func (x *ListMarketReply) GetMarkets() []*MarketInfo {
	if x != nil {
		return x.Markets
	}
	return nil
}

type ClaimMarketDepositRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Market    *types.Market `protobuf:"bytes,1,opt,name=market,proto3" json:"market,omitempty"`
	Outpoints []*TxOutpoint `protobuf:"bytes,2,rep,name=outpoints,proto3" json:"outpoints,omitempty"`
}

func (x *ClaimMarketDepositRequest) Reset() {
	*x = ClaimMarketDepositRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_operator_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClaimMarketDepositRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClaimMarketDepositRequest) ProtoMessage() {}

func (x *ClaimMarketDepositRequest) ProtoReflect() protoreflect.Message {
	mi := &file_operator_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClaimMarketDepositRequest.ProtoReflect.Descriptor instead.
func (*ClaimMarketDepositRequest) Descriptor() ([]byte, []int) {
	return file_operator_proto_rawDescGZIP(), []int{19}
}

func (x *ClaimMarketDepositRequest) GetMarket() *types.Market {
	if x != nil {
		return x.Market
	}
	return nil
}

func (x *ClaimMarketDepositRequest) GetOutpoints() []*TxOutpoint {
	if x != nil {
		return x.Outpoints
	}
	return nil
}

type ClaimMarketDepositReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ClaimMarketDepositReply) Reset() {
	*x = ClaimMarketDepositReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_operator_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClaimMarketDepositReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClaimMarketDepositReply) ProtoMessage() {}

func (x *ClaimMarketDepositReply) ProtoReflect() protoreflect.Message {
	mi := &file_operator_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClaimMarketDepositReply.ProtoReflect.Descriptor instead.
func (*ClaimMarketDepositReply) Descriptor() ([]byte, []int) {
	return file_operator_proto_rawDescGZIP(), []int{20}
}

type ClaimFeeDepositRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Outpoints []*TxOutpoint `protobuf:"bytes,1,rep,name=outpoints,proto3" json:"outpoints,omitempty"`
}

func (x *ClaimFeeDepositRequest) Reset() {
	*x = ClaimFeeDepositRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_operator_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClaimFeeDepositRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClaimFeeDepositRequest) ProtoMessage() {}

func (x *ClaimFeeDepositRequest) ProtoReflect() protoreflect.Message {
	mi := &file_operator_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClaimFeeDepositRequest.ProtoReflect.Descriptor instead.
func (*ClaimFeeDepositRequest) Descriptor() ([]byte, []int) {
	return file_operator_proto_rawDescGZIP(), []int{21}
}

func (x *ClaimFeeDepositRequest) GetOutpoints() []*TxOutpoint {
	if x != nil {
		return x.Outpoints
	}
	return nil
}

type ClaimFeeDepositReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ClaimFeeDepositReply) Reset() {
	*x = ClaimFeeDepositReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_operator_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClaimFeeDepositReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClaimFeeDepositReply) ProtoMessage() {}

func (x *ClaimFeeDepositReply) ProtoReflect() protoreflect.Message {
	mi := &file_operator_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClaimFeeDepositReply.ProtoReflect.Descriptor instead.
func (*ClaimFeeDepositReply) Descriptor() ([]byte, []int) {
	return file_operator_proto_rawDescGZIP(), []int{22}
}

type OpenMarketRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Market *types.Market `protobuf:"bytes,1,opt,name=market,proto3" json:"market,omitempty"` // Market to be made tradable
}

func (x *OpenMarketRequest) Reset() {
	*x = OpenMarketRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_operator_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpenMarketRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpenMarketRequest) ProtoMessage() {}

func (x *OpenMarketRequest) ProtoReflect() protoreflect.Message {
	mi := &file_operator_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpenMarketRequest.ProtoReflect.Descriptor instead.
func (*OpenMarketRequest) Descriptor() ([]byte, []int) {
	return file_operator_proto_rawDescGZIP(), []int{23}
}

func (x *OpenMarketRequest) GetMarket() *types.Market {
	if x != nil {
		return x.Market
	}
	return nil
}

type OpenMarketReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *OpenMarketReply) Reset() {
	*x = OpenMarketReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_operator_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpenMarketReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpenMarketReply) ProtoMessage() {}

func (x *OpenMarketReply) ProtoReflect() protoreflect.Message {
	mi := &file_operator_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpenMarketReply.ProtoReflect.Descriptor instead.
func (*OpenMarketReply) Descriptor() ([]byte, []int) {
	return file_operator_proto_rawDescGZIP(), []int{24}
}

type CloseMarketRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Market *types.Market `protobuf:"bytes,1,opt,name=market,proto3" json:"market,omitempty"` // Market to be made NOT tradable
}

func (x *CloseMarketRequest) Reset() {
	*x = CloseMarketRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_operator_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CloseMarketRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloseMarketRequest) ProtoMessage() {}

func (x *CloseMarketRequest) ProtoReflect() protoreflect.Message {
	mi := &file_operator_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloseMarketRequest.ProtoReflect.Descriptor instead.
func (*CloseMarketRequest) Descriptor() ([]byte, []int) {
	return file_operator_proto_rawDescGZIP(), []int{25}
}

func (x *CloseMarketRequest) GetMarket() *types.Market {
	if x != nil {
		return x.Market
	}
	return nil
}

type CloseMarketReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CloseMarketReply) Reset() {
	*x = CloseMarketReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_operator_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CloseMarketReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloseMarketReply) ProtoMessage() {}

func (x *CloseMarketReply) ProtoReflect() protoreflect.Message {
	mi := &file_operator_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloseMarketReply.ProtoReflect.Descriptor instead.
func (*CloseMarketReply) Descriptor() ([]byte, []int) {
	return file_operator_proto_rawDescGZIP(), []int{26}
}

type UpdateMarketStrategyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Market to change the strategy of
	Market *types.Market `protobuf:"bytes,1,opt,name=market,proto3" json:"market,omitempty"`
	// Market making strategy to use
	StrategyType StrategyType `protobuf:"varint,2,opt,name=strategy_type,json=strategyType,proto3,enum=StrategyType" json:"strategy_type,omitempty"`
	//
	//JSON string representing additional metadata relative to the chosen strategy.
	Metadata string `protobuf:"bytes,3,opt,name=metadata,proto3" json:"metadata,omitempty"`
}

func (x *UpdateMarketStrategyRequest) Reset() {
	*x = UpdateMarketStrategyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_operator_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateMarketStrategyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMarketStrategyRequest) ProtoMessage() {}

func (x *UpdateMarketStrategyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_operator_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMarketStrategyRequest.ProtoReflect.Descriptor instead.
func (*UpdateMarketStrategyRequest) Descriptor() ([]byte, []int) {
	return file_operator_proto_rawDescGZIP(), []int{27}
}

func (x *UpdateMarketStrategyRequest) GetMarket() *types.Market {
	if x != nil {
		return x.Market
	}
	return nil
}

func (x *UpdateMarketStrategyRequest) GetStrategyType() StrategyType {
	if x != nil {
		return x.StrategyType
	}
	return StrategyType_PLUGGABLE
}

func (x *UpdateMarketStrategyRequest) GetMetadata() string {
	if x != nil {
		return x.Metadata
	}
	return ""
}

type UpdateMarketStrategyReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateMarketStrategyReply) Reset() {
	*x = UpdateMarketStrategyReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_operator_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateMarketStrategyReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMarketStrategyReply) ProtoMessage() {}

func (x *UpdateMarketStrategyReply) ProtoReflect() protoreflect.Message {
	mi := &file_operator_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMarketStrategyReply.ProtoReflect.Descriptor instead.
func (*UpdateMarketStrategyReply) Descriptor() ([]byte, []int) {
	return file_operator_proto_rawDescGZIP(), []int{28}
}

type UpdateMarketPercentageFeeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Market     *types.Market `protobuf:"bytes,1,opt,name=market,proto3" json:"market,omitempty"`
	BasisPoint int64         `protobuf:"varint,2,opt,name=basis_point,json=basisPoint,proto3" json:"basis_point,omitempty"`
}

func (x *UpdateMarketPercentageFeeRequest) Reset() {
	*x = UpdateMarketPercentageFeeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_operator_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateMarketPercentageFeeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMarketPercentageFeeRequest) ProtoMessage() {}

func (x *UpdateMarketPercentageFeeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_operator_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMarketPercentageFeeRequest.ProtoReflect.Descriptor instead.
func (*UpdateMarketPercentageFeeRequest) Descriptor() ([]byte, []int) {
	return file_operator_proto_rawDescGZIP(), []int{29}
}

func (x *UpdateMarketPercentageFeeRequest) GetMarket() *types.Market {
	if x != nil {
		return x.Market
	}
	return nil
}

func (x *UpdateMarketPercentageFeeRequest) GetBasisPoint() int64 {
	if x != nil {
		return x.BasisPoint
	}
	return 0
}

type UpdateMarketFixedFeeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Market *types.Market `protobuf:"bytes,1,opt,name=market,proto3" json:"market,omitempty"`
	Fixed  *types.Fixed  `protobuf:"bytes,2,opt,name=fixed,proto3" json:"fixed,omitempty"`
}

func (x *UpdateMarketFixedFeeRequest) Reset() {
	*x = UpdateMarketFixedFeeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_operator_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateMarketFixedFeeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMarketFixedFeeRequest) ProtoMessage() {}

func (x *UpdateMarketFixedFeeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_operator_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMarketFixedFeeRequest.ProtoReflect.Descriptor instead.
func (*UpdateMarketFixedFeeRequest) Descriptor() ([]byte, []int) {
	return file_operator_proto_rawDescGZIP(), []int{30}
}

func (x *UpdateMarketFixedFeeRequest) GetMarket() *types.Market {
	if x != nil {
		return x.Market
	}
	return nil
}

func (x *UpdateMarketFixedFeeRequest) GetFixed() *types.Fixed {
	if x != nil {
		return x.Fixed
	}
	return nil
}

type UpdateMarketFeeReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MarketWithFee *types.MarketWithFee `protobuf:"bytes,1,opt,name=market_with_fee,json=marketWithFee,proto3" json:"market_with_fee,omitempty"`
}

func (x *UpdateMarketFeeReply) Reset() {
	*x = UpdateMarketFeeReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_operator_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateMarketFeeReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMarketFeeReply) ProtoMessage() {}

func (x *UpdateMarketFeeReply) ProtoReflect() protoreflect.Message {
	mi := &file_operator_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMarketFeeReply.ProtoReflect.Descriptor instead.
func (*UpdateMarketFeeReply) Descriptor() ([]byte, []int) {
	return file_operator_proto_rawDescGZIP(), []int{31}
}

func (x *UpdateMarketFeeReply) GetMarketWithFee() *types.MarketWithFee {
	if x != nil {
		return x.MarketWithFee
	}
	return nil
}

type UpdateMarketPriceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Market to update the price of
	Market *types.Market `protobuf:"bytes,1,opt,name=market,proto3" json:"market,omitempty"`
	// Price to be updated
	Price *types.Price `protobuf:"bytes,2,opt,name=price,proto3" json:"price,omitempty"`
}

func (x *UpdateMarketPriceRequest) Reset() {
	*x = UpdateMarketPriceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_operator_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateMarketPriceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMarketPriceRequest) ProtoMessage() {}

func (x *UpdateMarketPriceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_operator_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMarketPriceRequest.ProtoReflect.Descriptor instead.
func (*UpdateMarketPriceRequest) Descriptor() ([]byte, []int) {
	return file_operator_proto_rawDescGZIP(), []int{32}
}

func (x *UpdateMarketPriceRequest) GetMarket() *types.Market {
	if x != nil {
		return x.Market
	}
	return nil
}

func (x *UpdateMarketPriceRequest) GetPrice() *types.Price {
	if x != nil {
		return x.Price
	}
	return nil
}

type UpdateMarketPriceReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateMarketPriceReply) Reset() {
	*x = UpdateMarketPriceReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_operator_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateMarketPriceReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMarketPriceReply) ProtoMessage() {}

func (x *UpdateMarketPriceReply) ProtoReflect() protoreflect.Message {
	mi := &file_operator_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMarketPriceReply.ProtoReflect.Descriptor instead.
func (*UpdateMarketPriceReply) Descriptor() ([]byte, []int) {
	return file_operator_proto_rawDescGZIP(), []int{33}
}

type WithdrawMarketRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Market from which funds need to be withdrawn
	Market *types.Market `protobuf:"bytes,1,opt,name=market,proto3" json:"market,omitempty"`
	// Amount for base and quote asset to be withdrawn
	BalanceToWithdraw *types.Balance `protobuf:"bytes,2,opt,name=balance_to_withdraw,json=balanceToWithdraw,proto3" json:"balance_to_withdraw,omitempty"`
	// The number of millisatoshis per byte that should be paid for network fees
	MillisatPerByte int64 `protobuf:"varint,3,opt,name=millisat_per_byte,json=millisatPerByte,proto3" json:"millisat_per_byte,omitempty"`
	// The address to send the funds to
	Address string `protobuf:"bytes,4,opt,name=address,proto3" json:"address,omitempty"`
	// Optional: if true the transaction will be pushed to the network
	Push bool `protobuf:"varint,5,opt,name=push,proto3" json:"push,omitempty"`
}

func (x *WithdrawMarketRequest) Reset() {
	*x = WithdrawMarketRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_operator_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WithdrawMarketRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WithdrawMarketRequest) ProtoMessage() {}

func (x *WithdrawMarketRequest) ProtoReflect() protoreflect.Message {
	mi := &file_operator_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WithdrawMarketRequest.ProtoReflect.Descriptor instead.
func (*WithdrawMarketRequest) Descriptor() ([]byte, []int) {
	return file_operator_proto_rawDescGZIP(), []int{34}
}

func (x *WithdrawMarketRequest) GetMarket() *types.Market {
	if x != nil {
		return x.Market
	}
	return nil
}

func (x *WithdrawMarketRequest) GetBalanceToWithdraw() *types.Balance {
	if x != nil {
		return x.BalanceToWithdraw
	}
	return nil
}

func (x *WithdrawMarketRequest) GetMillisatPerByte() int64 {
	if x != nil {
		return x.MillisatPerByte
	}
	return 0
}

func (x *WithdrawMarketRequest) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *WithdrawMarketRequest) GetPush() bool {
	if x != nil {
		return x.Push
	}
	return false
}

type WithdrawMarketReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The serialized transaction if the tx hasn't been broadcasted
	RawTx []byte `protobuf:"bytes,1,opt,name=raw_tx,json=rawTx,proto3" json:"raw_tx,omitempty"`
	// The transaction id on mempool/blockchain if the tx has been broadcasted
	Txid []byte `protobuf:"bytes,2,opt,name=txid,proto3" json:"txid,omitempty"`
}

func (x *WithdrawMarketReply) Reset() {
	*x = WithdrawMarketReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_operator_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WithdrawMarketReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WithdrawMarketReply) ProtoMessage() {}

func (x *WithdrawMarketReply) ProtoReflect() protoreflect.Message {
	mi := &file_operator_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WithdrawMarketReply.ProtoReflect.Descriptor instead.
func (*WithdrawMarketReply) Descriptor() ([]byte, []int) {
	return file_operator_proto_rawDescGZIP(), []int{35}
}

func (x *WithdrawMarketReply) GetRawTx() []byte {
	if x != nil {
		return x.RawTx
	}
	return nil
}

func (x *WithdrawMarketReply) GetTxid() []byte {
	if x != nil {
		return x.Txid
	}
	return nil
}

type WithdrawFeeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Amount of L-BTC to widthdraw expressed in Satoshi
	Amount uint64 `protobuf:"varint,1,opt,name=amount,proto3" json:"amount,omitempty"`
	// The number of millisatoshis per byte that should be paid for network fees
	MillisatsPerByte uint64 `protobuf:"varint,2,opt,name=millisats_per_byte,json=millisatsPerByte,proto3" json:"millisats_per_byte,omitempty"`
	// The address to send the funds to
	Address string `protobuf:"bytes,3,opt,name=address,proto3" json:"address,omitempty"`
	// Optional: if true the transaction will be pushed to the network
	Push bool `protobuf:"varint,4,opt,name=push,proto3" json:"push,omitempty"`
}

func (x *WithdrawFeeRequest) Reset() {
	*x = WithdrawFeeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_operator_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WithdrawFeeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WithdrawFeeRequest) ProtoMessage() {}

func (x *WithdrawFeeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_operator_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WithdrawFeeRequest.ProtoReflect.Descriptor instead.
func (*WithdrawFeeRequest) Descriptor() ([]byte, []int) {
	return file_operator_proto_rawDescGZIP(), []int{36}
}

func (x *WithdrawFeeRequest) GetAmount() uint64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *WithdrawFeeRequest) GetMillisatsPerByte() uint64 {
	if x != nil {
		return x.MillisatsPerByte
	}
	return 0
}

func (x *WithdrawFeeRequest) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *WithdrawFeeRequest) GetPush() bool {
	if x != nil {
		return x.Push
	}
	return false
}

type WithdrawFeeReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The serialized transaction if the tx hasn't been broadcasted
	RawTx []byte `protobuf:"bytes,1,opt,name=raw_tx,json=rawTx,proto3" json:"raw_tx,omitempty"`
	// The transaction id in mempool/blockchain if the tx has been broadcasted
	Txid []byte `protobuf:"bytes,2,opt,name=txid,proto3" json:"txid,omitempty"`
}

func (x *WithdrawFeeReply) Reset() {
	*x = WithdrawFeeReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_operator_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WithdrawFeeReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WithdrawFeeReply) ProtoMessage() {}

func (x *WithdrawFeeReply) ProtoReflect() protoreflect.Message {
	mi := &file_operator_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WithdrawFeeReply.ProtoReflect.Descriptor instead.
func (*WithdrawFeeReply) Descriptor() ([]byte, []int) {
	return file_operator_proto_rawDescGZIP(), []int{37}
}

func (x *WithdrawFeeReply) GetRawTx() []byte {
	if x != nil {
		return x.RawTx
	}
	return nil
}

func (x *WithdrawFeeReply) GetTxid() []byte {
	if x != nil {
		return x.Txid
	}
	return nil
}

type ListTradesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Market *types.Market `protobuf:"bytes,1,opt,name=market,proto3" json:"market,omitempty"`
	Page   *Page         `protobuf:"bytes,2,opt,name=page,proto3" json:"page,omitempty"`
}

func (x *ListTradesRequest) Reset() {
	*x = ListTradesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_operator_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListTradesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTradesRequest) ProtoMessage() {}

func (x *ListTradesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_operator_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTradesRequest.ProtoReflect.Descriptor instead.
func (*ListTradesRequest) Descriptor() ([]byte, []int) {
	return file_operator_proto_rawDescGZIP(), []int{38}
}

func (x *ListTradesRequest) GetMarket() *types.Market {
	if x != nil {
		return x.Market
	}
	return nil
}

func (x *ListTradesRequest) GetPage() *Page {
	if x != nil {
		return x.Page
	}
	return nil
}

type ListTradesReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Trades []*TradeInfo `protobuf:"bytes,1,rep,name=trades,proto3" json:"trades,omitempty"`
}

func (x *ListTradesReply) Reset() {
	*x = ListTradesReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_operator_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListTradesReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTradesReply) ProtoMessage() {}

func (x *ListTradesReply) ProtoReflect() protoreflect.Message {
	mi := &file_operator_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTradesReply.ProtoReflect.Descriptor instead.
func (*ListTradesReply) Descriptor() ([]byte, []int) {
	return file_operator_proto_rawDescGZIP(), []int{39}
}

func (x *ListTradesReply) GetTrades() []*TradeInfo {
	if x != nil {
		return x.Trades
	}
	return nil
}

type ReportMarketFeeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Market *types.Market `protobuf:"bytes,1,opt,name=market,proto3" json:"market,omitempty"`
	Page   *Page         `protobuf:"bytes,2,opt,name=page,proto3" json:"page,omitempty"`
}

func (x *ReportMarketFeeRequest) Reset() {
	*x = ReportMarketFeeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_operator_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReportMarketFeeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReportMarketFeeRequest) ProtoMessage() {}

func (x *ReportMarketFeeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_operator_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReportMarketFeeRequest.ProtoReflect.Descriptor instead.
func (*ReportMarketFeeRequest) Descriptor() ([]byte, []int) {
	return file_operator_proto_rawDescGZIP(), []int{40}
}

func (x *ReportMarketFeeRequest) GetMarket() *types.Market {
	if x != nil {
		return x.Market
	}
	return nil
}

func (x *ReportMarketFeeRequest) GetPage() *Page {
	if x != nil {
		return x.Page
	}
	return nil
}

type ReportMarketFeeReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// List of the all unique fee being collected on each swap.
	CollectedFees []*FeeInfo `protobuf:"bytes,1,rep,name=collected_fees,json=collectedFees,proto3" json:"collected_fees,omitempty"`
	// Map of aggreagated fee count grouped by asset. There should be one unique
	// entry for each asset and the amount should be the aggregated total.
	TotalCollectedFeesPerAsset map[string]int64 `protobuf:"bytes,2,rep,name=total_collected_fees_per_asset,json=totalCollectedFeesPerAsset,proto3" json:"total_collected_fees_per_asset,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
}

func (x *ReportMarketFeeReply) Reset() {
	*x = ReportMarketFeeReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_operator_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReportMarketFeeReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReportMarketFeeReply) ProtoMessage() {}

func (x *ReportMarketFeeReply) ProtoReflect() protoreflect.Message {
	mi := &file_operator_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReportMarketFeeReply.ProtoReflect.Descriptor instead.
func (*ReportMarketFeeReply) Descriptor() ([]byte, []int) {
	return file_operator_proto_rawDescGZIP(), []int{41}
}

func (x *ReportMarketFeeReply) GetCollectedFees() []*FeeInfo {
	if x != nil {
		return x.CollectedFees
	}
	return nil
}

func (x *ReportMarketFeeReply) GetTotalCollectedFeesPerAsset() map[string]int64 {
	if x != nil {
		return x.TotalCollectedFeesPerAsset
	}
	return nil
}

type AddWebhookRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Endpoint string     `protobuf:"bytes,1,opt,name=endpoint,proto3" json:"endpoint,omitempty"`
	Action   ActionType `protobuf:"varint,2,opt,name=action,proto3,enum=ActionType" json:"action,omitempty"`
	Secret   string     `protobuf:"bytes,3,opt,name=secret,proto3" json:"secret,omitempty"`
}

func (x *AddWebhookRequest) Reset() {
	*x = AddWebhookRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_operator_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddWebhookRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddWebhookRequest) ProtoMessage() {}

func (x *AddWebhookRequest) ProtoReflect() protoreflect.Message {
	mi := &file_operator_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddWebhookRequest.ProtoReflect.Descriptor instead.
func (*AddWebhookRequest) Descriptor() ([]byte, []int) {
	return file_operator_proto_rawDescGZIP(), []int{42}
}

func (x *AddWebhookRequest) GetEndpoint() string {
	if x != nil {
		return x.Endpoint
	}
	return ""
}

func (x *AddWebhookRequest) GetAction() ActionType {
	if x != nil {
		return x.Action
	}
	return ActionType_TRADE_SETTLED
}

func (x *AddWebhookRequest) GetSecret() string {
	if x != nil {
		return x.Secret
	}
	return ""
}

type AddWebhookReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *AddWebhookReply) Reset() {
	*x = AddWebhookReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_operator_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddWebhookReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddWebhookReply) ProtoMessage() {}

func (x *AddWebhookReply) ProtoReflect() protoreflect.Message {
	mi := &file_operator_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddWebhookReply.ProtoReflect.Descriptor instead.
func (*AddWebhookReply) Descriptor() ([]byte, []int) {
	return file_operator_proto_rawDescGZIP(), []int{43}
}

func (x *AddWebhookReply) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type RemoveWebhookRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *RemoveWebhookRequest) Reset() {
	*x = RemoveWebhookRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_operator_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveWebhookRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveWebhookRequest) ProtoMessage() {}

func (x *RemoveWebhookRequest) ProtoReflect() protoreflect.Message {
	mi := &file_operator_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveWebhookRequest.ProtoReflect.Descriptor instead.
func (*RemoveWebhookRequest) Descriptor() ([]byte, []int) {
	return file_operator_proto_rawDescGZIP(), []int{44}
}

func (x *RemoveWebhookRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type RemoveWebhookReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RemoveWebhookReply) Reset() {
	*x = RemoveWebhookReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_operator_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveWebhookReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveWebhookReply) ProtoMessage() {}

func (x *RemoveWebhookReply) ProtoReflect() protoreflect.Message {
	mi := &file_operator_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveWebhookReply.ProtoReflect.Descriptor instead.
func (*RemoveWebhookReply) Descriptor() ([]byte, []int) {
	return file_operator_proto_rawDescGZIP(), []int{45}
}

type ListWebhooksRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Action ActionType `protobuf:"varint,1,opt,name=action,proto3,enum=ActionType" json:"action,omitempty"`
}

func (x *ListWebhooksRequest) Reset() {
	*x = ListWebhooksRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_operator_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListWebhooksRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListWebhooksRequest) ProtoMessage() {}

func (x *ListWebhooksRequest) ProtoReflect() protoreflect.Message {
	mi := &file_operator_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListWebhooksRequest.ProtoReflect.Descriptor instead.
func (*ListWebhooksRequest) Descriptor() ([]byte, []int) {
	return file_operator_proto_rawDescGZIP(), []int{46}
}

func (x *ListWebhooksRequest) GetAction() ActionType {
	if x != nil {
		return x.Action
	}
	return ActionType_TRADE_SETTLED
}

type ListWebhooksReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WebhookInfo []*WebhookInfo `protobuf:"bytes,1,rep,name=webhook_info,json=webhookInfo,proto3" json:"webhook_info,omitempty"`
}

func (x *ListWebhooksReply) Reset() {
	*x = ListWebhooksReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_operator_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListWebhooksReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListWebhooksReply) ProtoMessage() {}

func (x *ListWebhooksReply) ProtoReflect() protoreflect.Message {
	mi := &file_operator_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListWebhooksReply.ProtoReflect.Descriptor instead.
func (*ListWebhooksReply) Descriptor() ([]byte, []int) {
	return file_operator_proto_rawDescGZIP(), []int{47}
}

func (x *ListWebhooksReply) GetWebhookInfo() []*WebhookInfo {
	if x != nil {
		return x.WebhookInfo
	}
	return nil
}

type ListDepositsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountIndex int64 `protobuf:"varint,1,opt,name=account_index,json=accountIndex,proto3" json:"account_index,omitempty"`
	Page         *Page `protobuf:"bytes,2,opt,name=page,proto3" json:"page,omitempty"`
}

func (x *ListDepositsRequest) Reset() {
	*x = ListDepositsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_operator_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListDepositsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDepositsRequest) ProtoMessage() {}

func (x *ListDepositsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_operator_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDepositsRequest.ProtoReflect.Descriptor instead.
func (*ListDepositsRequest) Descriptor() ([]byte, []int) {
	return file_operator_proto_rawDescGZIP(), []int{48}
}

func (x *ListDepositsRequest) GetAccountIndex() int64 {
	if x != nil {
		return x.AccountIndex
	}
	return 0
}

func (x *ListDepositsRequest) GetPage() *Page {
	if x != nil {
		return x.Page
	}
	return nil
}

type ListDepositsReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountIndex int64       `protobuf:"varint,1,opt,name=account_index,json=accountIndex,proto3" json:"account_index,omitempty"`
	Deposits     []*UtxoInfo `protobuf:"bytes,2,rep,name=deposits,proto3" json:"deposits,omitempty"`
}

func (x *ListDepositsReply) Reset() {
	*x = ListDepositsReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_operator_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListDepositsReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDepositsReply) ProtoMessage() {}

func (x *ListDepositsReply) ProtoReflect() protoreflect.Message {
	mi := &file_operator_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDepositsReply.ProtoReflect.Descriptor instead.
func (*ListDepositsReply) Descriptor() ([]byte, []int) {
	return file_operator_proto_rawDescGZIP(), []int{49}
}

func (x *ListDepositsReply) GetAccountIndex() int64 {
	if x != nil {
		return x.AccountIndex
	}
	return 0
}

func (x *ListDepositsReply) GetDeposits() []*UtxoInfo {
	if x != nil {
		return x.Deposits
	}
	return nil
}

type ListWithdrawalsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountIndex int64 `protobuf:"varint,1,opt,name=account_index,json=accountIndex,proto3" json:"account_index,omitempty"`
	Page         *Page `protobuf:"bytes,2,opt,name=page,proto3" json:"page,omitempty"`
}

func (x *ListWithdrawalsRequest) Reset() {
	*x = ListWithdrawalsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_operator_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListWithdrawalsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListWithdrawalsRequest) ProtoMessage() {}

func (x *ListWithdrawalsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_operator_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListWithdrawalsRequest.ProtoReflect.Descriptor instead.
func (*ListWithdrawalsRequest) Descriptor() ([]byte, []int) {
	return file_operator_proto_rawDescGZIP(), []int{50}
}

func (x *ListWithdrawalsRequest) GetAccountIndex() int64 {
	if x != nil {
		return x.AccountIndex
	}
	return 0
}

func (x *ListWithdrawalsRequest) GetPage() *Page {
	if x != nil {
		return x.Page
	}
	return nil
}

type ListWithdrawalsReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountIndex int64         `protobuf:"varint,1,opt,name=account_index,json=accountIndex,proto3" json:"account_index,omitempty"`
	Withdrawals  []*Withdrawal `protobuf:"bytes,2,rep,name=withdrawals,proto3" json:"withdrawals,omitempty"`
}

func (x *ListWithdrawalsReply) Reset() {
	*x = ListWithdrawalsReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_operator_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListWithdrawalsReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListWithdrawalsReply) ProtoMessage() {}

func (x *ListWithdrawalsReply) ProtoReflect() protoreflect.Message {
	mi := &file_operator_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListWithdrawalsReply.ProtoReflect.Descriptor instead.
func (*ListWithdrawalsReply) Descriptor() ([]byte, []int) {
	return file_operator_proto_rawDescGZIP(), []int{51}
}

func (x *ListWithdrawalsReply) GetAccountIndex() int64 {
	if x != nil {
		return x.AccountIndex
	}
	return 0
}

func (x *ListWithdrawalsReply) GetWithdrawals() []*Withdrawal {
	if x != nil {
		return x.Withdrawals
	}
	return nil
}

type AccountInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountIndex        uint32 `protobuf:"varint,1,opt,name=account_index,json=accountIndex,proto3" json:"account_index,omitempty"`
	DerivationPath      string `protobuf:"bytes,2,opt,name=derivation_path,json=derivationPath,proto3" json:"derivation_path,omitempty"`
	Xpub                string `protobuf:"bytes,3,opt,name=xpub,proto3" json:"xpub,omitempty"`
	LastExternalDerived uint32 `protobuf:"varint,4,opt,name=last_external_derived,json=lastExternalDerived,proto3" json:"last_external_derived,omitempty"`
	LastInternalDerived uint32 `protobuf:"varint,5,opt,name=last_internal_derived,json=lastInternalDerived,proto3" json:"last_internal_derived,omitempty"`
}

func (x *AccountInfo) Reset() {
	*x = AccountInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_operator_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountInfo) ProtoMessage() {}

func (x *AccountInfo) ProtoReflect() protoreflect.Message {
	mi := &file_operator_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountInfo.ProtoReflect.Descriptor instead.
func (*AccountInfo) Descriptor() ([]byte, []int) {
	return file_operator_proto_rawDescGZIP(), []int{52}
}

func (x *AccountInfo) GetAccountIndex() uint32 {
	if x != nil {
		return x.AccountIndex
	}
	return 0
}

func (x *AccountInfo) GetDerivationPath() string {
	if x != nil {
		return x.DerivationPath
	}
	return ""
}

func (x *AccountInfo) GetXpub() string {
	if x != nil {
		return x.Xpub
	}
	return ""
}

func (x *AccountInfo) GetLastExternalDerived() uint32 {
	if x != nil {
		return x.LastExternalDerived
	}
	return 0
}

func (x *AccountInfo) GetLastInternalDerived() uint32 {
	if x != nil {
		return x.LastInternalDerived
	}
	return 0
}

type MarketInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Market       *types.Market  `protobuf:"bytes,1,opt,name=market,proto3" json:"market,omitempty"`
	Fee          *types.Fee     `protobuf:"bytes,2,opt,name=fee,proto3" json:"fee,omitempty"`
	Tradable     bool           `protobuf:"varint,3,opt,name=tradable,proto3" json:"tradable,omitempty"`
	StrategyType StrategyType   `protobuf:"varint,4,opt,name=strategy_type,json=strategyType,proto3,enum=StrategyType" json:"strategy_type,omitempty"`
	AccountIndex uint64         `protobuf:"varint,5,opt,name=account_index,json=accountIndex,proto3" json:"account_index,omitempty"`
	Price        *types.Price   `protobuf:"bytes,6,opt,name=price,proto3" json:"price,omitempty"`
	Balance      *types.Balance `protobuf:"bytes,7,opt,name=balance,proto3" json:"balance,omitempty"`
}

func (x *MarketInfo) Reset() {
	*x = MarketInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_operator_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MarketInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarketInfo) ProtoMessage() {}

func (x *MarketInfo) ProtoReflect() protoreflect.Message {
	mi := &file_operator_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarketInfo.ProtoReflect.Descriptor instead.
func (*MarketInfo) Descriptor() ([]byte, []int) {
	return file_operator_proto_rawDescGZIP(), []int{53}
}

func (x *MarketInfo) GetMarket() *types.Market {
	if x != nil {
		return x.Market
	}
	return nil
}

func (x *MarketInfo) GetFee() *types.Fee {
	if x != nil {
		return x.Fee
	}
	return nil
}

func (x *MarketInfo) GetTradable() bool {
	if x != nil {
		return x.Tradable
	}
	return false
}

func (x *MarketInfo) GetStrategyType() StrategyType {
	if x != nil {
		return x.StrategyType
	}
	return StrategyType_PLUGGABLE
}

func (x *MarketInfo) GetAccountIndex() uint64 {
	if x != nil {
		return x.AccountIndex
	}
	return 0
}

func (x *MarketInfo) GetPrice() *types.Price {
	if x != nil {
		return x.Price
	}
	return nil
}

func (x *MarketInfo) GetBalance() *types.Balance {
	if x != nil {
		return x.Balance
	}
	return nil
}

type TradeStatusInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status TradeStatus `protobuf:"varint,1,opt,name=status,proto3,enum=TradeStatus" json:"status,omitempty"`
	Failed bool        `protobuf:"varint,2,opt,name=failed,proto3" json:"failed,omitempty"`
}

func (x *TradeStatusInfo) Reset() {
	*x = TradeStatusInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_operator_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TradeStatusInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TradeStatusInfo) ProtoMessage() {}

func (x *TradeStatusInfo) ProtoReflect() protoreflect.Message {
	mi := &file_operator_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TradeStatusInfo.ProtoReflect.Descriptor instead.
func (*TradeStatusInfo) Descriptor() ([]byte, []int) {
	return file_operator_proto_rawDescGZIP(), []int{54}
}

func (x *TradeStatusInfo) GetStatus() TradeStatus {
	if x != nil {
		return x.Status
	}
	return TradeStatus_UNDEFINED
}

func (x *TradeStatusInfo) GetFailed() bool {
	if x != nil {
		return x.Failed
	}
	return false
}

type SwapInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The proposer's quantity
	AmountP uint64 `protobuf:"varint,1,opt,name=amount_p,json=amountP,proto3" json:"amount_p,omitempty"`
	// The proposer's asset hash
	AssetP string `protobuf:"bytes,2,opt,name=asset_p,json=assetP,proto3" json:"asset_p,omitempty"`
	// The responder's quantity
	AmountR uint64 `protobuf:"varint,3,opt,name=amount_r,json=amountR,proto3" json:"amount_r,omitempty"`
	// The responder's asset hash
	AssetR string `protobuf:"bytes,4,opt,name=asset_r,json=assetR,proto3" json:"asset_r,omitempty"`
}

func (x *SwapInfo) Reset() {
	*x = SwapInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_operator_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SwapInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SwapInfo) ProtoMessage() {}

func (x *SwapInfo) ProtoReflect() protoreflect.Message {
	mi := &file_operator_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SwapInfo.ProtoReflect.Descriptor instead.
func (*SwapInfo) Descriptor() ([]byte, []int) {
	return file_operator_proto_rawDescGZIP(), []int{55}
}

func (x *SwapInfo) GetAmountP() uint64 {
	if x != nil {
		return x.AmountP
	}
	return 0
}

func (x *SwapInfo) GetAssetP() string {
	if x != nil {
		return x.AssetP
	}
	return ""
}

func (x *SwapInfo) GetAmountR() uint64 {
	if x != nil {
		return x.AmountR
	}
	return 0
}

func (x *SwapInfo) GetAssetR() string {
	if x != nil {
		return x.AssetR
	}
	return ""
}

type SwapFailInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FailureCode    uint32 `protobuf:"varint,1,opt,name=failure_code,json=failureCode,proto3" json:"failure_code,omitempty"`
	FailureMessage string `protobuf:"bytes,2,opt,name=failure_message,json=failureMessage,proto3" json:"failure_message,omitempty"`
}

func (x *SwapFailInfo) Reset() {
	*x = SwapFailInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_operator_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SwapFailInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SwapFailInfo) ProtoMessage() {}

func (x *SwapFailInfo) ProtoReflect() protoreflect.Message {
	mi := &file_operator_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SwapFailInfo.ProtoReflect.Descriptor instead.
func (*SwapFailInfo) Descriptor() ([]byte, []int) {
	return file_operator_proto_rawDescGZIP(), []int{56}
}

func (x *SwapFailInfo) GetFailureCode() uint32 {
	if x != nil {
		return x.FailureCode
	}
	return 0
}

func (x *SwapFailInfo) GetFailureMessage() string {
	if x != nil {
		return x.FailureMessage
	}
	return ""
}

type TradePrice struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BasePrice  float64 `protobuf:"fixed64,1,opt,name=base_price,json=basePrice,proto3" json:"base_price,omitempty"`
	QuotePrice float64 `protobuf:"fixed64,2,opt,name=quote_price,json=quotePrice,proto3" json:"quote_price,omitempty"`
}

func (x *TradePrice) Reset() {
	*x = TradePrice{}
	if protoimpl.UnsafeEnabled {
		mi := &file_operator_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TradePrice) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TradePrice) ProtoMessage() {}

func (x *TradePrice) ProtoReflect() protoreflect.Message {
	mi := &file_operator_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TradePrice.ProtoReflect.Descriptor instead.
func (*TradePrice) Descriptor() ([]byte, []int) {
	return file_operator_proto_rawDescGZIP(), []int{57}
}

func (x *TradePrice) GetBasePrice() float64 {
	if x != nil {
		return x.BasePrice
	}
	return 0
}

func (x *TradePrice) GetQuotePrice() float64 {
	if x != nil {
		return x.QuotePrice
	}
	return 0
}

type TradeInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The id of the trade
	TradeId string `protobuf:"bytes,1,opt,name=trade_id,json=tradeId,proto3" json:"trade_id,omitempty"`
	// The info about the status of the trade
	Status *TradeStatusInfo `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	// The info about the swap
	SwapInfo *SwapInfo `protobuf:"bytes,3,opt,name=swap_info,json=swapInfo,proto3" json:"swap_info,omitempty"`
	// The info of an eventually failed swap
	FailInfo *SwapFailInfo `protobuf:"bytes,4,opt,name=fail_info,json=failInfo,proto3" json:"fail_info,omitempty"`
	// The collected fee on the current swap
	MarketWithFee *types.MarketWithFee `protobuf:"bytes,5,opt,name=market_with_fee,json=marketWithFee,proto3" json:"market_with_fee,omitempty"`
	// The prices of the trade at request time
	Price *TradePrice `protobuf:"bytes,6,opt,name=price,proto3" json:"price,omitempty"`
	// The eventual tx url with blinders in case the trade is settled
	TxUrl string `protobuf:"bytes,7,opt,name=tx_url,json=txUrl,proto3" json:"tx_url,omitempty"`
	// SwapRequest unix timestamp
	RequestTimeUnix uint64 `protobuf:"varint,8,opt,name=request_time_unix,json=requestTimeUnix,proto3" json:"request_time_unix,omitempty"`
	// SwapAccpet unix timestamp
	AcceptTimeUnix uint64 `protobuf:"varint,9,opt,name=accept_time_unix,json=acceptTimeUnix,proto3" json:"accept_time_unix,omitempty"`
	// SwapComplete unix timestamp
	CompleteTimeUnix uint64 `protobuf:"varint,10,opt,name=complete_time_unix,json=completeTimeUnix,proto3" json:"complete_time_unix,omitempty"`
	// Settlement unix timestamp
	SettleTimeUnix uint64 `protobuf:"varint,11,opt,name=settle_time_unix,json=settleTimeUnix,proto3" json:"settle_time_unix,omitempty"`
	// Expiration unix timestamp
	ExpiryTimeUnix uint64 `protobuf:"varint,12,opt,name=expiry_time_unix,json=expiryTimeUnix,proto3" json:"expiry_time_unix,omitempty"`
	// SwapRequest UTC timestamp
	RequestTimeUtc string `protobuf:"bytes,13,opt,name=request_time_utc,json=requestTimeUtc,proto3" json:"request_time_utc,omitempty"`
	// SwapAccept UTC timestamp
	AcceptTimeUtc string `protobuf:"bytes,14,opt,name=accept_time_utc,json=acceptTimeUtc,proto3" json:"accept_time_utc,omitempty"`
	// SwapComplete UTC timestamp
	CompleteTimeUtc string `protobuf:"bytes,15,opt,name=complete_time_utc,json=completeTimeUtc,proto3" json:"complete_time_utc,omitempty"`
	// Settlement UTC timestamp
	SettleTimeUtc string `protobuf:"bytes,16,opt,name=settle_time_utc,json=settleTimeUtc,proto3" json:"settle_time_utc,omitempty"`
	// Expiration UTC timestamp
	ExpiryTimeUtc string `protobuf:"bytes,17,opt,name=expiry_time_utc,json=expiryTimeUtc,proto3" json:"expiry_time_utc,omitempty"`
}

func (x *TradeInfo) Reset() {
	*x = TradeInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_operator_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TradeInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TradeInfo) ProtoMessage() {}

func (x *TradeInfo) ProtoReflect() protoreflect.Message {
	mi := &file_operator_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TradeInfo.ProtoReflect.Descriptor instead.
func (*TradeInfo) Descriptor() ([]byte, []int) {
	return file_operator_proto_rawDescGZIP(), []int{58}
}

func (x *TradeInfo) GetTradeId() string {
	if x != nil {
		return x.TradeId
	}
	return ""
}

func (x *TradeInfo) GetStatus() *TradeStatusInfo {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *TradeInfo) GetSwapInfo() *SwapInfo {
	if x != nil {
		return x.SwapInfo
	}
	return nil
}

func (x *TradeInfo) GetFailInfo() *SwapFailInfo {
	if x != nil {
		return x.FailInfo
	}
	return nil
}

func (x *TradeInfo) GetMarketWithFee() *types.MarketWithFee {
	if x != nil {
		return x.MarketWithFee
	}
	return nil
}

func (x *TradeInfo) GetPrice() *TradePrice {
	if x != nil {
		return x.Price
	}
	return nil
}

func (x *TradeInfo) GetTxUrl() string {
	if x != nil {
		return x.TxUrl
	}
	return ""
}

func (x *TradeInfo) GetRequestTimeUnix() uint64 {
	if x != nil {
		return x.RequestTimeUnix
	}
	return 0
}

func (x *TradeInfo) GetAcceptTimeUnix() uint64 {
	if x != nil {
		return x.AcceptTimeUnix
	}
	return 0
}

func (x *TradeInfo) GetCompleteTimeUnix() uint64 {
	if x != nil {
		return x.CompleteTimeUnix
	}
	return 0
}

func (x *TradeInfo) GetSettleTimeUnix() uint64 {
	if x != nil {
		return x.SettleTimeUnix
	}
	return 0
}

func (x *TradeInfo) GetExpiryTimeUnix() uint64 {
	if x != nil {
		return x.ExpiryTimeUnix
	}
	return 0
}

func (x *TradeInfo) GetRequestTimeUtc() string {
	if x != nil {
		return x.RequestTimeUtc
	}
	return ""
}

func (x *TradeInfo) GetAcceptTimeUtc() string {
	if x != nil {
		return x.AcceptTimeUtc
	}
	return ""
}

func (x *TradeInfo) GetCompleteTimeUtc() string {
	if x != nil {
		return x.CompleteTimeUtc
	}
	return ""
}

func (x *TradeInfo) GetSettleTimeUtc() string {
	if x != nil {
		return x.SettleTimeUtc
	}
	return ""
}

func (x *TradeInfo) GetExpiryTimeUtc() string {
	if x != nil {
		return x.ExpiryTimeUtc
	}
	return ""
}

type FeeInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TradeId             string  `protobuf:"bytes,1,opt,name=trade_id,json=tradeId,proto3" json:"trade_id,omitempty"`
	BasisPoint          int64   `protobuf:"varint,2,opt,name=basis_point,json=basisPoint,proto3" json:"basis_point,omitempty"`
	Asset               string  `protobuf:"bytes,3,opt,name=asset,proto3" json:"asset,omitempty"`
	PercentageFeeAmount uint64  `protobuf:"varint,4,opt,name=percentage_fee_amount,json=percentageFeeAmount,proto3" json:"percentage_fee_amount,omitempty"`
	FixedFeeAmount      uint64  `protobuf:"varint,5,opt,name=fixed_fee_amount,json=fixedFeeAmount,proto3" json:"fixed_fee_amount,omitempty"`
	MarketPrice         float32 `protobuf:"fixed32,6,opt,name=market_price,json=marketPrice,proto3" json:"market_price,omitempty"`
}

func (x *FeeInfo) Reset() {
	*x = FeeInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_operator_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FeeInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FeeInfo) ProtoMessage() {}

func (x *FeeInfo) ProtoReflect() protoreflect.Message {
	mi := &file_operator_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FeeInfo.ProtoReflect.Descriptor instead.
func (*FeeInfo) Descriptor() ([]byte, []int) {
	return file_operator_proto_rawDescGZIP(), []int{59}
}

func (x *FeeInfo) GetTradeId() string {
	if x != nil {
		return x.TradeId
	}
	return ""
}

func (x *FeeInfo) GetBasisPoint() int64 {
	if x != nil {
		return x.BasisPoint
	}
	return 0
}

func (x *FeeInfo) GetAsset() string {
	if x != nil {
		return x.Asset
	}
	return ""
}

func (x *FeeInfo) GetPercentageFeeAmount() uint64 {
	if x != nil {
		return x.PercentageFeeAmount
	}
	return 0
}

func (x *FeeInfo) GetFixedFeeAmount() uint64 {
	if x != nil {
		return x.FixedFeeAmount
	}
	return 0
}

func (x *FeeInfo) GetMarketPrice() float32 {
	if x != nil {
		return x.MarketPrice
	}
	return 0
}

type TxOutpoint struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hash  string `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`
	Index int32  `protobuf:"varint,2,opt,name=index,proto3" json:"index,omitempty"`
}

func (x *TxOutpoint) Reset() {
	*x = TxOutpoint{}
	if protoimpl.UnsafeEnabled {
		mi := &file_operator_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TxOutpoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TxOutpoint) ProtoMessage() {}

func (x *TxOutpoint) ProtoReflect() protoreflect.Message {
	mi := &file_operator_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TxOutpoint.ProtoReflect.Descriptor instead.
func (*TxOutpoint) Descriptor() ([]byte, []int) {
	return file_operator_proto_rawDescGZIP(), []int{60}
}

func (x *TxOutpoint) GetHash() string {
	if x != nil {
		return x.Hash
	}
	return ""
}

func (x *TxOutpoint) GetIndex() int32 {
	if x != nil {
		return x.Index
	}
	return 0
}

type WebhookInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Endpoint  string `protobuf:"bytes,2,opt,name=endpoint,proto3" json:"endpoint,omitempty"`
	IsSecured bool   `protobuf:"varint,3,opt,name=is_secured,json=isSecured,proto3" json:"is_secured,omitempty"`
}

func (x *WebhookInfo) Reset() {
	*x = WebhookInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_operator_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WebhookInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WebhookInfo) ProtoMessage() {}

func (x *WebhookInfo) ProtoReflect() protoreflect.Message {
	mi := &file_operator_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WebhookInfo.ProtoReflect.Descriptor instead.
func (*WebhookInfo) Descriptor() ([]byte, []int) {
	return file_operator_proto_rawDescGZIP(), []int{61}
}

func (x *WebhookInfo) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *WebhookInfo) GetEndpoint() string {
	if x != nil {
		return x.Endpoint
	}
	return ""
}

func (x *WebhookInfo) GetIsSecured() bool {
	if x != nil {
		return x.IsSecured
	}
	return false
}

type Withdrawal struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TxId            string `protobuf:"bytes,1,opt,name=tx_id,json=txId,proto3" json:"tx_id,omitempty"`
	BaseAmount      uint64 `protobuf:"varint,2,opt,name=base_amount,json=baseAmount,proto3" json:"base_amount,omitempty"`
	QuoteAmount     uint64 `protobuf:"varint,3,opt,name=quote_amount,json=quoteAmount,proto3" json:"quote_amount,omitempty"`
	MillisatPerByte int64  `protobuf:"varint,4,opt,name=millisat_per_byte,json=millisatPerByte,proto3" json:"millisat_per_byte,omitempty"`
	Address         string `protobuf:"bytes,5,opt,name=address,proto3" json:"address,omitempty"`
}

func (x *Withdrawal) Reset() {
	*x = Withdrawal{}
	if protoimpl.UnsafeEnabled {
		mi := &file_operator_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Withdrawal) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Withdrawal) ProtoMessage() {}

func (x *Withdrawal) ProtoReflect() protoreflect.Message {
	mi := &file_operator_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Withdrawal.ProtoReflect.Descriptor instead.
func (*Withdrawal) Descriptor() ([]byte, []int) {
	return file_operator_proto_rawDescGZIP(), []int{62}
}

func (x *Withdrawal) GetTxId() string {
	if x != nil {
		return x.TxId
	}
	return ""
}

func (x *Withdrawal) GetBaseAmount() uint64 {
	if x != nil {
		return x.BaseAmount
	}
	return 0
}

func (x *Withdrawal) GetQuoteAmount() uint64 {
	if x != nil {
		return x.QuoteAmount
	}
	return 0
}

func (x *Withdrawal) GetMillisatPerByte() int64 {
	if x != nil {
		return x.MillisatPerByte
	}
	return 0
}

func (x *Withdrawal) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

type Page struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PageNumber int64 `protobuf:"varint,1,opt,name=page_number,json=pageNumber,proto3" json:"page_number,omitempty"`
	PageSize   int64 `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
}

func (x *Page) Reset() {
	*x = Page{}
	if protoimpl.UnsafeEnabled {
		mi := &file_operator_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Page) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Page) ProtoMessage() {}

func (x *Page) ProtoReflect() protoreflect.Message {
	mi := &file_operator_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Page.ProtoReflect.Descriptor instead.
func (*Page) Descriptor() ([]byte, []int) {
	return file_operator_proto_rawDescGZIP(), []int{63}
}

func (x *Page) GetPageNumber() int64 {
	if x != nil {
		return x.PageNumber
	}
	return 0
}

func (x *Page) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

var File_operator_proto protoreflect.FileDescriptor

var file_operator_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x0b, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x10, 0x0a,
	0x0e, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22,
	0x8c, 0x01, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x12, 0x1b, 0x0a, 0x09, 0x72, 0x6f, 0x6f, 0x74, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x6f, 0x6f, 0x74, 0x50, 0x61, 0x74, 0x68, 0x12, 0x2e, 0x0a,
	0x13, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x62, 0x6c, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67,
	0x5f, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x6d, 0x61, 0x73, 0x74,
	0x65, 0x72, 0x42, 0x6c, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x4b, 0x65, 0x79, 0x12, 0x2f, 0x0a,
	0x0c, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x38,
	0x0a, 0x11, 0x44, 0x72, 0x6f, 0x70, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69,
	0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x22, 0x11, 0x0a, 0x0f, 0x44, 0x72, 0x6f, 0x70,
	0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x52, 0x0a, 0x10, 0x4c,
	0x69, 0x73, 0x74, 0x55, 0x74, 0x78, 0x6f, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x23, 0x0a, 0x0d, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49,
	0x6e, 0x64, 0x65, 0x78, 0x12, 0x19, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x05, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x22,
	0x7b, 0x0a, 0x0e, 0x4c, 0x69, 0x73, 0x74, 0x55, 0x74, 0x78, 0x6f, 0x73, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x12, 0x25, 0x0a, 0x08, 0x75, 0x6e, 0x73, 0x70, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x55, 0x74, 0x78, 0x6f, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08,
	0x75, 0x6e, 0x73, 0x70, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x21, 0x0a, 0x06, 0x73, 0x70, 0x65, 0x6e,
	0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x55, 0x74, 0x78, 0x6f, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x06, 0x73, 0x70, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x1f, 0x0a, 0x05, 0x6c,
	0x6f, 0x63, 0x6b, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x55, 0x74, 0x78,
	0x6f, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x22, 0x5f, 0x0a, 0x08,
	0x55, 0x74, 0x78, 0x6f, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x27, 0x0a, 0x08, 0x6f, 0x75, 0x74, 0x70,
	0x6f, 0x69, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x54, 0x78, 0x4f,
	0x75, 0x74, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x08, 0x6f, 0x75, 0x74, 0x70, 0x6f, 0x69, 0x6e,
	0x74, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x73, 0x73, 0x65, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x73, 0x73, 0x65, 0x74, 0x22, 0x14, 0x0a,
	0x12, 0x52, 0x65, 0x6c, 0x6f, 0x61, 0x64, 0x55, 0x74, 0x78, 0x6f, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x22, 0x12, 0x0a, 0x10, 0x52, 0x65, 0x6c, 0x6f, 0x61, 0x64, 0x55, 0x74, 0x78,
	0x6f, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x61, 0x0a, 0x14, 0x44, 0x65, 0x70, 0x6f, 0x73,
	0x69, 0x74, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1f, 0x0a, 0x06, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x07, 0x2e, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x52, 0x06, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74,
	0x12, 0x28, 0x0a, 0x10, 0x6e, 0x75, 0x6d, 0x5f, 0x6f, 0x66, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x6e, 0x75, 0x6d, 0x4f,
	0x66, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x22, 0x32, 0x0a, 0x12, 0x44, 0x65,
	0x70, 0x6f, 0x73, 0x69, 0x74, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x12, 0x1c, 0x0a, 0x09, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x09, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x22, 0x3b,
	0x0a, 0x18, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x4d, 0x61, 0x72,
	0x6b, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x06, 0x6d, 0x61,
	0x72, 0x6b, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x07, 0x2e, 0x4d, 0x61, 0x72,
	0x6b, 0x65, 0x74, 0x52, 0x06, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x22, 0x32, 0x0a, 0x16, 0x4c,
	0x69, 0x73, 0x74, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22,
	0x44, 0x0a, 0x18, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x46, 0x65, 0x65, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x28, 0x0a, 0x10, 0x6e,
	0x75, 0x6d, 0x5f, 0x6f, 0x66, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x6e, 0x75, 0x6d, 0x4f, 0x66, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x65, 0x73, 0x22, 0x6c, 0x0a, 0x16, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74,
	0x46, 0x65, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12,
	0x52, 0x0a, 0x19, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x77, 0x69, 0x74, 0x68, 0x5f,
	0x62, 0x6c, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x17, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x57, 0x69, 0x74, 0x68,
	0x42, 0x6c, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x4b, 0x65, 0x79, 0x52, 0x16, 0x61, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x57, 0x69, 0x74, 0x68, 0x42, 0x6c, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67,
	0x4b, 0x65, 0x79, 0x22, 0x1a, 0x0a, 0x18, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x46, 0x65,
	0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22,
	0x32, 0x0a, 0x16, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x46, 0x65, 0x65, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x61, 0x6c,
	0x61, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x62, 0x61, 0x6c, 0x61,
	0x6e, 0x63, 0x65, 0x22, 0x13, 0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x61, 0x72, 0x6b, 0x65,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x38, 0x0a, 0x0f, 0x4c, 0x69, 0x73, 0x74,
	0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x25, 0x0a, 0x07, 0x6d,
	0x61, 0x72, 0x6b, 0x65, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x4d,
	0x61, 0x72, 0x6b, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x07, 0x6d, 0x61, 0x72, 0x6b, 0x65,
	0x74, 0x73, 0x22, 0x67, 0x0a, 0x19, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x4d, 0x61, 0x72, 0x6b, 0x65,
	0x74, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1f, 0x0a, 0x06, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x07, 0x2e, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x52, 0x06, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74,
	0x12, 0x29, 0x0a, 0x09, 0x6f, 0x75, 0x74, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x54, 0x78, 0x4f, 0x75, 0x74, 0x70, 0x6f, 0x69, 0x6e, 0x74,
	0x52, 0x09, 0x6f, 0x75, 0x74, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x22, 0x19, 0x0a, 0x17, 0x43,
	0x6c, 0x61, 0x69, 0x6d, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69,
	0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x43, 0x0a, 0x16, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x46,
	0x65, 0x65, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x29, 0x0a, 0x09, 0x6f, 0x75, 0x74, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x54, 0x78, 0x4f, 0x75, 0x74, 0x70, 0x6f, 0x69, 0x6e, 0x74,
	0x52, 0x09, 0x6f, 0x75, 0x74, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x22, 0x16, 0x0a, 0x14, 0x43,
	0x6c, 0x61, 0x69, 0x6d, 0x46, 0x65, 0x65, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x22, 0x34, 0x0a, 0x11, 0x4f, 0x70, 0x65, 0x6e, 0x4d, 0x61, 0x72, 0x6b, 0x65,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x06, 0x6d, 0x61, 0x72, 0x6b,
	0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x07, 0x2e, 0x4d, 0x61, 0x72, 0x6b, 0x65,
	0x74, 0x52, 0x06, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x22, 0x11, 0x0a, 0x0f, 0x4f, 0x70, 0x65,
	0x6e, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x35, 0x0a, 0x12,
	0x43, 0x6c, 0x6f, 0x73, 0x65, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1f, 0x0a, 0x06, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x07, 0x2e, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x52, 0x06, 0x6d, 0x61, 0x72,
	0x6b, 0x65, 0x74, 0x22, 0x12, 0x0a, 0x10, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x4d, 0x61, 0x72, 0x6b,
	0x65, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x8e, 0x01, 0x0a, 0x1b, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x06, 0x6d, 0x61, 0x72, 0x6b, 0x65,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x07, 0x2e, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74,
	0x52, 0x06, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x12, 0x32, 0x0a, 0x0d, 0x73, 0x74, 0x72, 0x61,
	0x74, 0x65, 0x67, 0x79, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x0d, 0x2e, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0c,
	0x73, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x22, 0x1b, 0x0a, 0x19, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x64, 0x0a, 0x20, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d,
	0x61, 0x72, 0x6b, 0x65, 0x74, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x46,
	0x65, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x06, 0x6d, 0x61, 0x72,
	0x6b, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x07, 0x2e, 0x4d, 0x61, 0x72, 0x6b,
	0x65, 0x74, 0x52, 0x06, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x62, 0x61,
	0x73, 0x69, 0x73, 0x5f, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0a, 0x62, 0x61, 0x73, 0x69, 0x73, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x22, 0x5c, 0x0a, 0x1b, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x46, 0x69, 0x78, 0x65, 0x64,
	0x46, 0x65, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x06, 0x6d, 0x61,
	0x72, 0x6b, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x07, 0x2e, 0x4d, 0x61, 0x72,
	0x6b, 0x65, 0x74, 0x52, 0x06, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x12, 0x1c, 0x0a, 0x05, 0x66,
	0x69, 0x78, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x06, 0x2e, 0x46, 0x69, 0x78,
	0x65, 0x64, 0x52, 0x05, 0x66, 0x69, 0x78, 0x65, 0x64, 0x22, 0x4e, 0x0a, 0x14, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x46, 0x65, 0x65, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x12, 0x36, 0x0a, 0x0f, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x5f, 0x77, 0x69, 0x74, 0x68,
	0x5f, 0x66, 0x65, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x4d, 0x61, 0x72,
	0x6b, 0x65, 0x74, 0x57, 0x69, 0x74, 0x68, 0x46, 0x65, 0x65, 0x52, 0x0d, 0x6d, 0x61, 0x72, 0x6b,
	0x65, 0x74, 0x57, 0x69, 0x74, 0x68, 0x46, 0x65, 0x65, 0x22, 0x59, 0x0a, 0x18, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x06, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x07, 0x2e, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x52, 0x06,
	0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x12, 0x1c, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x06, 0x2e, 0x50, 0x72, 0x69, 0x63, 0x65, 0x52, 0x05, 0x70,
	0x72, 0x69, 0x63, 0x65, 0x22, 0x18, 0x0a, 0x16, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x61,
	0x72, 0x6b, 0x65, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0xcc,
	0x01, 0x0a, 0x15, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x4d, 0x61, 0x72, 0x6b, 0x65,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x06, 0x6d, 0x61, 0x72, 0x6b,
	0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x07, 0x2e, 0x4d, 0x61, 0x72, 0x6b, 0x65,
	0x74, 0x52, 0x06, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x12, 0x38, 0x0a, 0x13, 0x62, 0x61, 0x6c,
	0x61, 0x6e, 0x63, 0x65, 0x5f, 0x74, 0x6f, 0x5f, 0x77, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65,
	0x52, 0x11, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x54, 0x6f, 0x57, 0x69, 0x74, 0x68, 0x64,
	0x72, 0x61, 0x77, 0x12, 0x2a, 0x0a, 0x11, 0x6d, 0x69, 0x6c, 0x6c, 0x69, 0x73, 0x61, 0x74, 0x5f,
	0x70, 0x65, 0x72, 0x5f, 0x62, 0x79, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f,
	0x6d, 0x69, 0x6c, 0x6c, 0x69, 0x73, 0x61, 0x74, 0x50, 0x65, 0x72, 0x42, 0x79, 0x74, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x75, 0x73,
	0x68, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x70, 0x75, 0x73, 0x68, 0x22, 0x40, 0x0a,
	0x13, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x12, 0x15, 0x0a, 0x06, 0x72, 0x61, 0x77, 0x5f, 0x74, 0x78, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x72, 0x61, 0x77, 0x54, 0x78, 0x12, 0x12, 0x0a, 0x04, 0x74,
	0x78, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x74, 0x78, 0x69, 0x64, 0x22,
	0x88, 0x01, 0x0a, 0x12, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x46, 0x65, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2c,
	0x0a, 0x12, 0x6d, 0x69, 0x6c, 0x6c, 0x69, 0x73, 0x61, 0x74, 0x73, 0x5f, 0x70, 0x65, 0x72, 0x5f,
	0x62, 0x79, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x10, 0x6d, 0x69, 0x6c, 0x6c,
	0x69, 0x73, 0x61, 0x74, 0x73, 0x50, 0x65, 0x72, 0x42, 0x79, 0x74, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x75, 0x73, 0x68, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x70, 0x75, 0x73, 0x68, 0x22, 0x3d, 0x0a, 0x10, 0x57, 0x69,
	0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x46, 0x65, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x15,
	0x0a, 0x06, 0x72, 0x61, 0x77, 0x5f, 0x74, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05,
	0x72, 0x61, 0x77, 0x54, 0x78, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x78, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x04, 0x74, 0x78, 0x69, 0x64, 0x22, 0x4f, 0x0a, 0x11, 0x4c, 0x69, 0x73,
	0x74, 0x54, 0x72, 0x61, 0x64, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f,
	0x0a, 0x06, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x07,
	0x2e, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x52, 0x06, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x12,
	0x19, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x05, 0x2e,
	0x50, 0x61, 0x67, 0x65, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x22, 0x35, 0x0a, 0x0f, 0x4c, 0x69,
	0x73, 0x74, 0x54, 0x72, 0x61, 0x64, 0x65, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x22, 0x0a,
	0x06, 0x74, 0x72, 0x61, 0x64, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0a, 0x2e,
	0x54, 0x72, 0x61, 0x64, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x06, 0x74, 0x72, 0x61, 0x64, 0x65,
	0x73, 0x22, 0x54, 0x0a, 0x16, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x4d, 0x61, 0x72, 0x6b, 0x65,
	0x74, 0x46, 0x65, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x06, 0x6d,
	0x61, 0x72, 0x6b, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x07, 0x2e, 0x4d, 0x61,
	0x72, 0x6b, 0x65, 0x74, 0x52, 0x06, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x12, 0x19, 0x0a, 0x04,
	0x70, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x05, 0x2e, 0x50, 0x61, 0x67,
	0x65, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x22, 0x91, 0x02, 0x0a, 0x14, 0x52, 0x65, 0x70, 0x6f,
	0x72, 0x74, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x46, 0x65, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x12, 0x2f, 0x0a, 0x0e, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x5f, 0x66, 0x65,
	0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x46, 0x65, 0x65, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x0d, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x46, 0x65, 0x65,
	0x73, 0x12, 0x79, 0x0a, 0x1e, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x6c, 0x6c, 0x65,
	0x63, 0x74, 0x65, 0x64, 0x5f, 0x66, 0x65, 0x65, 0x73, 0x5f, 0x70, 0x65, 0x72, 0x5f, 0x61, 0x73,
	0x73, 0x65, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x52, 0x65, 0x70, 0x6f,
	0x72, 0x74, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x46, 0x65, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x2e, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x46,
	0x65, 0x65, 0x73, 0x50, 0x65, 0x72, 0x41, 0x73, 0x73, 0x65, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x52, 0x1a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64,
	0x46, 0x65, 0x65, 0x73, 0x50, 0x65, 0x72, 0x41, 0x73, 0x73, 0x65, 0x74, 0x1a, 0x4d, 0x0a, 0x1f,
	0x54, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x46, 0x65,
	0x65, 0x73, 0x50, 0x65, 0x72, 0x41, 0x73, 0x73, 0x65, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x6c, 0x0a, 0x11, 0x41,
	0x64, 0x64, 0x57, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1a, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x23, 0x0a, 0x06,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0b, 0x2e, 0x41,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x22, 0x21, 0x0a, 0x0f, 0x41, 0x64, 0x64,
	0x57, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x26, 0x0a, 0x14,
	0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x57, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x22, 0x14, 0x0a, 0x12, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x57, 0x65,
	0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x3a, 0x0a, 0x13, 0x4c, 0x69,
	0x73, 0x74, 0x57, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x23, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x0b, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x06,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x44, 0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74, 0x57, 0x65,
	0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x2f, 0x0a, 0x0c, 0x77,
	0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x0c, 0x2e, 0x57, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x0b, 0x77, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x55, 0x0a, 0x13,
	0x4c, 0x69, 0x73, 0x74, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69,
	0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x19, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x05, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x52, 0x04, 0x70,
	0x61, 0x67, 0x65, 0x22, 0x5f, 0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x65, 0x70, 0x6f, 0x73,
	0x69, 0x74, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x23, 0x0a, 0x0d, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0c, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x25, 0x0a,
	0x08, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x09, 0x2e, 0x55, 0x74, 0x78, 0x6f, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x64, 0x65, 0x70, 0x6f,
	0x73, 0x69, 0x74, 0x73, 0x22, 0x58, 0x0a, 0x16, 0x4c, 0x69, 0x73, 0x74, 0x57, 0x69, 0x74, 0x68,
	0x64, 0x72, 0x61, 0x77, 0x61, 0x6c, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x23,
	0x0a, 0x0d, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e,
	0x64, 0x65, 0x78, 0x12, 0x19, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x05, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x22, 0x6a,
	0x0a, 0x14, 0x4c, 0x69, 0x73, 0x74, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x61, 0x6c,
	0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x23, 0x0a, 0x0d, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x2d, 0x0a, 0x0b, 0x77,
	0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x61, 0x6c, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x0b, 0x2e, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x61, 0x6c, 0x52, 0x0b, 0x77,
	0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x61, 0x6c, 0x73, 0x22, 0xd7, 0x01, 0x0a, 0x0b, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x23, 0x0a, 0x0d, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0c, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12,
	0x27, 0x0a, 0x0f, 0x64, 0x65, 0x72, 0x69, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x70, 0x61,
	0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x64, 0x65, 0x72, 0x69, 0x76, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x74, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x78, 0x70, 0x75, 0x62,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x78, 0x70, 0x75, 0x62, 0x12, 0x32, 0x0a, 0x15,
	0x6c, 0x61, 0x73, 0x74, 0x5f, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x64, 0x65,
	0x72, 0x69, 0x76, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x13, 0x6c, 0x61, 0x73,
	0x74, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x44, 0x65, 0x72, 0x69, 0x76, 0x65, 0x64,
	0x12, 0x32, 0x0a, 0x15, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61,
	0x6c, 0x5f, 0x64, 0x65, 0x72, 0x69, 0x76, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x13, 0x6c, 0x61, 0x73, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x44, 0x65, 0x72,
	0x69, 0x76, 0x65, 0x64, 0x22, 0xfc, 0x01, 0x0a, 0x0a, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x1f, 0x0a, 0x06, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x07, 0x2e, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x52, 0x06, 0x6d, 0x61,
	0x72, 0x6b, 0x65, 0x74, 0x12, 0x16, 0x0a, 0x03, 0x66, 0x65, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x04, 0x2e, 0x46, 0x65, 0x65, 0x52, 0x03, 0x66, 0x65, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x74, 0x72, 0x61, 0x64, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08,
	0x74, 0x72, 0x61, 0x64, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x32, 0x0a, 0x0d, 0x73, 0x74, 0x72, 0x61,
	0x74, 0x65, 0x67, 0x79, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x0d, 0x2e, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0c,
	0x73, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x23, 0x0a, 0x0d,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x0c, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e, 0x64, 0x65,
	0x78, 0x12, 0x1c, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x06, 0x2e, 0x50, 0x72, 0x69, 0x63, 0x65, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12,
	0x22, 0x0a, 0x07, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x08, 0x2e, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x07, 0x62, 0x61, 0x6c, 0x61,
	0x6e, 0x63, 0x65, 0x22, 0x4f, 0x0a, 0x0f, 0x54, 0x72, 0x61, 0x64, 0x65, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x24, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x54, 0x72, 0x61, 0x64, 0x65, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x06,
	0x66, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x66, 0x61,
	0x69, 0x6c, 0x65, 0x64, 0x22, 0x72, 0x0a, 0x08, 0x53, 0x77, 0x61, 0x70, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x19, 0x0a, 0x08, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x70, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x07, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x50, 0x12, 0x17, 0x0a, 0x07, 0x61,
	0x73, 0x73, 0x65, 0x74, 0x5f, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x73,
	0x73, 0x65, 0x74, 0x50, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x72,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x12,
	0x17, 0x0a, 0x07, 0x61, 0x73, 0x73, 0x65, 0x74, 0x5f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x61, 0x73, 0x73, 0x65, 0x74, 0x52, 0x22, 0x5a, 0x0a, 0x0c, 0x53, 0x77, 0x61, 0x70,
	0x46, 0x61, 0x69, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x21, 0x0a, 0x0c, 0x66, 0x61, 0x69, 0x6c,
	0x75, 0x72, 0x65, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b,
	0x66, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x66,
	0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x66, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x22, 0x4c, 0x0a, 0x0a, 0x54, 0x72, 0x61, 0x64, 0x65, 0x50, 0x72, 0x69,
	0x63, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x62, 0x61, 0x73, 0x65, 0x50, 0x72, 0x69, 0x63,
	0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0a, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x50, 0x72, 0x69,
	0x63, 0x65, 0x22, 0xbc, 0x05, 0x0a, 0x09, 0x54, 0x72, 0x61, 0x64, 0x65, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x19, 0x0a, 0x08, 0x74, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x74, 0x72, 0x61, 0x64, 0x65, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x54, 0x72,
	0x61, 0x64, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x26, 0x0a, 0x09, 0x73, 0x77, 0x61, 0x70, 0x5f, 0x69, 0x6e,
	0x66, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x53, 0x77, 0x61, 0x70, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x08, 0x73, 0x77, 0x61, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x2a, 0x0a,
	0x09, 0x66, 0x61, 0x69, 0x6c, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0d, 0x2e, 0x53, 0x77, 0x61, 0x70, 0x46, 0x61, 0x69, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x08, 0x66, 0x61, 0x69, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x36, 0x0a, 0x0f, 0x6d, 0x61, 0x72,
	0x6b, 0x65, 0x74, 0x5f, 0x77, 0x69, 0x74, 0x68, 0x5f, 0x66, 0x65, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x57, 0x69, 0x74, 0x68, 0x46,
	0x65, 0x65, 0x52, 0x0d, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x57, 0x69, 0x74, 0x68, 0x46, 0x65,
	0x65, 0x12, 0x21, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0b, 0x2e, 0x54, 0x72, 0x61, 0x64, 0x65, 0x50, 0x72, 0x69, 0x63, 0x65, 0x52, 0x05, 0x70,
	0x72, 0x69, 0x63, 0x65, 0x12, 0x15, 0x0a, 0x06, 0x74, 0x78, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x78, 0x55, 0x72, 0x6c, 0x12, 0x2a, 0x0a, 0x11, 0x72,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x75, 0x6e, 0x69, 0x78,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x54,
	0x69, 0x6d, 0x65, 0x55, 0x6e, 0x69, 0x78, 0x12, 0x28, 0x0a, 0x10, 0x61, 0x63, 0x63, 0x65, 0x70,
	0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x75, 0x6e, 0x69, 0x78, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x0e, 0x61, 0x63, 0x63, 0x65, 0x70, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x55, 0x6e, 0x69,
	0x78, 0x12, 0x2c, 0x0a, 0x12, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x5f, 0x75, 0x6e, 0x69, 0x78, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x04, 0x52, 0x10, 0x63,
	0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x55, 0x6e, 0x69, 0x78, 0x12,
	0x28, 0x0a, 0x10, 0x73, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x75,
	0x6e, 0x69, 0x78, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0e, 0x73, 0x65, 0x74, 0x74, 0x6c,
	0x65, 0x54, 0x69, 0x6d, 0x65, 0x55, 0x6e, 0x69, 0x78, 0x12, 0x28, 0x0a, 0x10, 0x65, 0x78, 0x70,
	0x69, 0x72, 0x79, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x75, 0x6e, 0x69, 0x78, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x0e, 0x65, 0x78, 0x70, 0x69, 0x72, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x55,
	0x6e, 0x69, 0x78, 0x12, 0x28, 0x0a, 0x10, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x5f, 0x75, 0x74, 0x63, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x72,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x55, 0x74, 0x63, 0x12, 0x26, 0x0a,
	0x0f, 0x61, 0x63, 0x63, 0x65, 0x70, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x75, 0x74, 0x63,
	0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x61, 0x63, 0x63, 0x65, 0x70, 0x74, 0x54, 0x69,
	0x6d, 0x65, 0x55, 0x74, 0x63, 0x12, 0x2a, 0x0a, 0x11, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74,
	0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x75, 0x74, 0x63, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0f, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x55, 0x74,
	0x63, 0x12, 0x26, 0x0a, 0x0f, 0x73, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x5f, 0x75, 0x74, 0x63, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x65, 0x74, 0x74,
	0x6c, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x55, 0x74, 0x63, 0x12, 0x26, 0x0a, 0x0f, 0x65, 0x78, 0x70,
	0x69, 0x72, 0x79, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x75, 0x74, 0x63, 0x18, 0x11, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x65, 0x78, 0x70, 0x69, 0x72, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x55, 0x74,
	0x63, 0x22, 0xdc, 0x01, 0x0a, 0x07, 0x46, 0x65, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x19, 0x0a,
	0x08, 0x74, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x74, 0x72, 0x61, 0x64, 0x65, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x62, 0x61, 0x73, 0x69,
	0x73, 0x5f, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x62,
	0x61, 0x73, 0x69, 0x73, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x73, 0x73,
	0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x73, 0x73, 0x65, 0x74, 0x12,
	0x32, 0x0a, 0x15, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x5f, 0x66, 0x65,
	0x65, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x13,
	0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x46, 0x65, 0x65, 0x41, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x28, 0x0a, 0x10, 0x66, 0x69, 0x78, 0x65, 0x64, 0x5f, 0x66, 0x65, 0x65,
	0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0e, 0x66,
	0x69, 0x78, 0x65, 0x64, 0x46, 0x65, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x21, 0x0a,
	0x0c, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x02, 0x52, 0x0b, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65,
	0x22, 0x36, 0x0a, 0x0a, 0x54, 0x78, 0x4f, 0x75, 0x74, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x12,
	0x0a, 0x04, 0x68, 0x61, 0x73, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x61,
	0x73, 0x68, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x22, 0x58, 0x0a, 0x0b, 0x57, 0x65, 0x62, 0x68,
	0x6f, 0x6f, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x70, 0x6f,
	0x69, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x65, 0x6e, 0x64, 0x70, 0x6f,
	0x69, 0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x73, 0x65, 0x63, 0x75, 0x72, 0x65,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x53, 0x65, 0x63, 0x75, 0x72,
	0x65, 0x64, 0x22, 0xab, 0x01, 0x0a, 0x0a, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x61,
	0x6c, 0x12, 0x13, 0x0a, 0x05, 0x74, 0x78, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x74, 0x78, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x61,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x62, 0x61, 0x73,
	0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x71, 0x75, 0x6f, 0x74, 0x65,
	0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x71,
	0x75, 0x6f, 0x74, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2a, 0x0a, 0x11, 0x6d, 0x69,
	0x6c, 0x6c, 0x69, 0x73, 0x61, 0x74, 0x5f, 0x70, 0x65, 0x72, 0x5f, 0x62, 0x79, 0x74, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x6d, 0x69, 0x6c, 0x6c, 0x69, 0x73, 0x61, 0x74, 0x50,
	0x65, 0x72, 0x42, 0x79, 0x74, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x22, 0x44, 0x0a, 0x04, 0x50, 0x61, 0x67, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x61, 0x67, 0x65,
	0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x70,
	0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67,
	0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61,
	0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x2a, 0x3b, 0x0a, 0x0c, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65,
	0x67, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0d, 0x0a, 0x09, 0x50, 0x4c, 0x55, 0x47, 0x47, 0x41,
	0x42, 0x4c, 0x45, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x42, 0x41, 0x4c, 0x41, 0x4e, 0x43, 0x45,
	0x44, 0x10, 0x01, 0x12, 0x0e, 0x0a, 0x0a, 0x55, 0x4e, 0x42, 0x41, 0x4c, 0x41, 0x4e, 0x43, 0x45,
	0x44, 0x10, 0x02, 0x2a, 0x5d, 0x0a, 0x0b, 0x54, 0x72, 0x61, 0x64, 0x65, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x0d, 0x0a, 0x09, 0x55, 0x4e, 0x44, 0x45, 0x46, 0x49, 0x4e, 0x45, 0x44, 0x10,
	0x00, 0x12, 0x0b, 0x0a, 0x07, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x10, 0x01, 0x12, 0x0a,
	0x0a, 0x06, 0x41, 0x43, 0x43, 0x45, 0x50, 0x54, 0x10, 0x02, 0x12, 0x0c, 0x0a, 0x08, 0x43, 0x4f,
	0x4d, 0x50, 0x4c, 0x45, 0x54, 0x45, 0x10, 0x03, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x45, 0x54, 0x54,
	0x4c, 0x45, 0x44, 0x10, 0x04, 0x12, 0x0b, 0x0a, 0x07, 0x45, 0x58, 0x50, 0x49, 0x52, 0x45, 0x44,
	0x10, 0x05, 0x2a, 0x5f, 0x0a, 0x0a, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x11, 0x0a, 0x0d, 0x54, 0x52, 0x41, 0x44, 0x45, 0x5f, 0x53, 0x45, 0x54, 0x54, 0x4c, 0x45,
	0x44, 0x10, 0x00, 0x12, 0x17, 0x0a, 0x13, 0x41, 0x43, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x5f, 0x4c,
	0x4f, 0x57, 0x5f, 0x42, 0x41, 0x4c, 0x41, 0x4e, 0x43, 0x45, 0x10, 0x01, 0x12, 0x14, 0x0a, 0x10,
	0x41, 0x43, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x5f, 0x57, 0x49, 0x54, 0x48, 0x44, 0x52, 0x41, 0x57,
	0x10, 0x02, 0x12, 0x0f, 0x0a, 0x0b, 0x41, 0x4c, 0x4c, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e,
	0x53, 0x10, 0x03, 0x32, 0xa0, 0x0d, 0x0a, 0x08, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72,
	0x12, 0x2b, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0f, 0x2e, 0x47, 0x65,
	0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0d, 0x2e, 0x47,
	0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x3d, 0x0a,
	0x0d, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x12, 0x15,
	0x2e, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x4d,
	0x61, 0x72, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x49, 0x0a, 0x11,
	0x4c, 0x69, 0x73, 0x74, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x4d, 0x61, 0x72, 0x6b, 0x65,
	0x74, 0x12, 0x19, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x4d,
	0x61, 0x72, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x49, 0x0a, 0x11, 0x44, 0x65, 0x70, 0x6f, 0x73,
	0x69, 0x74, 0x46, 0x65, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x19, 0x2e, 0x44,
	0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x46, 0x65, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69,
	0x74, 0x46, 0x65, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x22, 0x00, 0x12, 0x49, 0x0a, 0x11, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x46, 0x65, 0x65,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x19, 0x2e, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63,
	0x65, 0x46, 0x65, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x17, 0x2e, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x46, 0x65, 0x65, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x4c, 0x0a,
	0x12, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x44, 0x65, 0x70, 0x6f,
	0x73, 0x69, 0x74, 0x12, 0x1a, 0x2e, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x4d, 0x61, 0x72, 0x6b, 0x65,
	0x74, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x18, 0x2e, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x44, 0x65, 0x70,
	0x6f, 0x73, 0x69, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x43, 0x0a, 0x0f, 0x43,
	0x6c, 0x61, 0x69, 0x6d, 0x46, 0x65, 0x65, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x12, 0x17,
	0x2e, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x46, 0x65, 0x65, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x46,
	0x65, 0x65, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00,
	0x12, 0x34, 0x0a, 0x0a, 0x4f, 0x70, 0x65, 0x6e, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x12, 0x12,
	0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x10, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x37, 0x0a, 0x0b, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x4d,
	0x61, 0x72, 0x6b, 0x65, 0x74, 0x12, 0x13, 0x2e, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x4d, 0x61, 0x72,
	0x6b, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x11, 0x2e, 0x43, 0x6c, 0x6f,
	0x73, 0x65, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12,
	0x34, 0x0a, 0x0a, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x12, 0x12, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x10, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x57, 0x0a, 0x19, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d,
	0x61, 0x72, 0x6b, 0x65, 0x74, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x46,
	0x65, 0x65, 0x12, 0x21, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x72, 0x6b, 0x65,
	0x74, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x46, 0x65, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x61,
	0x72, 0x6b, 0x65, 0x74, 0x46, 0x65, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x4d,
	0x0a, 0x14, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x46, 0x69,
	0x78, 0x65, 0x64, 0x46, 0x65, 0x65, 0x12, 0x1c, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d,
	0x61, 0x72, 0x6b, 0x65, 0x74, 0x46, 0x69, 0x78, 0x65, 0x64, 0x46, 0x65, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x72,
	0x6b, 0x65, 0x74, 0x46, 0x65, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x49, 0x0a,
	0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x50, 0x72, 0x69,
	0x63, 0x65, 0x12, 0x19, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x72, 0x6b, 0x65,
	0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x50, 0x72, 0x69, 0x63,
	0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x52, 0x0a, 0x14, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79,
	0x12, 0x1c, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x53,
	0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x53, 0x74, 0x72,
	0x61, 0x74, 0x65, 0x67, 0x79, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x40, 0x0a, 0x0e,
	0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x12, 0x16,
	0x2e, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61,
	0x77, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x37,
	0x0a, 0x0b, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x46, 0x65, 0x65, 0x12, 0x13, 0x2e,
	0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x46, 0x65, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x11, 0x2e, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x46, 0x65, 0x65,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x34, 0x0a, 0x0a, 0x4c, 0x69, 0x73, 0x74, 0x54,
	0x72, 0x61, 0x64, 0x65, 0x73, 0x12, 0x12, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x72, 0x61, 0x64,
	0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x10, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x54, 0x72, 0x61, 0x64, 0x65, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x43, 0x0a,
	0x0f, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x46, 0x65, 0x65,
	0x12, 0x17, 0x2e, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x46,
	0x65, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x52, 0x65, 0x70, 0x6f,
	0x72, 0x74, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x46, 0x65, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x22, 0x00, 0x12, 0x37, 0x0a, 0x0b, 0x52, 0x65, 0x6c, 0x6f, 0x61, 0x64, 0x55, 0x74, 0x78, 0x6f,
	0x73, 0x12, 0x13, 0x2e, 0x52, 0x65, 0x6c, 0x6f, 0x61, 0x64, 0x55, 0x74, 0x78, 0x6f, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x11, 0x2e, 0x52, 0x65, 0x6c, 0x6f, 0x61, 0x64, 0x55,
	0x74, 0x78, 0x6f, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x31, 0x0a, 0x09, 0x4c,
	0x69, 0x73, 0x74, 0x55, 0x74, 0x78, 0x6f, 0x73, 0x12, 0x11, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x55,
	0x74, 0x78, 0x6f, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0f, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x55, 0x74, 0x78, 0x6f, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x34,
	0x0a, 0x0a, 0x44, 0x72, 0x6f, 0x70, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x12, 0x12, 0x2e, 0x44,
	0x72, 0x6f, 0x70, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x10, 0x2e, 0x44, 0x72, 0x6f, 0x70, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x22, 0x00, 0x12, 0x34, 0x0a, 0x0a, 0x41, 0x64, 0x64, 0x57, 0x65, 0x62, 0x68, 0x6f,
	0x6f, 0x6b, 0x12, 0x12, 0x2e, 0x41, 0x64, 0x64, 0x57, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x10, 0x2e, 0x41, 0x64, 0x64, 0x57, 0x65, 0x62, 0x68,
	0x6f, 0x6f, 0x6b, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x3d, 0x0a, 0x0d, 0x52, 0x65,
	0x6d, 0x6f, 0x76, 0x65, 0x57, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x12, 0x15, 0x2e, 0x52, 0x65,
	0x6d, 0x6f, 0x76, 0x65, 0x57, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x13, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x57, 0x65, 0x62, 0x68, 0x6f,
	0x6f, 0x6b, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x3a, 0x0a, 0x0c, 0x4c, 0x69, 0x73,
	0x74, 0x57, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x73, 0x12, 0x14, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x57, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x12, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x57, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x73, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x3a, 0x0a, 0x0c, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x65, 0x70,
	0x6f, 0x73, 0x69, 0x74, 0x73, 0x12, 0x14, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x65, 0x70, 0x6f,
	0x73, 0x69, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x12, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22,
	0x00, 0x12, 0x43, 0x0a, 0x0f, 0x4c, 0x69, 0x73, 0x74, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61,
	0x77, 0x61, 0x6c, 0x73, 0x12, 0x17, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x57, 0x69, 0x74, 0x68, 0x64,
	0x72, 0x61, 0x77, 0x61, 0x6c, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x61, 0x6c, 0x73, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x42, 0x44, 0x5a, 0x42, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x74, 0x64, 0x65, 0x78, 0x2d, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72,
	0x6b, 0x2f, 0x74, 0x64, 0x65, 0x78, 0x2d, 0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x2f, 0x61, 0x70,
	0x69, 0x2d, 0x73, 0x70, 0x65, 0x63, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f,
	0x67, 0x65, 0x6e, 0x2f, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_operator_proto_rawDescOnce sync.Once
	file_operator_proto_rawDescData = file_operator_proto_rawDesc
)

func file_operator_proto_rawDescGZIP() []byte {
	file_operator_proto_rawDescOnce.Do(func() {
		file_operator_proto_rawDescData = protoimpl.X.CompressGZIP(file_operator_proto_rawDescData)
	})
	return file_operator_proto_rawDescData
}

var file_operator_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_operator_proto_msgTypes = make([]protoimpl.MessageInfo, 65)
var file_operator_proto_goTypes = []interface{}{
	(StrategyType)(0),                        // 0: StrategyType
	(TradeStatus)(0),                         // 1: TradeStatus
	(ActionType)(0),                          // 2: ActionType
	(*GetInfoRequest)(nil),                   // 3: GetInfoRequest
	(*GetInfoReply)(nil),                     // 4: GetInfoReply
	(*DropMarketRequest)(nil),                // 5: DropMarketRequest
	(*DropMarketReply)(nil),                  // 6: DropMarketReply
	(*ListUtxosRequest)(nil),                 // 7: ListUtxosRequest
	(*ListUtxosReply)(nil),                   // 8: ListUtxosReply
	(*UtxoInfo)(nil),                         // 9: UtxoInfo
	(*ReloadUtxosRequest)(nil),               // 10: ReloadUtxosRequest
	(*ReloadUtxosReply)(nil),                 // 11: ReloadUtxosReply
	(*DepositMarketRequest)(nil),             // 12: DepositMarketRequest
	(*DepositMarketReply)(nil),               // 13: DepositMarketReply
	(*ListDepositMarketRequest)(nil),         // 14: ListDepositMarketRequest
	(*ListDepositMarketReply)(nil),           // 15: ListDepositMarketReply
	(*DepositFeeAccountRequest)(nil),         // 16: DepositFeeAccountRequest
	(*DepositFeeAccountReply)(nil),           // 17: DepositFeeAccountReply
	(*BalanceFeeAccountRequest)(nil),         // 18: BalanceFeeAccountRequest
	(*BalanceFeeAccountReply)(nil),           // 19: BalanceFeeAccountReply
	(*ListMarketRequest)(nil),                // 20: ListMarketRequest
	(*ListMarketReply)(nil),                  // 21: ListMarketReply
	(*ClaimMarketDepositRequest)(nil),        // 22: ClaimMarketDepositRequest
	(*ClaimMarketDepositReply)(nil),          // 23: ClaimMarketDepositReply
	(*ClaimFeeDepositRequest)(nil),           // 24: ClaimFeeDepositRequest
	(*ClaimFeeDepositReply)(nil),             // 25: ClaimFeeDepositReply
	(*OpenMarketRequest)(nil),                // 26: OpenMarketRequest
	(*OpenMarketReply)(nil),                  // 27: OpenMarketReply
	(*CloseMarketRequest)(nil),               // 28: CloseMarketRequest
	(*CloseMarketReply)(nil),                 // 29: CloseMarketReply
	(*UpdateMarketStrategyRequest)(nil),      // 30: UpdateMarketStrategyRequest
	(*UpdateMarketStrategyReply)(nil),        // 31: UpdateMarketStrategyReply
	(*UpdateMarketPercentageFeeRequest)(nil), // 32: UpdateMarketPercentageFeeRequest
	(*UpdateMarketFixedFeeRequest)(nil),      // 33: UpdateMarketFixedFeeRequest
	(*UpdateMarketFeeReply)(nil),             // 34: UpdateMarketFeeReply
	(*UpdateMarketPriceRequest)(nil),         // 35: UpdateMarketPriceRequest
	(*UpdateMarketPriceReply)(nil),           // 36: UpdateMarketPriceReply
	(*WithdrawMarketRequest)(nil),            // 37: WithdrawMarketRequest
	(*WithdrawMarketReply)(nil),              // 38: WithdrawMarketReply
	(*WithdrawFeeRequest)(nil),               // 39: WithdrawFeeRequest
	(*WithdrawFeeReply)(nil),                 // 40: WithdrawFeeReply
	(*ListTradesRequest)(nil),                // 41: ListTradesRequest
	(*ListTradesReply)(nil),                  // 42: ListTradesReply
	(*ReportMarketFeeRequest)(nil),           // 43: ReportMarketFeeRequest
	(*ReportMarketFeeReply)(nil),             // 44: ReportMarketFeeReply
	(*AddWebhookRequest)(nil),                // 45: AddWebhookRequest
	(*AddWebhookReply)(nil),                  // 46: AddWebhookReply
	(*RemoveWebhookRequest)(nil),             // 47: RemoveWebhookRequest
	(*RemoveWebhookReply)(nil),               // 48: RemoveWebhookReply
	(*ListWebhooksRequest)(nil),              // 49: ListWebhooksRequest
	(*ListWebhooksReply)(nil),                // 50: ListWebhooksReply
	(*ListDepositsRequest)(nil),              // 51: ListDepositsRequest
	(*ListDepositsReply)(nil),                // 52: ListDepositsReply
	(*ListWithdrawalsRequest)(nil),           // 53: ListWithdrawalsRequest
	(*ListWithdrawalsReply)(nil),             // 54: ListWithdrawalsReply
	(*AccountInfo)(nil),                      // 55: AccountInfo
	(*MarketInfo)(nil),                       // 56: MarketInfo
	(*TradeStatusInfo)(nil),                  // 57: TradeStatusInfo
	(*SwapInfo)(nil),                         // 58: SwapInfo
	(*SwapFailInfo)(nil),                     // 59: SwapFailInfo
	(*TradePrice)(nil),                       // 60: TradePrice
	(*TradeInfo)(nil),                        // 61: TradeInfo
	(*FeeInfo)(nil),                          // 62: FeeInfo
	(*TxOutpoint)(nil),                       // 63: TxOutpoint
	(*WebhookInfo)(nil),                      // 64: WebhookInfo
	(*Withdrawal)(nil),                       // 65: Withdrawal
	(*Page)(nil),                             // 66: Page
	nil,                                      // 67: ReportMarketFeeReply.TotalCollectedFeesPerAssetEntry
	(*types.Market)(nil),                     // 68: Market
	(*types.AddressWithBlindingKey)(nil),     // 69: AddressWithBlindingKey
	(*types.Fixed)(nil),                      // 70: Fixed
	(*types.MarketWithFee)(nil),              // 71: MarketWithFee
	(*types.Price)(nil),                      // 72: Price
	(*types.Balance)(nil),                    // 73: Balance
	(*types.Fee)(nil),                        // 74: Fee
}
var file_operator_proto_depIdxs = []int32{
	55, // 0: GetInfoReply.account_info:type_name -> AccountInfo
	66, // 1: ListUtxosRequest.page:type_name -> Page
	9,  // 2: ListUtxosReply.unspents:type_name -> UtxoInfo
	9,  // 3: ListUtxosReply.spents:type_name -> UtxoInfo
	9,  // 4: ListUtxosReply.locks:type_name -> UtxoInfo
	63, // 5: UtxoInfo.outpoint:type_name -> TxOutpoint
	68, // 6: DepositMarketRequest.market:type_name -> Market
	68, // 7: ListDepositMarketRequest.market:type_name -> Market
	69, // 8: DepositFeeAccountReply.address_with_blinding_key:type_name -> AddressWithBlindingKey
	56, // 9: ListMarketReply.markets:type_name -> MarketInfo
	68, // 10: ClaimMarketDepositRequest.market:type_name -> Market
	63, // 11: ClaimMarketDepositRequest.outpoints:type_name -> TxOutpoint
	63, // 12: ClaimFeeDepositRequest.outpoints:type_name -> TxOutpoint
	68, // 13: OpenMarketRequest.market:type_name -> Market
	68, // 14: CloseMarketRequest.market:type_name -> Market
	68, // 15: UpdateMarketStrategyRequest.market:type_name -> Market
	0,  // 16: UpdateMarketStrategyRequest.strategy_type:type_name -> StrategyType
	68, // 17: UpdateMarketPercentageFeeRequest.market:type_name -> Market
	68, // 18: UpdateMarketFixedFeeRequest.market:type_name -> Market
	70, // 19: UpdateMarketFixedFeeRequest.fixed:type_name -> Fixed
	71, // 20: UpdateMarketFeeReply.market_with_fee:type_name -> MarketWithFee
	68, // 21: UpdateMarketPriceRequest.market:type_name -> Market
	72, // 22: UpdateMarketPriceRequest.price:type_name -> Price
	68, // 23: WithdrawMarketRequest.market:type_name -> Market
	73, // 24: WithdrawMarketRequest.balance_to_withdraw:type_name -> Balance
	68, // 25: ListTradesRequest.market:type_name -> Market
	66, // 26: ListTradesRequest.page:type_name -> Page
	61, // 27: ListTradesReply.trades:type_name -> TradeInfo
	68, // 28: ReportMarketFeeRequest.market:type_name -> Market
	66, // 29: ReportMarketFeeRequest.page:type_name -> Page
	62, // 30: ReportMarketFeeReply.collected_fees:type_name -> FeeInfo
	67, // 31: ReportMarketFeeReply.total_collected_fees_per_asset:type_name -> ReportMarketFeeReply.TotalCollectedFeesPerAssetEntry
	2,  // 32: AddWebhookRequest.action:type_name -> ActionType
	2,  // 33: ListWebhooksRequest.action:type_name -> ActionType
	64, // 34: ListWebhooksReply.webhook_info:type_name -> WebhookInfo
	66, // 35: ListDepositsRequest.page:type_name -> Page
	9,  // 36: ListDepositsReply.deposits:type_name -> UtxoInfo
	66, // 37: ListWithdrawalsRequest.page:type_name -> Page
	65, // 38: ListWithdrawalsReply.withdrawals:type_name -> Withdrawal
	68, // 39: MarketInfo.market:type_name -> Market
	74, // 40: MarketInfo.fee:type_name -> Fee
	0,  // 41: MarketInfo.strategy_type:type_name -> StrategyType
	72, // 42: MarketInfo.price:type_name -> Price
	73, // 43: MarketInfo.balance:type_name -> Balance
	1,  // 44: TradeStatusInfo.status:type_name -> TradeStatus
	57, // 45: TradeInfo.status:type_name -> TradeStatusInfo
	58, // 46: TradeInfo.swap_info:type_name -> SwapInfo
	59, // 47: TradeInfo.fail_info:type_name -> SwapFailInfo
	71, // 48: TradeInfo.market_with_fee:type_name -> MarketWithFee
	60, // 49: TradeInfo.price:type_name -> TradePrice
	3,  // 50: Operator.GetInfo:input_type -> GetInfoRequest
	12, // 51: Operator.DepositMarket:input_type -> DepositMarketRequest
	14, // 52: Operator.ListDepositMarket:input_type -> ListDepositMarketRequest
	16, // 53: Operator.DepositFeeAccount:input_type -> DepositFeeAccountRequest
	18, // 54: Operator.BalanceFeeAccount:input_type -> BalanceFeeAccountRequest
	22, // 55: Operator.ClaimMarketDeposit:input_type -> ClaimMarketDepositRequest
	24, // 56: Operator.ClaimFeeDeposit:input_type -> ClaimFeeDepositRequest
	26, // 57: Operator.OpenMarket:input_type -> OpenMarketRequest
	28, // 58: Operator.CloseMarket:input_type -> CloseMarketRequest
	20, // 59: Operator.ListMarket:input_type -> ListMarketRequest
	32, // 60: Operator.UpdateMarketPercentageFee:input_type -> UpdateMarketPercentageFeeRequest
	33, // 61: Operator.UpdateMarketFixedFee:input_type -> UpdateMarketFixedFeeRequest
	35, // 62: Operator.UpdateMarketPrice:input_type -> UpdateMarketPriceRequest
	30, // 63: Operator.UpdateMarketStrategy:input_type -> UpdateMarketStrategyRequest
	37, // 64: Operator.WithdrawMarket:input_type -> WithdrawMarketRequest
	39, // 65: Operator.WithdrawFee:input_type -> WithdrawFeeRequest
	41, // 66: Operator.ListTrades:input_type -> ListTradesRequest
	43, // 67: Operator.ReportMarketFee:input_type -> ReportMarketFeeRequest
	10, // 68: Operator.ReloadUtxos:input_type -> ReloadUtxosRequest
	7,  // 69: Operator.ListUtxos:input_type -> ListUtxosRequest
	5,  // 70: Operator.DropMarket:input_type -> DropMarketRequest
	45, // 71: Operator.AddWebhook:input_type -> AddWebhookRequest
	47, // 72: Operator.RemoveWebhook:input_type -> RemoveWebhookRequest
	49, // 73: Operator.ListWebhooks:input_type -> ListWebhooksRequest
	51, // 74: Operator.ListDeposits:input_type -> ListDepositsRequest
	53, // 75: Operator.ListWithdrawals:input_type -> ListWithdrawalsRequest
	4,  // 76: Operator.GetInfo:output_type -> GetInfoReply
	13, // 77: Operator.DepositMarket:output_type -> DepositMarketReply
	15, // 78: Operator.ListDepositMarket:output_type -> ListDepositMarketReply
	17, // 79: Operator.DepositFeeAccount:output_type -> DepositFeeAccountReply
	19, // 80: Operator.BalanceFeeAccount:output_type -> BalanceFeeAccountReply
	23, // 81: Operator.ClaimMarketDeposit:output_type -> ClaimMarketDepositReply
	25, // 82: Operator.ClaimFeeDeposit:output_type -> ClaimFeeDepositReply
	27, // 83: Operator.OpenMarket:output_type -> OpenMarketReply
	29, // 84: Operator.CloseMarket:output_type -> CloseMarketReply
	21, // 85: Operator.ListMarket:output_type -> ListMarketReply
	34, // 86: Operator.UpdateMarketPercentageFee:output_type -> UpdateMarketFeeReply
	34, // 87: Operator.UpdateMarketFixedFee:output_type -> UpdateMarketFeeReply
	36, // 88: Operator.UpdateMarketPrice:output_type -> UpdateMarketPriceReply
	31, // 89: Operator.UpdateMarketStrategy:output_type -> UpdateMarketStrategyReply
	38, // 90: Operator.WithdrawMarket:output_type -> WithdrawMarketReply
	40, // 91: Operator.WithdrawFee:output_type -> WithdrawFeeReply
	42, // 92: Operator.ListTrades:output_type -> ListTradesReply
	44, // 93: Operator.ReportMarketFee:output_type -> ReportMarketFeeReply
	11, // 94: Operator.ReloadUtxos:output_type -> ReloadUtxosReply
	8,  // 95: Operator.ListUtxos:output_type -> ListUtxosReply
	6,  // 96: Operator.DropMarket:output_type -> DropMarketReply
	46, // 97: Operator.AddWebhook:output_type -> AddWebhookReply
	48, // 98: Operator.RemoveWebhook:output_type -> RemoveWebhookReply
	50, // 99: Operator.ListWebhooks:output_type -> ListWebhooksReply
	52, // 100: Operator.ListDeposits:output_type -> ListDepositsReply
	54, // 101: Operator.ListWithdrawals:output_type -> ListWithdrawalsReply
	76, // [76:102] is the sub-list for method output_type
	50, // [50:76] is the sub-list for method input_type
	50, // [50:50] is the sub-list for extension type_name
	50, // [50:50] is the sub-list for extension extendee
	0,  // [0:50] is the sub-list for field type_name
}

func init() { file_operator_proto_init() }
func file_operator_proto_init() {
	if File_operator_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_operator_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_operator_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetInfoReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_operator_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DropMarketRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_operator_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DropMarketReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_operator_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListUtxosRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_operator_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListUtxosReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_operator_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UtxoInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_operator_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReloadUtxosRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_operator_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReloadUtxosReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_operator_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DepositMarketRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_operator_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DepositMarketReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_operator_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListDepositMarketRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_operator_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListDepositMarketReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_operator_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DepositFeeAccountRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_operator_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DepositFeeAccountReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_operator_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BalanceFeeAccountRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_operator_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BalanceFeeAccountReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_operator_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListMarketRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_operator_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListMarketReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_operator_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClaimMarketDepositRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_operator_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClaimMarketDepositReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_operator_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClaimFeeDepositRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_operator_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClaimFeeDepositReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_operator_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OpenMarketRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_operator_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OpenMarketReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_operator_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CloseMarketRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_operator_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CloseMarketReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_operator_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateMarketStrategyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_operator_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateMarketStrategyReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_operator_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateMarketPercentageFeeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_operator_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateMarketFixedFeeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_operator_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateMarketFeeReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_operator_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateMarketPriceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_operator_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateMarketPriceReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_operator_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WithdrawMarketRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_operator_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WithdrawMarketReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_operator_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WithdrawFeeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_operator_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WithdrawFeeReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_operator_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListTradesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_operator_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListTradesReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_operator_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReportMarketFeeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_operator_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReportMarketFeeReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_operator_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddWebhookRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_operator_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddWebhookReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_operator_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveWebhookRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_operator_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveWebhookReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_operator_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListWebhooksRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_operator_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListWebhooksReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_operator_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListDepositsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_operator_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListDepositsReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_operator_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListWithdrawalsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_operator_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListWithdrawalsReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_operator_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_operator_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MarketInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_operator_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TradeStatusInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_operator_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SwapInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_operator_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SwapFailInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_operator_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TradePrice); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_operator_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TradeInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_operator_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FeeInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_operator_proto_msgTypes[60].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TxOutpoint); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_operator_proto_msgTypes[61].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WebhookInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_operator_proto_msgTypes[62].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Withdrawal); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_operator_proto_msgTypes[63].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Page); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_operator_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   65,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_operator_proto_goTypes,
		DependencyIndexes: file_operator_proto_depIdxs,
		EnumInfos:         file_operator_proto_enumTypes,
		MessageInfos:      file_operator_proto_msgTypes,
	}.Build()
	File_operator_proto = out.File
	file_operator_proto_rawDesc = nil
	file_operator_proto_goTypes = nil
	file_operator_proto_depIdxs = nil
}
