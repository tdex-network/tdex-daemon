// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        (unknown)
// source: tdex/v2/types.proto

package tdexv2

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TradeType int32

const (
	TradeType_TRADE_TYPE_BUY  TradeType = 0
	TradeType_TRADE_TYPE_SELL TradeType = 1
)

// Enum value maps for TradeType.
var (
	TradeType_name = map[int32]string{
		0: "TRADE_TYPE_BUY",
		1: "TRADE_TYPE_SELL",
	}
	TradeType_value = map[string]int32{
		"TRADE_TYPE_BUY":  0,
		"TRADE_TYPE_SELL": 1,
	}
)

func (x TradeType) Enum() *TradeType {
	p := new(TradeType)
	*p = x
	return p
}

func (x TradeType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TradeType) Descriptor() protoreflect.EnumDescriptor {
	return file_tdex_v2_types_proto_enumTypes[0].Descriptor()
}

func (TradeType) Type() protoreflect.EnumType {
	return &file_tdex_v2_types_proto_enumTypes[0]
}

func (x TradeType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TradeType.Descriptor instead.
func (TradeType) EnumDescriptor() ([]byte, []int) {
	return file_tdex_v2_types_proto_rawDescGZIP(), []int{0}
}

type ContentType int32

const (
	ContentType_CONTENT_TYPE_JSON        ContentType = 0
	ContentType_CONTENT_TYPE_GRPC        ContentType = 1
	ContentType_CONTENT_TYPE_GRPCWEB     ContentType = 2
	ContentType_CONTENT_TYPE_GRPCWEBTEXT ContentType = 3
)

// Enum value maps for ContentType.
var (
	ContentType_name = map[int32]string{
		0: "CONTENT_TYPE_JSON",
		1: "CONTENT_TYPE_GRPC",
		2: "CONTENT_TYPE_GRPCWEB",
		3: "CONTENT_TYPE_GRPCWEBTEXT",
	}
	ContentType_value = map[string]int32{
		"CONTENT_TYPE_JSON":        0,
		"CONTENT_TYPE_GRPC":        1,
		"CONTENT_TYPE_GRPCWEB":     2,
		"CONTENT_TYPE_GRPCWEBTEXT": 3,
	}
)

func (x ContentType) Enum() *ContentType {
	p := new(ContentType)
	*p = x
	return p
}

func (x ContentType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ContentType) Descriptor() protoreflect.EnumDescriptor {
	return file_tdex_v2_types_proto_enumTypes[1].Descriptor()
}

func (ContentType) Type() protoreflect.EnumType {
	return &file_tdex_v2_types_proto_enumTypes[1]
}

func (x ContentType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ContentType.Descriptor instead.
func (ContentType) EnumDescriptor() ([]byte, []int) {
	return file_tdex_v2_types_proto_rawDescGZIP(), []int{1}
}

type UnblindedInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Index of the transaction input of reference.
	Index uint32 `protobuf:"varint,1,opt,name=index,proto3" json:"index,omitempty"`
	// Unblinded asset.
	Asset string `protobuf:"bytes,2,opt,name=asset,proto3" json:"asset,omitempty"`
	// Unblinded amount.
	Amount uint64 `protobuf:"varint,3,opt,name=amount,proto3" json:"amount,omitempty"`
	// Asset blinider when blinding the prevout.
	AssetBlinder string `protobuf:"bytes,4,opt,name=asset_blinder,json=assetBlinder,proto3" json:"asset_blinder,omitempty"`
	// Amount blinider used when blinding the prevout.
	AmountBlinder string `protobuf:"bytes,5,opt,name=amount_blinder,json=amountBlinder,proto3" json:"amount_blinder,omitempty"`
}

func (x *UnblindedInput) Reset() {
	*x = UnblindedInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tdex_v2_types_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnblindedInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnblindedInput) ProtoMessage() {}

func (x *UnblindedInput) ProtoReflect() protoreflect.Message {
	mi := &file_tdex_v2_types_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnblindedInput.ProtoReflect.Descriptor instead.
func (*UnblindedInput) Descriptor() ([]byte, []int) {
	return file_tdex_v2_types_proto_rawDescGZIP(), []int{0}
}

func (x *UnblindedInput) GetIndex() uint32 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *UnblindedInput) GetAsset() string {
	if x != nil {
		return x.Asset
	}
	return ""
}

func (x *UnblindedInput) GetAmount() uint64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *UnblindedInput) GetAssetBlinder() string {
	if x != nil {
		return x.AssetBlinder
	}
	return ""
}

func (x *UnblindedInput) GetAmountBlinder() string {
	if x != nil {
		return x.AmountBlinder
	}
	return ""
}

type Fee struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Percentage fee on both assets of the market in basis point.
	PercentageFee *MarketFee `protobuf:"bytes,1,opt,name=percentage_fee,json=percentageFee,proto3" json:"percentage_fee,omitempty"`
	// Fixed fee on both assets of the market in satoshi.
	FixedFee *MarketFee `protobuf:"bytes,2,opt,name=fixed_fee,json=fixedFee,proto3" json:"fixed_fee,omitempty"`
}

func (x *Fee) Reset() {
	*x = Fee{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tdex_v2_types_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Fee) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Fee) ProtoMessage() {}

func (x *Fee) ProtoReflect() protoreflect.Message {
	mi := &file_tdex_v2_types_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Fee.ProtoReflect.Descriptor instead.
func (*Fee) Descriptor() ([]byte, []int) {
	return file_tdex_v2_types_proto_rawDescGZIP(), []int{1}
}

func (x *Fee) GetPercentageFee() *MarketFee {
	if x != nil {
		return x.PercentageFee
	}
	return nil
}

func (x *Fee) GetFixedFee() *MarketFee {
	if x != nil {
		return x.FixedFee
	}
	return nil
}

type MarketFee struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BaseAsset  int64 `protobuf:"varint,1,opt,name=base_asset,json=baseAsset,proto3" json:"base_asset,omitempty"`
	QuoteAsset int64 `protobuf:"varint,2,opt,name=quote_asset,json=quoteAsset,proto3" json:"quote_asset,omitempty"`
}

func (x *MarketFee) Reset() {
	*x = MarketFee{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tdex_v2_types_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MarketFee) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarketFee) ProtoMessage() {}

func (x *MarketFee) ProtoReflect() protoreflect.Message {
	mi := &file_tdex_v2_types_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarketFee.ProtoReflect.Descriptor instead.
func (*MarketFee) Descriptor() ([]byte, []int) {
	return file_tdex_v2_types_proto_rawDescGZIP(), []int{2}
}

func (x *MarketFee) GetBaseAsset() int64 {
	if x != nil {
		return x.BaseAsset
	}
	return 0
}

func (x *MarketFee) GetQuoteAsset() int64 {
	if x != nil {
		return x.QuoteAsset
	}
	return 0
}

type Balance struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BaseAmount  uint64 `protobuf:"varint,1,opt,name=base_amount,json=baseAmount,proto3" json:"base_amount,omitempty"`
	QuoteAmount uint64 `protobuf:"varint,2,opt,name=quote_amount,json=quoteAmount,proto3" json:"quote_amount,omitempty"`
}

func (x *Balance) Reset() {
	*x = Balance{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tdex_v2_types_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Balance) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Balance) ProtoMessage() {}

func (x *Balance) ProtoReflect() protoreflect.Message {
	mi := &file_tdex_v2_types_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Balance.ProtoReflect.Descriptor instead.
func (*Balance) Descriptor() ([]byte, []int) {
	return file_tdex_v2_types_proto_rawDescGZIP(), []int{3}
}

func (x *Balance) GetBaseAmount() uint64 {
	if x != nil {
		return x.BaseAmount
	}
	return 0
}

func (x *Balance) GetQuoteAmount() uint64 {
	if x != nil {
		return x.QuoteAmount
	}
	return 0
}

type Market struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BaseAsset  string `protobuf:"bytes,1,opt,name=base_asset,json=baseAsset,proto3" json:"base_asset,omitempty"`
	QuoteAsset string `protobuf:"bytes,2,opt,name=quote_asset,json=quoteAsset,proto3" json:"quote_asset,omitempty"`
}

func (x *Market) Reset() {
	*x = Market{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tdex_v2_types_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Market) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Market) ProtoMessage() {}

func (x *Market) ProtoReflect() protoreflect.Message {
	mi := &file_tdex_v2_types_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Market.ProtoReflect.Descriptor instead.
func (*Market) Descriptor() ([]byte, []int) {
	return file_tdex_v2_types_proto_rawDescGZIP(), []int{4}
}

func (x *Market) GetBaseAsset() string {
	if x != nil {
		return x.BaseAsset
	}
	return ""
}

func (x *Market) GetQuoteAsset() string {
	if x != nil {
		return x.QuoteAsset
	}
	return ""
}

type MarketWithFee struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Market *Market `protobuf:"bytes,1,opt,name=market,proto3" json:"market,omitempty"`
	Fee    *Fee    `protobuf:"bytes,2,opt,name=fee,proto3" json:"fee,omitempty"`
}

func (x *MarketWithFee) Reset() {
	*x = MarketWithFee{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tdex_v2_types_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MarketWithFee) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarketWithFee) ProtoMessage() {}

func (x *MarketWithFee) ProtoReflect() protoreflect.Message {
	mi := &file_tdex_v2_types_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarketWithFee.ProtoReflect.Descriptor instead.
func (*MarketWithFee) Descriptor() ([]byte, []int) {
	return file_tdex_v2_types_proto_rawDescGZIP(), []int{5}
}

func (x *MarketWithFee) GetMarket() *Market {
	if x != nil {
		return x.Market
	}
	return nil
}

func (x *MarketWithFee) GetFee() *Fee {
	if x != nil {
		return x.Fee
	}
	return nil
}

type Price struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BasePrice  float64 `protobuf:"fixed64,1,opt,name=base_price,json=basePrice,proto3" json:"base_price,omitempty"`
	QuotePrice float64 `protobuf:"fixed64,2,opt,name=quote_price,json=quotePrice,proto3" json:"quote_price,omitempty"`
}

func (x *Price) Reset() {
	*x = Price{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tdex_v2_types_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Price) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Price) ProtoMessage() {}

func (x *Price) ProtoReflect() protoreflect.Message {
	mi := &file_tdex_v2_types_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Price.ProtoReflect.Descriptor instead.
func (*Price) Descriptor() ([]byte, []int) {
	return file_tdex_v2_types_proto_rawDescGZIP(), []int{6}
}

func (x *Price) GetBasePrice() float64 {
	if x != nil {
		return x.BasePrice
	}
	return 0
}

func (x *Price) GetQuotePrice() float64 {
	if x != nil {
		return x.QuotePrice
	}
	return 0
}

type Preview struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The price of the market.
	Price *Price `protobuf:"bytes,1,opt,name=price,proto3" json:"price,omitempty"`
	// The fees of the market.
	Fee *Fee `protobuf:"bytes,2,opt,name=fee,proto3" json:"fee,omitempty"`
	// The previewd amount (fees excluded).
	Amount uint64 `protobuf:"varint,3,opt,name=amount,proto3" json:"amount,omitempty"`
	// The asset of the previewed amount (fees excluded).
	Asset string `protobuf:"bytes,4,opt,name=asset,proto3" json:"asset,omitempty"`
	// The previewed fee amount,
	FeeAmount uint64 `protobuf:"varint,5,opt,name=fee_amount,json=feeAmount,proto3" json:"fee_amount,omitempty"`
	// The asset of the previewed fee amount,
	FeeAsset string `protobuf:"bytes,6,opt,name=fee_asset,json=feeAsset,proto3" json:"fee_asset,omitempty"`
}

func (x *Preview) Reset() {
	*x = Preview{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tdex_v2_types_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Preview) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Preview) ProtoMessage() {}

func (x *Preview) ProtoReflect() protoreflect.Message {
	mi := &file_tdex_v2_types_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Preview.ProtoReflect.Descriptor instead.
func (*Preview) Descriptor() ([]byte, []int) {
	return file_tdex_v2_types_proto_rawDescGZIP(), []int{7}
}

func (x *Preview) GetPrice() *Price {
	if x != nil {
		return x.Price
	}
	return nil
}

func (x *Preview) GetFee() *Fee {
	if x != nil {
		return x.Fee
	}
	return nil
}

func (x *Preview) GetAmount() uint64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *Preview) GetAsset() string {
	if x != nil {
		return x.Asset
	}
	return ""
}

func (x *Preview) GetFeeAmount() uint64 {
	if x != nil {
		return x.FeeAmount
	}
	return 0
}

func (x *Preview) GetFeeAsset() string {
	if x != nil {
		return x.FeeAsset
	}
	return ""
}

var File_tdex_v2_types_proto protoreflect.FileDescriptor

var file_tdex_v2_types_proto_rawDesc = []byte{
	0x0a, 0x13, 0x74, 0x64, 0x65, 0x78, 0x2f, 0x76, 0x32, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x74, 0x64, 0x65, 0x78, 0x2e, 0x76, 0x32, 0x22, 0xa4,
	0x01, 0x0a, 0x0e, 0x55, 0x6e, 0x62, 0x6c, 0x69, 0x6e, 0x64, 0x65, 0x64, 0x49, 0x6e, 0x70, 0x75,
	0x74, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x73, 0x73, 0x65, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x73, 0x73, 0x65, 0x74, 0x12, 0x1a, 0x0a,
	0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x42, 0x02, 0x30,
	0x01, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x61, 0x73, 0x73,
	0x65, 0x74, 0x5f, 0x62, 0x6c, 0x69, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x61, 0x73, 0x73, 0x65, 0x74, 0x42, 0x6c, 0x69, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x25,
	0x0a, 0x0e, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x62, 0x6c, 0x69, 0x6e, 0x64, 0x65, 0x72,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x6c,
	0x69, 0x6e, 0x64, 0x65, 0x72, 0x22, 0x71, 0x0a, 0x03, 0x46, 0x65, 0x65, 0x12, 0x39, 0x0a, 0x0e,
	0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x5f, 0x66, 0x65, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x74, 0x64, 0x65, 0x78, 0x2e, 0x76, 0x32, 0x2e, 0x4d,
	0x61, 0x72, 0x6b, 0x65, 0x74, 0x46, 0x65, 0x65, 0x52, 0x0d, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e,
	0x74, 0x61, 0x67, 0x65, 0x46, 0x65, 0x65, 0x12, 0x2f, 0x0a, 0x09, 0x66, 0x69, 0x78, 0x65, 0x64,
	0x5f, 0x66, 0x65, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x74, 0x64, 0x65,
	0x78, 0x2e, 0x76, 0x32, 0x2e, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x46, 0x65, 0x65, 0x52, 0x08,
	0x66, 0x69, 0x78, 0x65, 0x64, 0x46, 0x65, 0x65, 0x22, 0x53, 0x0a, 0x09, 0x4d, 0x61, 0x72, 0x6b,
	0x65, 0x74, 0x46, 0x65, 0x65, 0x12, 0x21, 0x0a, 0x0a, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x61, 0x73,
	0x73, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x42, 0x02, 0x30, 0x01, 0x52, 0x09, 0x62,
	0x61, 0x73, 0x65, 0x41, 0x73, 0x73, 0x65, 0x74, 0x12, 0x23, 0x0a, 0x0b, 0x71, 0x75, 0x6f, 0x74,
	0x65, 0x5f, 0x61, 0x73, 0x73, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x42, 0x02, 0x30,
	0x01, 0x52, 0x0a, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x41, 0x73, 0x73, 0x65, 0x74, 0x22, 0x55, 0x0a,
	0x07, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x23, 0x0a, 0x0b, 0x62, 0x61, 0x73, 0x65,
	0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x42, 0x02, 0x30,
	0x01, 0x52, 0x0a, 0x62, 0x61, 0x73, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x25, 0x0a,
	0x0c, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x04, 0x42, 0x02, 0x30, 0x01, 0x52, 0x0b, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x41, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x22, 0x48, 0x0a, 0x06, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x12, 0x1d,
	0x0a, 0x0a, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x61, 0x73, 0x73, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x62, 0x61, 0x73, 0x65, 0x41, 0x73, 0x73, 0x65, 0x74, 0x12, 0x1f, 0x0a,
	0x0b, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x5f, 0x61, 0x73, 0x73, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x41, 0x73, 0x73, 0x65, 0x74, 0x22, 0x58,
	0x0a, 0x0d, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x57, 0x69, 0x74, 0x68, 0x46, 0x65, 0x65, 0x12,
	0x27, 0x0a, 0x06, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0f, 0x2e, 0x74, 0x64, 0x65, 0x78, 0x2e, 0x76, 0x32, 0x2e, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74,
	0x52, 0x06, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x12, 0x1e, 0x0a, 0x03, 0x66, 0x65, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x74, 0x64, 0x65, 0x78, 0x2e, 0x76, 0x32, 0x2e,
	0x46, 0x65, 0x65, 0x52, 0x03, 0x66, 0x65, 0x65, 0x22, 0x47, 0x0a, 0x05, 0x50, 0x72, 0x69, 0x63,
	0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x62, 0x61, 0x73, 0x65, 0x50, 0x72, 0x69, 0x63, 0x65,
	0x12, 0x1f, 0x0a, 0x0b, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0a, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x50, 0x72, 0x69, 0x63,
	0x65, 0x22, 0xc1, 0x01, 0x0a, 0x07, 0x50, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x12, 0x24, 0x0a,
	0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x74,
	0x64, 0x65, 0x78, 0x2e, 0x76, 0x32, 0x2e, 0x50, 0x72, 0x69, 0x63, 0x65, 0x52, 0x05, 0x70, 0x72,
	0x69, 0x63, 0x65, 0x12, 0x1e, 0x0a, 0x03, 0x66, 0x65, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0c, 0x2e, 0x74, 0x64, 0x65, 0x78, 0x2e, 0x76, 0x32, 0x2e, 0x46, 0x65, 0x65, 0x52, 0x03,
	0x66, 0x65, 0x65, 0x12, 0x1a, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x04, 0x42, 0x02, 0x30, 0x01, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x14, 0x0a, 0x05, 0x61, 0x73, 0x73, 0x65, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x61, 0x73, 0x73, 0x65, 0x74, 0x12, 0x21, 0x0a, 0x0a, 0x66, 0x65, 0x65, 0x5f, 0x61, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x42, 0x02, 0x30, 0x01, 0x52, 0x09, 0x66,
	0x65, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x65, 0x65, 0x5f,
	0x61, 0x73, 0x73, 0x65, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x65, 0x65,
	0x41, 0x73, 0x73, 0x65, 0x74, 0x2a, 0x34, 0x0a, 0x09, 0x54, 0x72, 0x61, 0x64, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x12, 0x0a, 0x0e, 0x54, 0x52, 0x41, 0x44, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45,
	0x5f, 0x42, 0x55, 0x59, 0x10, 0x00, 0x12, 0x13, 0x0a, 0x0f, 0x54, 0x52, 0x41, 0x44, 0x45, 0x5f,
	0x54, 0x59, 0x50, 0x45, 0x5f, 0x53, 0x45, 0x4c, 0x4c, 0x10, 0x01, 0x2a, 0x73, 0x0a, 0x0b, 0x43,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x15, 0x0a, 0x11, 0x43, 0x4f,
	0x4e, 0x54, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4a, 0x53, 0x4f, 0x4e, 0x10,
	0x00, 0x12, 0x15, 0x0a, 0x11, 0x43, 0x4f, 0x4e, 0x54, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50,
	0x45, 0x5f, 0x47, 0x52, 0x50, 0x43, 0x10, 0x01, 0x12, 0x18, 0x0a, 0x14, 0x43, 0x4f, 0x4e, 0x54,
	0x45, 0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x47, 0x52, 0x50, 0x43, 0x57, 0x45, 0x42,
	0x10, 0x02, 0x12, 0x1c, 0x0a, 0x18, 0x43, 0x4f, 0x4e, 0x54, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x59,
	0x50, 0x45, 0x5f, 0x47, 0x52, 0x50, 0x43, 0x57, 0x45, 0x42, 0x54, 0x45, 0x58, 0x54, 0x10, 0x03,
	0x42, 0xa0, 0x01, 0x0a, 0x0b, 0x63, 0x6f, 0x6d, 0x2e, 0x74, 0x64, 0x65, 0x78, 0x2e, 0x76, 0x32,
	0x42, 0x0a, 0x54, 0x79, 0x70, 0x65, 0x73, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x48,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x74, 0x64, 0x65, 0x78, 0x2d,
	0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2f, 0x74, 0x64, 0x65, 0x78, 0x2d, 0x64, 0x61, 0x65,
	0x6d, 0x6f, 0x6e, 0x2f, 0x61, 0x70, 0x69, 0x2d, 0x73, 0x70, 0x65, 0x63, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x74, 0x64, 0x65, 0x78, 0x2f, 0x76,
	0x32, 0x3b, 0x74, 0x64, 0x65, 0x78, 0x76, 0x32, 0xa2, 0x02, 0x03, 0x54, 0x58, 0x58, 0xaa, 0x02,
	0x07, 0x54, 0x64, 0x65, 0x78, 0x2e, 0x56, 0x32, 0xca, 0x02, 0x07, 0x54, 0x64, 0x65, 0x78, 0x5c,
	0x56, 0x32, 0xe2, 0x02, 0x13, 0x54, 0x64, 0x65, 0x78, 0x5c, 0x56, 0x32, 0x5c, 0x47, 0x50, 0x42,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x08, 0x54, 0x64, 0x65, 0x78, 0x3a,
	0x3a, 0x56, 0x32, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_tdex_v2_types_proto_rawDescOnce sync.Once
	file_tdex_v2_types_proto_rawDescData = file_tdex_v2_types_proto_rawDesc
)

func file_tdex_v2_types_proto_rawDescGZIP() []byte {
	file_tdex_v2_types_proto_rawDescOnce.Do(func() {
		file_tdex_v2_types_proto_rawDescData = protoimpl.X.CompressGZIP(file_tdex_v2_types_proto_rawDescData)
	})
	return file_tdex_v2_types_proto_rawDescData
}

var file_tdex_v2_types_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_tdex_v2_types_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_tdex_v2_types_proto_goTypes = []interface{}{
	(TradeType)(0),         // 0: tdex.v2.TradeType
	(ContentType)(0),       // 1: tdex.v2.ContentType
	(*UnblindedInput)(nil), // 2: tdex.v2.UnblindedInput
	(*Fee)(nil),            // 3: tdex.v2.Fee
	(*MarketFee)(nil),      // 4: tdex.v2.MarketFee
	(*Balance)(nil),        // 5: tdex.v2.Balance
	(*Market)(nil),         // 6: tdex.v2.Market
	(*MarketWithFee)(nil),  // 7: tdex.v2.MarketWithFee
	(*Price)(nil),          // 8: tdex.v2.Price
	(*Preview)(nil),        // 9: tdex.v2.Preview
}
var file_tdex_v2_types_proto_depIdxs = []int32{
	4, // 0: tdex.v2.Fee.percentage_fee:type_name -> tdex.v2.MarketFee
	4, // 1: tdex.v2.Fee.fixed_fee:type_name -> tdex.v2.MarketFee
	6, // 2: tdex.v2.MarketWithFee.market:type_name -> tdex.v2.Market
	3, // 3: tdex.v2.MarketWithFee.fee:type_name -> tdex.v2.Fee
	8, // 4: tdex.v2.Preview.price:type_name -> tdex.v2.Price
	3, // 5: tdex.v2.Preview.fee:type_name -> tdex.v2.Fee
	6, // [6:6] is the sub-list for method output_type
	6, // [6:6] is the sub-list for method input_type
	6, // [6:6] is the sub-list for extension type_name
	6, // [6:6] is the sub-list for extension extendee
	0, // [0:6] is the sub-list for field type_name
}

func init() { file_tdex_v2_types_proto_init() }
func file_tdex_v2_types_proto_init() {
	if File_tdex_v2_types_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_tdex_v2_types_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnblindedInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tdex_v2_types_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Fee); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tdex_v2_types_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MarketFee); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tdex_v2_types_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Balance); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tdex_v2_types_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Market); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tdex_v2_types_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MarketWithFee); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tdex_v2_types_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Price); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tdex_v2_types_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Preview); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_tdex_v2_types_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_tdex_v2_types_proto_goTypes,
		DependencyIndexes: file_tdex_v2_types_proto_depIdxs,
		EnumInfos:         file_tdex_v2_types_proto_enumTypes,
		MessageInfos:      file_tdex_v2_types_proto_msgTypes,
	}.Build()
	File_tdex_v2_types_proto = out.File
	file_tdex_v2_types_proto_rawDesc = nil
	file_tdex_v2_types_proto_goTypes = nil
	file_tdex_v2_types_proto_depIdxs = nil
}
