// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        (unknown)
// source: tdex/v2/trade.proto

package tdexv2

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// BOTD#4 Service's messages
type ListMarketsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListMarketsRequest) Reset() {
	*x = ListMarketsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tdex_v2_trade_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListMarketsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMarketsRequest) ProtoMessage() {}

func (x *ListMarketsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tdex_v2_trade_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMarketsRequest.ProtoReflect.Descriptor instead.
func (*ListMarketsRequest) Descriptor() ([]byte, []int) {
	return file_tdex_v2_trade_proto_rawDescGZIP(), []int{0}
}

type ListMarketsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Markets []*MarketWithFee `protobuf:"bytes,1,rep,name=markets,proto3" json:"markets,omitempty"`
}

func (x *ListMarketsResponse) Reset() {
	*x = ListMarketsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tdex_v2_trade_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListMarketsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMarketsResponse) ProtoMessage() {}

func (x *ListMarketsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tdex_v2_trade_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMarketsResponse.ProtoReflect.Descriptor instead.
func (*ListMarketsResponse) Descriptor() ([]byte, []int) {
	return file_tdex_v2_trade_proto_rawDescGZIP(), []int{1}
}

func (x *ListMarketsResponse) GetMarkets() []*MarketWithFee {
	if x != nil {
		return x.Markets
	}
	return nil
}

type GetMarketBalanceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Market *Market `protobuf:"bytes,1,opt,name=market,proto3" json:"market,omitempty"`
}

func (x *GetMarketBalanceRequest) Reset() {
	*x = GetMarketBalanceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tdex_v2_trade_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMarketBalanceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMarketBalanceRequest) ProtoMessage() {}

func (x *GetMarketBalanceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tdex_v2_trade_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMarketBalanceRequest.ProtoReflect.Descriptor instead.
func (*GetMarketBalanceRequest) Descriptor() ([]byte, []int) {
	return file_tdex_v2_trade_proto_rawDescGZIP(), []int{2}
}

func (x *GetMarketBalanceRequest) GetMarket() *Market {
	if x != nil {
		return x.Market
	}
	return nil
}

type GetMarketBalanceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Balance *Balance `protobuf:"bytes,1,opt,name=balance,proto3" json:"balance,omitempty"`
	Fee     *Fee     `protobuf:"bytes,2,opt,name=fee,proto3" json:"fee,omitempty"`
}

func (x *GetMarketBalanceResponse) Reset() {
	*x = GetMarketBalanceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tdex_v2_trade_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMarketBalanceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMarketBalanceResponse) ProtoMessage() {}

func (x *GetMarketBalanceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tdex_v2_trade_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMarketBalanceResponse.ProtoReflect.Descriptor instead.
func (*GetMarketBalanceResponse) Descriptor() ([]byte, []int) {
	return file_tdex_v2_trade_proto_rawDescGZIP(), []int{3}
}

func (x *GetMarketBalanceResponse) GetBalance() *Balance {
	if x != nil {
		return x.Balance
	}
	return nil
}

func (x *GetMarketBalanceResponse) GetFee() *Fee {
	if x != nil {
		return x.Fee
	}
	return nil
}

type GetMarketPriceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Market *Market `protobuf:"bytes,1,opt,name=market,proto3" json:"market,omitempty"`
}

func (x *GetMarketPriceRequest) Reset() {
	*x = GetMarketPriceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tdex_v2_trade_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMarketPriceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMarketPriceRequest) ProtoMessage() {}

func (x *GetMarketPriceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tdex_v2_trade_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMarketPriceRequest.ProtoReflect.Descriptor instead.
func (*GetMarketPriceRequest) Descriptor() ([]byte, []int) {
	return file_tdex_v2_trade_proto_rawDescGZIP(), []int{4}
}

func (x *GetMarketPriceRequest) GetMarket() *Market {
	if x != nil {
		return x.Market
	}
	return nil
}

type GetMarketPriceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SpotPrice         float64  `protobuf:"fixed64,1,opt,name=spot_price,json=spotPrice,proto3" json:"spot_price,omitempty"`
	MinTradableAmount uint64   `protobuf:"varint,2,opt,name=min_tradable_amount,json=minTradableAmount,proto3" json:"min_tradable_amount,omitempty"`
	Balance           *Balance `protobuf:"bytes,3,opt,name=balance,proto3" json:"balance,omitempty"`
}

func (x *GetMarketPriceResponse) Reset() {
	*x = GetMarketPriceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tdex_v2_trade_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMarketPriceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMarketPriceResponse) ProtoMessage() {}

func (x *GetMarketPriceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tdex_v2_trade_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMarketPriceResponse.ProtoReflect.Descriptor instead.
func (*GetMarketPriceResponse) Descriptor() ([]byte, []int) {
	return file_tdex_v2_trade_proto_rawDescGZIP(), []int{5}
}

func (x *GetMarketPriceResponse) GetSpotPrice() float64 {
	if x != nil {
		return x.SpotPrice
	}
	return 0
}

func (x *GetMarketPriceResponse) GetMinTradableAmount() uint64 {
	if x != nil {
		return x.MinTradableAmount
	}
	return 0
}

func (x *GetMarketPriceResponse) GetBalance() *Balance {
	if x != nil {
		return x.Balance
	}
	return nil
}

type PreviewTradeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Market   *Market   `protobuf:"bytes,1,opt,name=market,proto3" json:"market,omitempty"`
	Type     TradeType `protobuf:"varint,2,opt,name=type,proto3,enum=tdex.v2.TradeType" json:"type,omitempty"`
	Amount   uint64    `protobuf:"varint,3,opt,name=amount,proto3" json:"amount,omitempty"`
	Asset    string    `protobuf:"bytes,4,opt,name=asset,proto3" json:"asset,omitempty"`
	FeeAsset string    `protobuf:"bytes,5,opt,name=fee_asset,json=feeAsset,proto3" json:"fee_asset,omitempty"`
}

func (x *PreviewTradeRequest) Reset() {
	*x = PreviewTradeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tdex_v2_trade_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PreviewTradeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PreviewTradeRequest) ProtoMessage() {}

func (x *PreviewTradeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tdex_v2_trade_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PreviewTradeRequest.ProtoReflect.Descriptor instead.
func (*PreviewTradeRequest) Descriptor() ([]byte, []int) {
	return file_tdex_v2_trade_proto_rawDescGZIP(), []int{6}
}

func (x *PreviewTradeRequest) GetMarket() *Market {
	if x != nil {
		return x.Market
	}
	return nil
}

func (x *PreviewTradeRequest) GetType() TradeType {
	if x != nil {
		return x.Type
	}
	return TradeType_TRADE_TYPE_BUY
}

func (x *PreviewTradeRequest) GetAmount() uint64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *PreviewTradeRequest) GetAsset() string {
	if x != nil {
		return x.Asset
	}
	return ""
}

func (x *PreviewTradeRequest) GetFeeAsset() string {
	if x != nil {
		return x.FeeAsset
	}
	return ""
}

type PreviewTradeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Previews []*Preview `protobuf:"bytes,1,rep,name=previews,proto3" json:"previews,omitempty"`
}

func (x *PreviewTradeResponse) Reset() {
	*x = PreviewTradeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tdex_v2_trade_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PreviewTradeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PreviewTradeResponse) ProtoMessage() {}

func (x *PreviewTradeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tdex_v2_trade_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PreviewTradeResponse.ProtoReflect.Descriptor instead.
func (*PreviewTradeResponse) Descriptor() ([]byte, []int) {
	return file_tdex_v2_trade_proto_rawDescGZIP(), []int{7}
}

func (x *PreviewTradeResponse) GetPreviews() []*Preview {
	if x != nil {
		return x.Previews
	}
	return nil
}

type ProposeTradeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Market      *Market      `protobuf:"bytes,1,opt,name=market,proto3" json:"market,omitempty"`
	Type        TradeType    `protobuf:"varint,2,opt,name=type,proto3,enum=tdex.v2.TradeType" json:"type,omitempty"`
	SwapRequest *SwapRequest `protobuf:"bytes,3,opt,name=swap_request,json=swapRequest,proto3" json:"swap_request,omitempty"`
	FeeAmount   uint64       `protobuf:"varint,4,opt,name=fee_amount,json=feeAmount,proto3" json:"fee_amount,omitempty"`
	FeeAsset    string       `protobuf:"bytes,5,opt,name=fee_asset,json=feeAsset,proto3" json:"fee_asset,omitempty"`
}

func (x *ProposeTradeRequest) Reset() {
	*x = ProposeTradeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tdex_v2_trade_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProposeTradeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProposeTradeRequest) ProtoMessage() {}

func (x *ProposeTradeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tdex_v2_trade_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProposeTradeRequest.ProtoReflect.Descriptor instead.
func (*ProposeTradeRequest) Descriptor() ([]byte, []int) {
	return file_tdex_v2_trade_proto_rawDescGZIP(), []int{8}
}

func (x *ProposeTradeRequest) GetMarket() *Market {
	if x != nil {
		return x.Market
	}
	return nil
}

func (x *ProposeTradeRequest) GetType() TradeType {
	if x != nil {
		return x.Type
	}
	return TradeType_TRADE_TYPE_BUY
}

func (x *ProposeTradeRequest) GetSwapRequest() *SwapRequest {
	if x != nil {
		return x.SwapRequest
	}
	return nil
}

func (x *ProposeTradeRequest) GetFeeAmount() uint64 {
	if x != nil {
		return x.FeeAmount
	}
	return 0
}

func (x *ProposeTradeRequest) GetFeeAsset() string {
	if x != nil {
		return x.FeeAsset
	}
	return ""
}

type ProposeTradeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SwapAccept     *SwapAccept `protobuf:"bytes,1,opt,name=swap_accept,json=swapAccept,proto3" json:"swap_accept,omitempty"`
	SwapFail       *SwapFail   `protobuf:"bytes,2,opt,name=swap_fail,json=swapFail,proto3" json:"swap_fail,omitempty"`
	ExpiryTimeUnix uint64      `protobuf:"varint,3,opt,name=expiry_time_unix,json=expiryTimeUnix,proto3" json:"expiry_time_unix,omitempty"`
}

func (x *ProposeTradeResponse) Reset() {
	*x = ProposeTradeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tdex_v2_trade_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProposeTradeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProposeTradeResponse) ProtoMessage() {}

func (x *ProposeTradeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tdex_v2_trade_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProposeTradeResponse.ProtoReflect.Descriptor instead.
func (*ProposeTradeResponse) Descriptor() ([]byte, []int) {
	return file_tdex_v2_trade_proto_rawDescGZIP(), []int{9}
}

func (x *ProposeTradeResponse) GetSwapAccept() *SwapAccept {
	if x != nil {
		return x.SwapAccept
	}
	return nil
}

func (x *ProposeTradeResponse) GetSwapFail() *SwapFail {
	if x != nil {
		return x.SwapFail
	}
	return nil
}

func (x *ProposeTradeResponse) GetExpiryTimeUnix() uint64 {
	if x != nil {
		return x.ExpiryTimeUnix
	}
	return 0
}

type CompleteTradeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SwapComplete *SwapComplete `protobuf:"bytes,1,opt,name=swap_complete,json=swapComplete,proto3" json:"swap_complete,omitempty"`
	SwapFail     *SwapFail     `protobuf:"bytes,2,opt,name=swap_fail,json=swapFail,proto3" json:"swap_fail,omitempty"`
}

func (x *CompleteTradeRequest) Reset() {
	*x = CompleteTradeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tdex_v2_trade_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CompleteTradeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompleteTradeRequest) ProtoMessage() {}

func (x *CompleteTradeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tdex_v2_trade_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompleteTradeRequest.ProtoReflect.Descriptor instead.
func (*CompleteTradeRequest) Descriptor() ([]byte, []int) {
	return file_tdex_v2_trade_proto_rawDescGZIP(), []int{10}
}

func (x *CompleteTradeRequest) GetSwapComplete() *SwapComplete {
	if x != nil {
		return x.SwapComplete
	}
	return nil
}

func (x *CompleteTradeRequest) GetSwapFail() *SwapFail {
	if x != nil {
		return x.SwapFail
	}
	return nil
}

type CompleteTradeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Txid     string    `protobuf:"bytes,1,opt,name=txid,proto3" json:"txid,omitempty"`
	SwapFail *SwapFail `protobuf:"bytes,2,opt,name=swap_fail,json=swapFail,proto3" json:"swap_fail,omitempty"`
}

func (x *CompleteTradeResponse) Reset() {
	*x = CompleteTradeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tdex_v2_trade_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CompleteTradeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompleteTradeResponse) ProtoMessage() {}

func (x *CompleteTradeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tdex_v2_trade_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompleteTradeResponse.ProtoReflect.Descriptor instead.
func (*CompleteTradeResponse) Descriptor() ([]byte, []int) {
	return file_tdex_v2_trade_proto_rawDescGZIP(), []int{11}
}

func (x *CompleteTradeResponse) GetTxid() string {
	if x != nil {
		return x.Txid
	}
	return ""
}

func (x *CompleteTradeResponse) GetSwapFail() *SwapFail {
	if x != nil {
		return x.SwapFail
	}
	return nil
}

var File_tdex_v2_trade_proto protoreflect.FileDescriptor

var file_tdex_v2_trade_proto_rawDesc = []byte{
	0x0a, 0x13, 0x74, 0x64, 0x65, 0x78, 0x2f, 0x76, 0x32, 0x2f, 0x74, 0x72, 0x61, 0x64, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x74, 0x64, 0x65, 0x78, 0x2e, 0x76, 0x32, 0x1a, 0x12,
	0x74, 0x64, 0x65, 0x78, 0x2f, 0x76, 0x32, 0x2f, 0x73, 0x77, 0x61, 0x70, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x13, 0x74, 0x64, 0x65, 0x78, 0x2f, 0x76, 0x32, 0x2f, 0x74, 0x79, 0x70, 0x65,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x62, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x14, 0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x61,
	0x72, 0x6b, 0x65, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x47, 0x0a, 0x13,
	0x4c, 0x69, 0x73, 0x74, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x30, 0x0a, 0x07, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x74, 0x64, 0x65, 0x78, 0x2e, 0x76, 0x32, 0x2e, 0x4d,
	0x61, 0x72, 0x6b, 0x65, 0x74, 0x57, 0x69, 0x74, 0x68, 0x46, 0x65, 0x65, 0x52, 0x07, 0x6d, 0x61,
	0x72, 0x6b, 0x65, 0x74, 0x73, 0x22, 0x42, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x72, 0x6b,
	0x65, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x27, 0x0a, 0x06, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0f, 0x2e, 0x74, 0x64, 0x65, 0x78, 0x2e, 0x76, 0x32, 0x2e, 0x4d, 0x61, 0x72, 0x6b, 0x65,
	0x74, 0x52, 0x06, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x22, 0x72, 0x0a, 0x18, 0x47, 0x65, 0x74,
	0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x30, 0x0a, 0x07, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x74, 0x64, 0x65, 0x78, 0x2e, 0x76, 0x32,
	0x2e, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x42, 0x04, 0xe2, 0x41, 0x01, 0x02, 0x52, 0x07,
	0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x24, 0x0a, 0x03, 0x66, 0x65, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x74, 0x64, 0x65, 0x78, 0x2e, 0x76, 0x32, 0x2e, 0x46,
	0x65, 0x65, 0x42, 0x04, 0xe2, 0x41, 0x01, 0x02, 0x52, 0x03, 0x66, 0x65, 0x65, 0x22, 0x40, 0x0a,
	0x15, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x27, 0x0a, 0x06, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x74, 0x64, 0x65, 0x78, 0x2e, 0x76, 0x32,
	0x2e, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x52, 0x06, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x22,
	0xa7, 0x01, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x50, 0x72, 0x69,
	0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x23, 0x0a, 0x0a, 0x73, 0x70,
	0x6f, 0x74, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x42, 0x04,
	0xe2, 0x41, 0x01, 0x02, 0x52, 0x09, 0x73, 0x70, 0x6f, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12,
	0x36, 0x0a, 0x13, 0x6d, 0x69, 0x6e, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x61, 0x62, 0x6c, 0x65, 0x5f,
	0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x42, 0x06, 0x30, 0x01,
	0xe2, 0x41, 0x01, 0x02, 0x52, 0x11, 0x6d, 0x69, 0x6e, 0x54, 0x72, 0x61, 0x64, 0x61, 0x62, 0x6c,
	0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x30, 0x0a, 0x07, 0x62, 0x61, 0x6c, 0x61, 0x6e,
	0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x74, 0x64, 0x65, 0x78, 0x2e,
	0x76, 0x32, 0x2e, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x42, 0x04, 0xe2, 0x41, 0x01, 0x02,
	0x52, 0x07, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x22, 0xb5, 0x01, 0x0a, 0x13, 0x50, 0x72,
	0x65, 0x76, 0x69, 0x65, 0x77, 0x54, 0x72, 0x61, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x27, 0x0a, 0x06, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0f, 0x2e, 0x74, 0x64, 0x65, 0x78, 0x2e, 0x76, 0x32, 0x2e, 0x4d, 0x61, 0x72, 0x6b,
	0x65, 0x74, 0x52, 0x06, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x12, 0x26, 0x0a, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x74, 0x64, 0x65, 0x78, 0x2e,
	0x76, 0x32, 0x2e, 0x54, 0x72, 0x61, 0x64, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x12, 0x1a, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x04, 0x42, 0x02, 0x30, 0x01, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x14,
	0x0a, 0x05, 0x61, 0x73, 0x73, 0x65, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61,
	0x73, 0x73, 0x65, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x65, 0x65, 0x5f, 0x61, 0x73, 0x73, 0x65,
	0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x65, 0x65, 0x41, 0x73, 0x73, 0x65,
	0x74, 0x22, 0x44, 0x0a, 0x14, 0x50, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x54, 0x72, 0x61, 0x64,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2c, 0x0a, 0x08, 0x70, 0x72, 0x65,
	0x76, 0x69, 0x65, 0x77, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x74, 0x64,
	0x65, 0x78, 0x2e, 0x76, 0x32, 0x2e, 0x50, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52, 0x08, 0x70,
	0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x73, 0x22, 0xdf, 0x01, 0x0a, 0x13, 0x50, 0x72, 0x6f, 0x70,
	0x6f, 0x73, 0x65, 0x54, 0x72, 0x61, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x27, 0x0a, 0x06, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0f, 0x2e, 0x74, 0x64, 0x65, 0x78, 0x2e, 0x76, 0x32, 0x2e, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74,
	0x52, 0x06, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x12, 0x26, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x74, 0x64, 0x65, 0x78, 0x2e, 0x76, 0x32,
	0x2e, 0x54, 0x72, 0x61, 0x64, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x12, 0x37, 0x0a, 0x0c, 0x73, 0x77, 0x61, 0x70, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x74, 0x64, 0x65, 0x78, 0x2e, 0x76, 0x32,
	0x2e, 0x53, 0x77, 0x61, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x0b, 0x73, 0x77,
	0x61, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0a, 0x66, 0x65, 0x65,
	0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x42, 0x02, 0x30,
	0x01, 0x52, 0x09, 0x66, 0x65, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1b, 0x0a, 0x09,
	0x66, 0x65, 0x65, 0x5f, 0x61, 0x73, 0x73, 0x65, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x66, 0x65, 0x65, 0x41, 0x73, 0x73, 0x65, 0x74, 0x22, 0xa6, 0x01, 0x0a, 0x14, 0x50, 0x72,
	0x6f, 0x70, 0x6f, 0x73, 0x65, 0x54, 0x72, 0x61, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x34, 0x0a, 0x0b, 0x73, 0x77, 0x61, 0x70, 0x5f, 0x61, 0x63, 0x63, 0x65, 0x70,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x74, 0x64, 0x65, 0x78, 0x2e, 0x76,
	0x32, 0x2e, 0x53, 0x77, 0x61, 0x70, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x52, 0x0a, 0x73, 0x77,
	0x61, 0x70, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x12, 0x2e, 0x0a, 0x09, 0x73, 0x77, 0x61, 0x70,
	0x5f, 0x66, 0x61, 0x69, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x74, 0x64,
	0x65, 0x78, 0x2e, 0x76, 0x32, 0x2e, 0x53, 0x77, 0x61, 0x70, 0x46, 0x61, 0x69, 0x6c, 0x52, 0x08,
	0x73, 0x77, 0x61, 0x70, 0x46, 0x61, 0x69, 0x6c, 0x12, 0x28, 0x0a, 0x10, 0x65, 0x78, 0x70, 0x69,
	0x72, 0x79, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x75, 0x6e, 0x69, 0x78, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x0e, 0x65, 0x78, 0x70, 0x69, 0x72, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x55, 0x6e,
	0x69, 0x78, 0x22, 0x82, 0x01, 0x0a, 0x14, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x54,
	0x72, 0x61, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3a, 0x0a, 0x0d, 0x73,
	0x77, 0x61, 0x70, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x15, 0x2e, 0x74, 0x64, 0x65, 0x78, 0x2e, 0x76, 0x32, 0x2e, 0x53, 0x77, 0x61,
	0x70, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x0c, 0x73, 0x77, 0x61, 0x70, 0x43,
	0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x2e, 0x0a, 0x09, 0x73, 0x77, 0x61, 0x70, 0x5f,
	0x66, 0x61, 0x69, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x74, 0x64, 0x65,
	0x78, 0x2e, 0x76, 0x32, 0x2e, 0x53, 0x77, 0x61, 0x70, 0x46, 0x61, 0x69, 0x6c, 0x52, 0x08, 0x73,
	0x77, 0x61, 0x70, 0x46, 0x61, 0x69, 0x6c, 0x22, 0x5b, 0x0a, 0x15, 0x43, 0x6f, 0x6d, 0x70, 0x6c,
	0x65, 0x74, 0x65, 0x54, 0x72, 0x61, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x74, 0x78, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x74, 0x78, 0x69, 0x64, 0x12, 0x2e, 0x0a, 0x09, 0x73, 0x77, 0x61, 0x70, 0x5f, 0x66, 0x61, 0x69,
	0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x74, 0x64, 0x65, 0x78, 0x2e, 0x76,
	0x32, 0x2e, 0x53, 0x77, 0x61, 0x70, 0x46, 0x61, 0x69, 0x6c, 0x52, 0x08, 0x73, 0x77, 0x61, 0x70,
	0x46, 0x61, 0x69, 0x6c, 0x32, 0x9a, 0x05, 0x0a, 0x0c, 0x54, 0x72, 0x61, 0x64, 0x65, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x5d, 0x0a, 0x0b, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x61, 0x72,
	0x6b, 0x65, 0x74, 0x73, 0x12, 0x1b, 0x2e, 0x74, 0x64, 0x65, 0x78, 0x2e, 0x76, 0x32, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1c, 0x2e, 0x74, 0x64, 0x65, 0x78, 0x2e, 0x76, 0x32, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x13, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0d, 0x22, 0x0b, 0x2f, 0x76, 0x32, 0x2f, 0x6d, 0x61, 0x72,
	0x6b, 0x65, 0x74, 0x73, 0x12, 0x76, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x72, 0x6b, 0x65,
	0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x20, 0x2e, 0x74, 0x64, 0x65, 0x78, 0x2e,
	0x76, 0x32, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x42, 0x61, 0x6c, 0x61,
	0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x74, 0x64, 0x65,
	0x78, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x42, 0x61,
	0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1d, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x17, 0x3a, 0x01, 0x2a, 0x22, 0x12, 0x2f, 0x76, 0x32, 0x2f, 0x6d, 0x61,
	0x72, 0x6b, 0x65, 0x74, 0x2f, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x6e, 0x0a, 0x0e,
	0x47, 0x65, 0x74, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1e,
	0x2e, 0x74, 0x64, 0x65, 0x78, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x72, 0x6b,
	0x65, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f,
	0x2e, 0x74, 0x64, 0x65, 0x78, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x72, 0x6b,
	0x65, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x1b, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x15, 0x3a, 0x01, 0x2a, 0x22, 0x10, 0x2f, 0x76, 0x32, 0x2f,
	0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x2f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x69, 0x0a, 0x0c,
	0x50, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x54, 0x72, 0x61, 0x64, 0x65, 0x12, 0x1c, 0x2e, 0x74,
	0x64, 0x65, 0x78, 0x2e, 0x76, 0x32, 0x2e, 0x50, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x54, 0x72,
	0x61, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x74, 0x64, 0x65,
	0x78, 0x2e, 0x76, 0x32, 0x2e, 0x50, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x54, 0x72, 0x61, 0x64,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1c, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x16, 0x3a, 0x01, 0x2a, 0x22, 0x11, 0x2f, 0x76, 0x32, 0x2f, 0x74, 0x72, 0x61, 0x64, 0x65, 0x2f,
	0x70, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x12, 0x69, 0x0a, 0x0c, 0x50, 0x72, 0x6f, 0x70, 0x6f,
	0x73, 0x65, 0x54, 0x72, 0x61, 0x64, 0x65, 0x12, 0x1c, 0x2e, 0x74, 0x64, 0x65, 0x78, 0x2e, 0x76,
	0x32, 0x2e, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x65, 0x54, 0x72, 0x61, 0x64, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x74, 0x64, 0x65, 0x78, 0x2e, 0x76, 0x32, 0x2e,
	0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x65, 0x54, 0x72, 0x61, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x16, 0x3a, 0x01, 0x2a, 0x22,
	0x11, 0x2f, 0x76, 0x32, 0x2f, 0x74, 0x72, 0x61, 0x64, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x70, 0x6f,
	0x73, 0x65, 0x12, 0x6d, 0x0a, 0x0d, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x72,
	0x61, 0x64, 0x65, 0x12, 0x1d, 0x2e, 0x74, 0x64, 0x65, 0x78, 0x2e, 0x76, 0x32, 0x2e, 0x43, 0x6f,
	0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x72, 0x61, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x74, 0x64, 0x65, 0x78, 0x2e, 0x76, 0x32, 0x2e, 0x43, 0x6f, 0x6d,
	0x70, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x72, 0x61, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x1d, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x17, 0x3a, 0x01, 0x2a, 0x22, 0x12, 0x2f,
	0x76, 0x32, 0x2f, 0x74, 0x72, 0x61, 0x64, 0x65, 0x2f, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74,
	0x65, 0x42, 0xa0, 0x01, 0x0a, 0x0b, 0x63, 0x6f, 0x6d, 0x2e, 0x74, 0x64, 0x65, 0x78, 0x2e, 0x76,
	0x32, 0x42, 0x0a, 0x54, 0x72, 0x61, 0x64, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a,
	0x48, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x74, 0x64, 0x65, 0x78,
	0x2d, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2f, 0x74, 0x64, 0x65, 0x78, 0x2d, 0x64, 0x61,
	0x65, 0x6d, 0x6f, 0x6e, 0x2f, 0x61, 0x70, 0x69, 0x2d, 0x73, 0x70, 0x65, 0x63, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x74, 0x64, 0x65, 0x78, 0x2f,
	0x76, 0x32, 0x3b, 0x74, 0x64, 0x65, 0x78, 0x76, 0x32, 0xa2, 0x02, 0x03, 0x54, 0x58, 0x58, 0xaa,
	0x02, 0x07, 0x54, 0x64, 0x65, 0x78, 0x2e, 0x56, 0x32, 0xca, 0x02, 0x07, 0x54, 0x64, 0x65, 0x78,
	0x5c, 0x56, 0x32, 0xe2, 0x02, 0x13, 0x54, 0x64, 0x65, 0x78, 0x5c, 0x56, 0x32, 0x5c, 0x47, 0x50,
	0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x08, 0x54, 0x64, 0x65, 0x78,
	0x3a, 0x3a, 0x56, 0x32, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_tdex_v2_trade_proto_rawDescOnce sync.Once
	file_tdex_v2_trade_proto_rawDescData = file_tdex_v2_trade_proto_rawDesc
)

func file_tdex_v2_trade_proto_rawDescGZIP() []byte {
	file_tdex_v2_trade_proto_rawDescOnce.Do(func() {
		file_tdex_v2_trade_proto_rawDescData = protoimpl.X.CompressGZIP(file_tdex_v2_trade_proto_rawDescData)
	})
	return file_tdex_v2_trade_proto_rawDescData
}

var file_tdex_v2_trade_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_tdex_v2_trade_proto_goTypes = []interface{}{
	(*ListMarketsRequest)(nil),       // 0: tdex.v2.ListMarketsRequest
	(*ListMarketsResponse)(nil),      // 1: tdex.v2.ListMarketsResponse
	(*GetMarketBalanceRequest)(nil),  // 2: tdex.v2.GetMarketBalanceRequest
	(*GetMarketBalanceResponse)(nil), // 3: tdex.v2.GetMarketBalanceResponse
	(*GetMarketPriceRequest)(nil),    // 4: tdex.v2.GetMarketPriceRequest
	(*GetMarketPriceResponse)(nil),   // 5: tdex.v2.GetMarketPriceResponse
	(*PreviewTradeRequest)(nil),      // 6: tdex.v2.PreviewTradeRequest
	(*PreviewTradeResponse)(nil),     // 7: tdex.v2.PreviewTradeResponse
	(*ProposeTradeRequest)(nil),      // 8: tdex.v2.ProposeTradeRequest
	(*ProposeTradeResponse)(nil),     // 9: tdex.v2.ProposeTradeResponse
	(*CompleteTradeRequest)(nil),     // 10: tdex.v2.CompleteTradeRequest
	(*CompleteTradeResponse)(nil),    // 11: tdex.v2.CompleteTradeResponse
	(*MarketWithFee)(nil),            // 12: tdex.v2.MarketWithFee
	(*Market)(nil),                   // 13: tdex.v2.Market
	(*Balance)(nil),                  // 14: tdex.v2.Balance
	(*Fee)(nil),                      // 15: tdex.v2.Fee
	(TradeType)(0),                   // 16: tdex.v2.TradeType
	(*Preview)(nil),                  // 17: tdex.v2.Preview
	(*SwapRequest)(nil),              // 18: tdex.v2.SwapRequest
	(*SwapAccept)(nil),               // 19: tdex.v2.SwapAccept
	(*SwapFail)(nil),                 // 20: tdex.v2.SwapFail
	(*SwapComplete)(nil),             // 21: tdex.v2.SwapComplete
}
var file_tdex_v2_trade_proto_depIdxs = []int32{
	12, // 0: tdex.v2.ListMarketsResponse.markets:type_name -> tdex.v2.MarketWithFee
	13, // 1: tdex.v2.GetMarketBalanceRequest.market:type_name -> tdex.v2.Market
	14, // 2: tdex.v2.GetMarketBalanceResponse.balance:type_name -> tdex.v2.Balance
	15, // 3: tdex.v2.GetMarketBalanceResponse.fee:type_name -> tdex.v2.Fee
	13, // 4: tdex.v2.GetMarketPriceRequest.market:type_name -> tdex.v2.Market
	14, // 5: tdex.v2.GetMarketPriceResponse.balance:type_name -> tdex.v2.Balance
	13, // 6: tdex.v2.PreviewTradeRequest.market:type_name -> tdex.v2.Market
	16, // 7: tdex.v2.PreviewTradeRequest.type:type_name -> tdex.v2.TradeType
	17, // 8: tdex.v2.PreviewTradeResponse.previews:type_name -> tdex.v2.Preview
	13, // 9: tdex.v2.ProposeTradeRequest.market:type_name -> tdex.v2.Market
	16, // 10: tdex.v2.ProposeTradeRequest.type:type_name -> tdex.v2.TradeType
	18, // 11: tdex.v2.ProposeTradeRequest.swap_request:type_name -> tdex.v2.SwapRequest
	19, // 12: tdex.v2.ProposeTradeResponse.swap_accept:type_name -> tdex.v2.SwapAccept
	20, // 13: tdex.v2.ProposeTradeResponse.swap_fail:type_name -> tdex.v2.SwapFail
	21, // 14: tdex.v2.CompleteTradeRequest.swap_complete:type_name -> tdex.v2.SwapComplete
	20, // 15: tdex.v2.CompleteTradeRequest.swap_fail:type_name -> tdex.v2.SwapFail
	20, // 16: tdex.v2.CompleteTradeResponse.swap_fail:type_name -> tdex.v2.SwapFail
	0,  // 17: tdex.v2.TradeService.ListMarkets:input_type -> tdex.v2.ListMarketsRequest
	2,  // 18: tdex.v2.TradeService.GetMarketBalance:input_type -> tdex.v2.GetMarketBalanceRequest
	4,  // 19: tdex.v2.TradeService.GetMarketPrice:input_type -> tdex.v2.GetMarketPriceRequest
	6,  // 20: tdex.v2.TradeService.PreviewTrade:input_type -> tdex.v2.PreviewTradeRequest
	8,  // 21: tdex.v2.TradeService.ProposeTrade:input_type -> tdex.v2.ProposeTradeRequest
	10, // 22: tdex.v2.TradeService.CompleteTrade:input_type -> tdex.v2.CompleteTradeRequest
	1,  // 23: tdex.v2.TradeService.ListMarkets:output_type -> tdex.v2.ListMarketsResponse
	3,  // 24: tdex.v2.TradeService.GetMarketBalance:output_type -> tdex.v2.GetMarketBalanceResponse
	5,  // 25: tdex.v2.TradeService.GetMarketPrice:output_type -> tdex.v2.GetMarketPriceResponse
	7,  // 26: tdex.v2.TradeService.PreviewTrade:output_type -> tdex.v2.PreviewTradeResponse
	9,  // 27: tdex.v2.TradeService.ProposeTrade:output_type -> tdex.v2.ProposeTradeResponse
	11, // 28: tdex.v2.TradeService.CompleteTrade:output_type -> tdex.v2.CompleteTradeResponse
	23, // [23:29] is the sub-list for method output_type
	17, // [17:23] is the sub-list for method input_type
	17, // [17:17] is the sub-list for extension type_name
	17, // [17:17] is the sub-list for extension extendee
	0,  // [0:17] is the sub-list for field type_name
}

func init() { file_tdex_v2_trade_proto_init() }
func file_tdex_v2_trade_proto_init() {
	if File_tdex_v2_trade_proto != nil {
		return
	}
	file_tdex_v2_swap_proto_init()
	file_tdex_v2_types_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_tdex_v2_trade_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListMarketsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tdex_v2_trade_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListMarketsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tdex_v2_trade_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMarketBalanceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tdex_v2_trade_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMarketBalanceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tdex_v2_trade_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMarketPriceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tdex_v2_trade_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMarketPriceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tdex_v2_trade_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PreviewTradeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tdex_v2_trade_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PreviewTradeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tdex_v2_trade_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProposeTradeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tdex_v2_trade_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProposeTradeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tdex_v2_trade_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CompleteTradeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tdex_v2_trade_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CompleteTradeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_tdex_v2_trade_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_tdex_v2_trade_proto_goTypes,
		DependencyIndexes: file_tdex_v2_trade_proto_depIdxs,
		MessageInfos:      file_tdex_v2_trade_proto_msgTypes,
	}.Build()
	File_tdex_v2_trade_proto = out.File
	file_tdex_v2_trade_proto_rawDesc = nil
	file_tdex_v2_trade_proto_goTypes = nil
	file_tdex_v2_trade_proto_depIdxs = nil
}
