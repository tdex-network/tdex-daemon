// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        (unknown)
// source: tdex-daemon/v2/operator.proto

package tdex_daemonv2

import (
	v2 "github.com/tdex-network/tdex-daemon/api-spec/protobuf/gen/tdex/v2"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type DeriveFeeAddressesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The number of addresses to generate.
	NumOfAddresses int64 `protobuf:"varint,1,opt,name=num_of_addresses,json=numOfAddresses,proto3" json:"num_of_addresses,omitempty"`
}

func (x *DeriveFeeAddressesRequest) Reset() {
	*x = DeriveFeeAddressesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tdex_daemon_v2_operator_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeriveFeeAddressesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeriveFeeAddressesRequest) ProtoMessage() {}

func (x *DeriveFeeAddressesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tdex_daemon_v2_operator_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeriveFeeAddressesRequest.ProtoReflect.Descriptor instead.
func (*DeriveFeeAddressesRequest) Descriptor() ([]byte, []int) {
	return file_tdex_daemon_v2_operator_proto_rawDescGZIP(), []int{0}
}

func (x *DeriveFeeAddressesRequest) GetNumOfAddresses() int64 {
	if x != nil {
		return x.NumOfAddresses
	}
	return 0
}

type DeriveFeeAddressesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The list of new confidential addresses.
	Addresses []string `protobuf:"bytes,1,rep,name=addresses,proto3" json:"addresses,omitempty"`
}

func (x *DeriveFeeAddressesResponse) Reset() {
	*x = DeriveFeeAddressesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tdex_daemon_v2_operator_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeriveFeeAddressesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeriveFeeAddressesResponse) ProtoMessage() {}

func (x *DeriveFeeAddressesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tdex_daemon_v2_operator_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeriveFeeAddressesResponse.ProtoReflect.Descriptor instead.
func (*DeriveFeeAddressesResponse) Descriptor() ([]byte, []int) {
	return file_tdex_daemon_v2_operator_proto_rawDescGZIP(), []int{1}
}

func (x *DeriveFeeAddressesResponse) GetAddresses() []string {
	if x != nil {
		return x.Addresses
	}
	return nil
}

type ListFeeAddressesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListFeeAddressesRequest) Reset() {
	*x = ListFeeAddressesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tdex_daemon_v2_operator_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListFeeAddressesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListFeeAddressesRequest) ProtoMessage() {}

func (x *ListFeeAddressesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tdex_daemon_v2_operator_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListFeeAddressesRequest.ProtoReflect.Descriptor instead.
func (*ListFeeAddressesRequest) Descriptor() ([]byte, []int) {
	return file_tdex_daemon_v2_operator_proto_rawDescGZIP(), []int{2}
}

type ListFeeAddressesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The list of derived confidential addresses.
	Addresses []string `protobuf:"bytes,1,rep,name=addresses,proto3" json:"addresses,omitempty"`
}

func (x *ListFeeAddressesResponse) Reset() {
	*x = ListFeeAddressesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tdex_daemon_v2_operator_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListFeeAddressesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListFeeAddressesResponse) ProtoMessage() {}

func (x *ListFeeAddressesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tdex_daemon_v2_operator_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListFeeAddressesResponse.ProtoReflect.Descriptor instead.
func (*ListFeeAddressesResponse) Descriptor() ([]byte, []int) {
	return file_tdex_daemon_v2_operator_proto_rawDescGZIP(), []int{3}
}

func (x *ListFeeAddressesResponse) GetAddresses() []string {
	if x != nil {
		return x.Addresses
	}
	return nil
}

type GetFeeBalanceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetFeeBalanceRequest) Reset() {
	*x = GetFeeBalanceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tdex_daemon_v2_operator_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFeeBalanceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFeeBalanceRequest) ProtoMessage() {}

func (x *GetFeeBalanceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tdex_daemon_v2_operator_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFeeBalanceRequest.ProtoReflect.Descriptor instead.
func (*GetFeeBalanceRequest) Descriptor() ([]byte, []int) {
	return file_tdex_daemon_v2_operator_proto_rawDescGZIP(), []int{4}
}

type GetFeeBalanceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Balance *Balance `protobuf:"bytes,1,opt,name=balance,proto3" json:"balance,omitempty"`
}

func (x *GetFeeBalanceResponse) Reset() {
	*x = GetFeeBalanceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tdex_daemon_v2_operator_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFeeBalanceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFeeBalanceResponse) ProtoMessage() {}

func (x *GetFeeBalanceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tdex_daemon_v2_operator_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFeeBalanceResponse.ProtoReflect.Descriptor instead.
func (*GetFeeBalanceResponse) Descriptor() ([]byte, []int) {
	return file_tdex_daemon_v2_operator_proto_rawDescGZIP(), []int{5}
}

func (x *GetFeeBalanceResponse) GetBalance() *Balance {
	if x != nil {
		return x.Balance
	}
	return nil
}

type WithdrawFeeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// List of receivers.
	Outputs []*TxOutput `protobuf:"bytes,1,rep,name=outputs,proto3" json:"outputs,omitempty"`
	// The number of millisatoshis per byte that should be paid for network fees.
	MillisatsPerByte uint64 `protobuf:"varint,2,opt,name=millisats_per_byte,json=millisatsPerByte,proto3" json:"millisats_per_byte,omitempty"`
	// The password that unlocks the internal wallet.
	Password string `protobuf:"bytes,3,opt,name=password,proto3" json:"password,omitempty"`
}

func (x *WithdrawFeeRequest) Reset() {
	*x = WithdrawFeeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tdex_daemon_v2_operator_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WithdrawFeeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WithdrawFeeRequest) ProtoMessage() {}

func (x *WithdrawFeeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tdex_daemon_v2_operator_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WithdrawFeeRequest.ProtoReflect.Descriptor instead.
func (*WithdrawFeeRequest) Descriptor() ([]byte, []int) {
	return file_tdex_daemon_v2_operator_proto_rawDescGZIP(), []int{6}
}

func (x *WithdrawFeeRequest) GetOutputs() []*TxOutput {
	if x != nil {
		return x.Outputs
	}
	return nil
}

func (x *WithdrawFeeRequest) GetMillisatsPerByte() uint64 {
	if x != nil {
		return x.MillisatsPerByte
	}
	return 0
}

func (x *WithdrawFeeRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

type WithdrawFeeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The transaction hash in mempool/blockchain.
	Txid string `protobuf:"bytes,1,opt,name=txid,proto3" json:"txid,omitempty"`
}

func (x *WithdrawFeeResponse) Reset() {
	*x = WithdrawFeeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tdex_daemon_v2_operator_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WithdrawFeeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WithdrawFeeResponse) ProtoMessage() {}

func (x *WithdrawFeeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tdex_daemon_v2_operator_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WithdrawFeeResponse.ProtoReflect.Descriptor instead.
func (*WithdrawFeeResponse) Descriptor() ([]byte, []int) {
	return file_tdex_daemon_v2_operator_proto_rawDescGZIP(), []int{7}
}

func (x *WithdrawFeeResponse) GetTxid() string {
	if x != nil {
		return x.Txid
	}
	return ""
}

type NewMarketRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The asset pair for which creating a new account in the daemon's wallet.
	Market *v2.Market `protobuf:"bytes,1,opt,name=market,proto3" json:"market,omitempty"`
	// The precision of the base asset.
	BaseAssetPrecision uint32 `protobuf:"varint,2,opt,name=base_asset_precision,json=baseAssetPrecision,proto3" json:"base_asset_precision,omitempty"`
	// The precision of the quote asset.
	QuoteAssetPrecision uint32 `protobuf:"varint,3,opt,name=quote_asset_precision,json=quoteAssetPrecision,proto3" json:"quote_asset_precision,omitempty"`
	// The percentage fee for the market.
	PercentageFee *v2.MarketFee `protobuf:"bytes,4,opt,name=percentage_fee,json=percentageFee,proto3" json:"percentage_fee,omitempty"`
	// Optional human-readable name for the market.
	Name string `protobuf:"bytes,5,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *NewMarketRequest) Reset() {
	*x = NewMarketRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tdex_daemon_v2_operator_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewMarketRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewMarketRequest) ProtoMessage() {}

func (x *NewMarketRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tdex_daemon_v2_operator_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewMarketRequest.ProtoReflect.Descriptor instead.
func (*NewMarketRequest) Descriptor() ([]byte, []int) {
	return file_tdex_daemon_v2_operator_proto_rawDescGZIP(), []int{8}
}

func (x *NewMarketRequest) GetMarket() *v2.Market {
	if x != nil {
		return x.Market
	}
	return nil
}

func (x *NewMarketRequest) GetBaseAssetPrecision() uint32 {
	if x != nil {
		return x.BaseAssetPrecision
	}
	return 0
}

func (x *NewMarketRequest) GetQuoteAssetPrecision() uint32 {
	if x != nil {
		return x.QuoteAssetPrecision
	}
	return 0
}

func (x *NewMarketRequest) GetPercentageFee() *v2.MarketFee {
	if x != nil {
		return x.PercentageFee
	}
	return nil
}

func (x *NewMarketRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type NewMarketResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *NewMarketResponse) Reset() {
	*x = NewMarketResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tdex_daemon_v2_operator_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewMarketResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewMarketResponse) ProtoMessage() {}

func (x *NewMarketResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tdex_daemon_v2_operator_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewMarketResponse.ProtoReflect.Descriptor instead.
func (*NewMarketResponse) Descriptor() ([]byte, []int) {
	return file_tdex_daemon_v2_operator_proto_rawDescGZIP(), []int{9}
}

type GetMarketInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Market *v2.Market `protobuf:"bytes,1,opt,name=market,proto3" json:"market,omitempty"`
}

func (x *GetMarketInfoRequest) Reset() {
	*x = GetMarketInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tdex_daemon_v2_operator_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMarketInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMarketInfoRequest) ProtoMessage() {}

func (x *GetMarketInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tdex_daemon_v2_operator_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMarketInfoRequest.ProtoReflect.Descriptor instead.
func (*GetMarketInfoRequest) Descriptor() ([]byte, []int) {
	return file_tdex_daemon_v2_operator_proto_rawDescGZIP(), []int{10}
}

func (x *GetMarketInfoRequest) GetMarket() *v2.Market {
	if x != nil {
		return x.Market
	}
	return nil
}

type GetMarketInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *MarketInfo `protobuf:"bytes,1,opt,name=info,proto3" json:"info,omitempty"`
}

func (x *GetMarketInfoResponse) Reset() {
	*x = GetMarketInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tdex_daemon_v2_operator_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMarketInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMarketInfoResponse) ProtoMessage() {}

func (x *GetMarketInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tdex_daemon_v2_operator_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMarketInfoResponse.ProtoReflect.Descriptor instead.
func (*GetMarketInfoResponse) Descriptor() ([]byte, []int) {
	return file_tdex_daemon_v2_operator_proto_rawDescGZIP(), []int{11}
}

func (x *GetMarketInfoResponse) GetInfo() *MarketInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

type DeriveMarketAddressesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The market for which deriving new addresses.
	Market *v2.Market `protobuf:"bytes,1,opt,name=market,proto3" json:"market,omitempty"`
	// The number of addresses to generate.
	NumOfAddresses int64 `protobuf:"varint,2,opt,name=num_of_addresses,json=numOfAddresses,proto3" json:"num_of_addresses,omitempty"`
}

func (x *DeriveMarketAddressesRequest) Reset() {
	*x = DeriveMarketAddressesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tdex_daemon_v2_operator_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeriveMarketAddressesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeriveMarketAddressesRequest) ProtoMessage() {}

func (x *DeriveMarketAddressesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tdex_daemon_v2_operator_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeriveMarketAddressesRequest.ProtoReflect.Descriptor instead.
func (*DeriveMarketAddressesRequest) Descriptor() ([]byte, []int) {
	return file_tdex_daemon_v2_operator_proto_rawDescGZIP(), []int{12}
}

func (x *DeriveMarketAddressesRequest) GetMarket() *v2.Market {
	if x != nil {
		return x.Market
	}
	return nil
}

func (x *DeriveMarketAddressesRequest) GetNumOfAddresses() int64 {
	if x != nil {
		return x.NumOfAddresses
	}
	return 0
}

type DeriveMarketAddressesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The list of new confidential addresses.
	Addresses []string `protobuf:"bytes,1,rep,name=addresses,proto3" json:"addresses,omitempty"`
}

func (x *DeriveMarketAddressesResponse) Reset() {
	*x = DeriveMarketAddressesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tdex_daemon_v2_operator_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeriveMarketAddressesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeriveMarketAddressesResponse) ProtoMessage() {}

func (x *DeriveMarketAddressesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tdex_daemon_v2_operator_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeriveMarketAddressesResponse.ProtoReflect.Descriptor instead.
func (*DeriveMarketAddressesResponse) Descriptor() ([]byte, []int) {
	return file_tdex_daemon_v2_operator_proto_rawDescGZIP(), []int{13}
}

func (x *DeriveMarketAddressesResponse) GetAddresses() []string {
	if x != nil {
		return x.Addresses
	}
	return nil
}

type ListMarketAddressesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The Market for which listing all derived addresses.
	Market *v2.Market `protobuf:"bytes,1,opt,name=market,proto3" json:"market,omitempty"`
}

func (x *ListMarketAddressesRequest) Reset() {
	*x = ListMarketAddressesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tdex_daemon_v2_operator_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListMarketAddressesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMarketAddressesRequest) ProtoMessage() {}

func (x *ListMarketAddressesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tdex_daemon_v2_operator_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMarketAddressesRequest.ProtoReflect.Descriptor instead.
func (*ListMarketAddressesRequest) Descriptor() ([]byte, []int) {
	return file_tdex_daemon_v2_operator_proto_rawDescGZIP(), []int{14}
}

func (x *ListMarketAddressesRequest) GetMarket() *v2.Market {
	if x != nil {
		return x.Market
	}
	return nil
}

type ListMarketAddressesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The list of derived confidential addresses.
	Addresses []string `protobuf:"bytes,1,rep,name=addresses,proto3" json:"addresses,omitempty"`
}

func (x *ListMarketAddressesResponse) Reset() {
	*x = ListMarketAddressesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tdex_daemon_v2_operator_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListMarketAddressesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMarketAddressesResponse) ProtoMessage() {}

func (x *ListMarketAddressesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tdex_daemon_v2_operator_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMarketAddressesResponse.ProtoReflect.Descriptor instead.
func (*ListMarketAddressesResponse) Descriptor() ([]byte, []int) {
	return file_tdex_daemon_v2_operator_proto_rawDescGZIP(), []int{15}
}

func (x *ListMarketAddressesResponse) GetAddresses() []string {
	if x != nil {
		return x.Addresses
	}
	return nil
}

type OpenMarketRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The market to be made tradable.
	Market *v2.Market `protobuf:"bytes,1,opt,name=market,proto3" json:"market,omitempty"`
}

func (x *OpenMarketRequest) Reset() {
	*x = OpenMarketRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tdex_daemon_v2_operator_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpenMarketRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpenMarketRequest) ProtoMessage() {}

func (x *OpenMarketRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tdex_daemon_v2_operator_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpenMarketRequest.ProtoReflect.Descriptor instead.
func (*OpenMarketRequest) Descriptor() ([]byte, []int) {
	return file_tdex_daemon_v2_operator_proto_rawDescGZIP(), []int{16}
}

func (x *OpenMarketRequest) GetMarket() *v2.Market {
	if x != nil {
		return x.Market
	}
	return nil
}

type OpenMarketResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *OpenMarketResponse) Reset() {
	*x = OpenMarketResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tdex_daemon_v2_operator_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpenMarketResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpenMarketResponse) ProtoMessage() {}

func (x *OpenMarketResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tdex_daemon_v2_operator_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpenMarketResponse.ProtoReflect.Descriptor instead.
func (*OpenMarketResponse) Descriptor() ([]byte, []int) {
	return file_tdex_daemon_v2_operator_proto_rawDescGZIP(), []int{17}
}

type CloseMarketRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The market to be made not tradable.
	Market *v2.Market `protobuf:"bytes,1,opt,name=market,proto3" json:"market,omitempty"`
}

func (x *CloseMarketRequest) Reset() {
	*x = CloseMarketRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tdex_daemon_v2_operator_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CloseMarketRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloseMarketRequest) ProtoMessage() {}

func (x *CloseMarketRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tdex_daemon_v2_operator_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloseMarketRequest.ProtoReflect.Descriptor instead.
func (*CloseMarketRequest) Descriptor() ([]byte, []int) {
	return file_tdex_daemon_v2_operator_proto_rawDescGZIP(), []int{18}
}

func (x *CloseMarketRequest) GetMarket() *v2.Market {
	if x != nil {
		return x.Market
	}
	return nil
}

type CloseMarketResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CloseMarketResponse) Reset() {
	*x = CloseMarketResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tdex_daemon_v2_operator_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CloseMarketResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloseMarketResponse) ProtoMessage() {}

func (x *CloseMarketResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tdex_daemon_v2_operator_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloseMarketResponse.ProtoReflect.Descriptor instead.
func (*CloseMarketResponse) Descriptor() ([]byte, []int) {
	return file_tdex_daemon_v2_operator_proto_rawDescGZIP(), []int{19}
}

type DropMarketRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Market *v2.Market `protobuf:"bytes,1,opt,name=market,proto3" json:"market,omitempty"`
}

func (x *DropMarketRequest) Reset() {
	*x = DropMarketRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tdex_daemon_v2_operator_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DropMarketRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DropMarketRequest) ProtoMessage() {}

func (x *DropMarketRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tdex_daemon_v2_operator_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DropMarketRequest.ProtoReflect.Descriptor instead.
func (*DropMarketRequest) Descriptor() ([]byte, []int) {
	return file_tdex_daemon_v2_operator_proto_rawDescGZIP(), []int{20}
}

func (x *DropMarketRequest) GetMarket() *v2.Market {
	if x != nil {
		return x.Market
	}
	return nil
}

type DropMarketResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DropMarketResponse) Reset() {
	*x = DropMarketResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tdex_daemon_v2_operator_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DropMarketResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DropMarketResponse) ProtoMessage() {}

func (x *DropMarketResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tdex_daemon_v2_operator_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DropMarketResponse.ProtoReflect.Descriptor instead.
func (*DropMarketResponse) Descriptor() ([]byte, []int) {
	return file_tdex_daemon_v2_operator_proto_rawDescGZIP(), []int{21}
}

type WithdrawMarketRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The market from which funds should be withdrawn.
	Market *v2.Market `protobuf:"bytes,1,opt,name=market,proto3" json:"market,omitempty"`
	// List of receivers.
	Outputs []*TxOutput `protobuf:"bytes,2,rep,name=outputs,proto3" json:"outputs,omitempty"`
	// The number of millisatoshis per byte that should be paid for network fees.
	MillisatsPerByte uint64 `protobuf:"varint,3,opt,name=millisats_per_byte,json=millisatsPerByte,proto3" json:"millisats_per_byte,omitempty"`
	// The password that unlocks the internal wallet.
	Password string `protobuf:"bytes,4,opt,name=password,proto3" json:"password,omitempty"`
}

func (x *WithdrawMarketRequest) Reset() {
	*x = WithdrawMarketRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tdex_daemon_v2_operator_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WithdrawMarketRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WithdrawMarketRequest) ProtoMessage() {}

func (x *WithdrawMarketRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tdex_daemon_v2_operator_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WithdrawMarketRequest.ProtoReflect.Descriptor instead.
func (*WithdrawMarketRequest) Descriptor() ([]byte, []int) {
	return file_tdex_daemon_v2_operator_proto_rawDescGZIP(), []int{22}
}

func (x *WithdrawMarketRequest) GetMarket() *v2.Market {
	if x != nil {
		return x.Market
	}
	return nil
}

func (x *WithdrawMarketRequest) GetOutputs() []*TxOutput {
	if x != nil {
		return x.Outputs
	}
	return nil
}

func (x *WithdrawMarketRequest) GetMillisatsPerByte() uint64 {
	if x != nil {
		return x.MillisatsPerByte
	}
	return 0
}

func (x *WithdrawMarketRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

type WithdrawMarketResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The transaction hash in mempool/blockchain.
	Txid string `protobuf:"bytes,1,opt,name=txid,proto3" json:"txid,omitempty"`
}

func (x *WithdrawMarketResponse) Reset() {
	*x = WithdrawMarketResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tdex_daemon_v2_operator_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WithdrawMarketResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WithdrawMarketResponse) ProtoMessage() {}

func (x *WithdrawMarketResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tdex_daemon_v2_operator_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WithdrawMarketResponse.ProtoReflect.Descriptor instead.
func (*WithdrawMarketResponse) Descriptor() ([]byte, []int) {
	return file_tdex_daemon_v2_operator_proto_rawDescGZIP(), []int{23}
}

func (x *WithdrawMarketResponse) GetTxid() string {
	if x != nil {
		return x.Txid
	}
	return ""
}

type GetMarketReportRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The market for which returning the report of collected fees.
	Market *v2.Market `protobuf:"bytes,1,opt,name=market,proto3" json:"market,omitempty"`
	// time_range fetch market report from time range
	TimeRange *TimeRange `protobuf:"bytes,2,opt,name=time_range,json=timeRange,proto3" json:"time_range,omitempty"`
	// used to group volume by time_frame for the specified time_range
	TimeFrame TimeFrame `protobuf:"varint,3,opt,name=time_frame,json=timeFrame,proto3,enum=tdex_daemon.v2.TimeFrame" json:"time_frame,omitempty"`
}

func (x *GetMarketReportRequest) Reset() {
	*x = GetMarketReportRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tdex_daemon_v2_operator_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMarketReportRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMarketReportRequest) ProtoMessage() {}

func (x *GetMarketReportRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tdex_daemon_v2_operator_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMarketReportRequest.ProtoReflect.Descriptor instead.
func (*GetMarketReportRequest) Descriptor() ([]byte, []int) {
	return file_tdex_daemon_v2_operator_proto_rawDescGZIP(), []int{24}
}

func (x *GetMarketReportRequest) GetMarket() *v2.Market {
	if x != nil {
		return x.Market
	}
	return nil
}

func (x *GetMarketReportRequest) GetTimeRange() *TimeRange {
	if x != nil {
		return x.TimeRange
	}
	return nil
}

func (x *GetMarketReportRequest) GetTimeFrame() TimeFrame {
	if x != nil {
		return x.TimeFrame
	}
	return TimeFrame_TIME_FRAME_UNSPECIFIED
}

type GetMarketReportResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// MarketReport holds info about volume and collected fees
	Report *MarketReport `protobuf:"bytes,1,opt,name=report,proto3" json:"report,omitempty"`
}

func (x *GetMarketReportResponse) Reset() {
	*x = GetMarketReportResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tdex_daemon_v2_operator_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMarketReportResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMarketReportResponse) ProtoMessage() {}

func (x *GetMarketReportResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tdex_daemon_v2_operator_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMarketReportResponse.ProtoReflect.Descriptor instead.
func (*GetMarketReportResponse) Descriptor() ([]byte, []int) {
	return file_tdex_daemon_v2_operator_proto_rawDescGZIP(), []int{25}
}

func (x *GetMarketReportResponse) GetReport() *MarketReport {
	if x != nil {
		return x.Report
	}
	return nil
}

type UpdateMarketPercentageFeeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The market for which updating the percentage fee.
	Market *v2.Market `protobuf:"bytes,1,opt,name=market,proto3" json:"market,omitempty"`
	// The new percentage fee for base and quote assets expressed in basis point.
	Fee *v2.MarketFee `protobuf:"bytes,2,opt,name=fee,proto3" json:"fee,omitempty"`
}

func (x *UpdateMarketPercentageFeeRequest) Reset() {
	*x = UpdateMarketPercentageFeeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tdex_daemon_v2_operator_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateMarketPercentageFeeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMarketPercentageFeeRequest) ProtoMessage() {}

func (x *UpdateMarketPercentageFeeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tdex_daemon_v2_operator_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMarketPercentageFeeRequest.ProtoReflect.Descriptor instead.
func (*UpdateMarketPercentageFeeRequest) Descriptor() ([]byte, []int) {
	return file_tdex_daemon_v2_operator_proto_rawDescGZIP(), []int{26}
}

func (x *UpdateMarketPercentageFeeRequest) GetMarket() *v2.Market {
	if x != nil {
		return x.Market
	}
	return nil
}

func (x *UpdateMarketPercentageFeeRequest) GetFee() *v2.MarketFee {
	if x != nil {
		return x.Fee
	}
	return nil
}

type UpdateMarketPercentageFeeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The market with updated fees.
	MarketWithFee *v2.MarketWithFee `protobuf:"bytes,1,opt,name=market_with_fee,json=marketWithFee,proto3" json:"market_with_fee,omitempty"`
}

func (x *UpdateMarketPercentageFeeResponse) Reset() {
	*x = UpdateMarketPercentageFeeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tdex_daemon_v2_operator_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateMarketPercentageFeeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMarketPercentageFeeResponse) ProtoMessage() {}

func (x *UpdateMarketPercentageFeeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tdex_daemon_v2_operator_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMarketPercentageFeeResponse.ProtoReflect.Descriptor instead.
func (*UpdateMarketPercentageFeeResponse) Descriptor() ([]byte, []int) {
	return file_tdex_daemon_v2_operator_proto_rawDescGZIP(), []int{27}
}

func (x *UpdateMarketPercentageFeeResponse) GetMarketWithFee() *v2.MarketWithFee {
	if x != nil {
		return x.MarketWithFee
	}
	return nil
}

type UpdateMarketFixedFeeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The market for which updating the fixed fee.
	Market *v2.Market `protobuf:"bytes,1,opt,name=market,proto3" json:"market,omitempty"`
	// The new fixed fee for base and quote asset expressed in satoshi.
	Fee *v2.MarketFee `protobuf:"bytes,2,opt,name=fee,proto3" json:"fee,omitempty"`
}

func (x *UpdateMarketFixedFeeRequest) Reset() {
	*x = UpdateMarketFixedFeeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tdex_daemon_v2_operator_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateMarketFixedFeeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMarketFixedFeeRequest) ProtoMessage() {}

func (x *UpdateMarketFixedFeeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tdex_daemon_v2_operator_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMarketFixedFeeRequest.ProtoReflect.Descriptor instead.
func (*UpdateMarketFixedFeeRequest) Descriptor() ([]byte, []int) {
	return file_tdex_daemon_v2_operator_proto_rawDescGZIP(), []int{28}
}

func (x *UpdateMarketFixedFeeRequest) GetMarket() *v2.Market {
	if x != nil {
		return x.Market
	}
	return nil
}

func (x *UpdateMarketFixedFeeRequest) GetFee() *v2.MarketFee {
	if x != nil {
		return x.Fee
	}
	return nil
}

type UpdateMarketFixedFeeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The market with updated fees.
	MarketWithFee *v2.MarketWithFee `protobuf:"bytes,1,opt,name=market_with_fee,json=marketWithFee,proto3" json:"market_with_fee,omitempty"`
}

func (x *UpdateMarketFixedFeeResponse) Reset() {
	*x = UpdateMarketFixedFeeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tdex_daemon_v2_operator_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateMarketFixedFeeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMarketFixedFeeResponse) ProtoMessage() {}

func (x *UpdateMarketFixedFeeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tdex_daemon_v2_operator_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMarketFixedFeeResponse.ProtoReflect.Descriptor instead.
func (*UpdateMarketFixedFeeResponse) Descriptor() ([]byte, []int) {
	return file_tdex_daemon_v2_operator_proto_rawDescGZIP(), []int{29}
}

func (x *UpdateMarketFixedFeeResponse) GetMarketWithFee() *v2.MarketWithFee {
	if x != nil {
		return x.MarketWithFee
	}
	return nil
}

type UpdateMarketAssetsPrecisionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The market for which updating the fixed fee.
	Market *v2.Market `protobuf:"bytes,1,opt,name=market,proto3" json:"market,omitempty"`
	// The new base asset precision. A negative value is used to skip updating this field.
	BaseAssetPrecision int32 `protobuf:"varint,2,opt,name=base_asset_precision,json=baseAssetPrecision,proto3" json:"base_asset_precision,omitempty"`
	// The new quote asset precision. A negative value is used to skip updating this field.
	QuoteAssetPrecision int32 `protobuf:"varint,3,opt,name=quote_asset_precision,json=quoteAssetPrecision,proto3" json:"quote_asset_precision,omitempty"`
}

func (x *UpdateMarketAssetsPrecisionRequest) Reset() {
	*x = UpdateMarketAssetsPrecisionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tdex_daemon_v2_operator_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateMarketAssetsPrecisionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMarketAssetsPrecisionRequest) ProtoMessage() {}

func (x *UpdateMarketAssetsPrecisionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tdex_daemon_v2_operator_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMarketAssetsPrecisionRequest.ProtoReflect.Descriptor instead.
func (*UpdateMarketAssetsPrecisionRequest) Descriptor() ([]byte, []int) {
	return file_tdex_daemon_v2_operator_proto_rawDescGZIP(), []int{30}
}

func (x *UpdateMarketAssetsPrecisionRequest) GetMarket() *v2.Market {
	if x != nil {
		return x.Market
	}
	return nil
}

func (x *UpdateMarketAssetsPrecisionRequest) GetBaseAssetPrecision() int32 {
	if x != nil {
		return x.BaseAssetPrecision
	}
	return 0
}

func (x *UpdateMarketAssetsPrecisionRequest) GetQuoteAssetPrecision() int32 {
	if x != nil {
		return x.QuoteAssetPrecision
	}
	return 0
}

type UpdateMarketAssetsPrecisionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateMarketAssetsPrecisionResponse) Reset() {
	*x = UpdateMarketAssetsPrecisionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tdex_daemon_v2_operator_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateMarketAssetsPrecisionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMarketAssetsPrecisionResponse) ProtoMessage() {}

func (x *UpdateMarketAssetsPrecisionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tdex_daemon_v2_operator_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMarketAssetsPrecisionResponse.ProtoReflect.Descriptor instead.
func (*UpdateMarketAssetsPrecisionResponse) Descriptor() ([]byte, []int) {
	return file_tdex_daemon_v2_operator_proto_rawDescGZIP(), []int{31}
}

type UpdateMarketPriceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The arket for which updating the price.
	Market *v2.Market `protobuf:"bytes,1,opt,name=market,proto3" json:"market,omitempty"`
	// The new price for base and quote asset.
	Price *v2.Price `protobuf:"bytes,2,opt,name=price,proto3" json:"price,omitempty"`
}

func (x *UpdateMarketPriceRequest) Reset() {
	*x = UpdateMarketPriceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tdex_daemon_v2_operator_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateMarketPriceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMarketPriceRequest) ProtoMessage() {}

func (x *UpdateMarketPriceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tdex_daemon_v2_operator_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMarketPriceRequest.ProtoReflect.Descriptor instead.
func (*UpdateMarketPriceRequest) Descriptor() ([]byte, []int) {
	return file_tdex_daemon_v2_operator_proto_rawDescGZIP(), []int{32}
}

func (x *UpdateMarketPriceRequest) GetMarket() *v2.Market {
	if x != nil {
		return x.Market
	}
	return nil
}

func (x *UpdateMarketPriceRequest) GetPrice() *v2.Price {
	if x != nil {
		return x.Price
	}
	return nil
}

type UpdateMarketPriceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateMarketPriceResponse) Reset() {
	*x = UpdateMarketPriceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tdex_daemon_v2_operator_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateMarketPriceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMarketPriceResponse) ProtoMessage() {}

func (x *UpdateMarketPriceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tdex_daemon_v2_operator_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMarketPriceResponse.ProtoReflect.Descriptor instead.
func (*UpdateMarketPriceResponse) Descriptor() ([]byte, []int) {
	return file_tdex_daemon_v2_operator_proto_rawDescGZIP(), []int{33}
}

type UpdateMarketStrategyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The market for which changing the strategy.
	Market *v2.Market `protobuf:"bytes,1,opt,name=market,proto3" json:"market,omitempty"`
	// The new making strategy to use.
	StrategyType StrategyType `protobuf:"varint,2,opt,name=strategy_type,json=strategyType,proto3,enum=tdex_daemon.v2.StrategyType" json:"strategy_type,omitempty"`
	// The JSON string representing additional metadata about the new strategy.
	Metadata string `protobuf:"bytes,3,opt,name=metadata,proto3" json:"metadata,omitempty"`
}

func (x *UpdateMarketStrategyRequest) Reset() {
	*x = UpdateMarketStrategyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tdex_daemon_v2_operator_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateMarketStrategyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMarketStrategyRequest) ProtoMessage() {}

func (x *UpdateMarketStrategyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tdex_daemon_v2_operator_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMarketStrategyRequest.ProtoReflect.Descriptor instead.
func (*UpdateMarketStrategyRequest) Descriptor() ([]byte, []int) {
	return file_tdex_daemon_v2_operator_proto_rawDescGZIP(), []int{34}
}

func (x *UpdateMarketStrategyRequest) GetMarket() *v2.Market {
	if x != nil {
		return x.Market
	}
	return nil
}

func (x *UpdateMarketStrategyRequest) GetStrategyType() StrategyType {
	if x != nil {
		return x.StrategyType
	}
	return StrategyType_STRATEGY_TYPE_UNSPECIFIED
}

func (x *UpdateMarketStrategyRequest) GetMetadata() string {
	if x != nil {
		return x.Metadata
	}
	return ""
}

type UpdateMarketStrategyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateMarketStrategyResponse) Reset() {
	*x = UpdateMarketStrategyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tdex_daemon_v2_operator_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateMarketStrategyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMarketStrategyResponse) ProtoMessage() {}

func (x *UpdateMarketStrategyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tdex_daemon_v2_operator_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMarketStrategyResponse.ProtoReflect.Descriptor instead.
func (*UpdateMarketStrategyResponse) Descriptor() ([]byte, []int) {
	return file_tdex_daemon_v2_operator_proto_rawDescGZIP(), []int{35}
}

type DeriveFeeFragmenterAddressesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NumOfAddresses int64 `protobuf:"varint,1,opt,name=num_of_addresses,json=numOfAddresses,proto3" json:"num_of_addresses,omitempty"`
}

func (x *DeriveFeeFragmenterAddressesRequest) Reset() {
	*x = DeriveFeeFragmenterAddressesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tdex_daemon_v2_operator_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeriveFeeFragmenterAddressesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeriveFeeFragmenterAddressesRequest) ProtoMessage() {}

func (x *DeriveFeeFragmenterAddressesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tdex_daemon_v2_operator_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeriveFeeFragmenterAddressesRequest.ProtoReflect.Descriptor instead.
func (*DeriveFeeFragmenterAddressesRequest) Descriptor() ([]byte, []int) {
	return file_tdex_daemon_v2_operator_proto_rawDescGZIP(), []int{36}
}

func (x *DeriveFeeFragmenterAddressesRequest) GetNumOfAddresses() int64 {
	if x != nil {
		return x.NumOfAddresses
	}
	return 0
}

type DeriveFeeFragmenterAddressesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Addresses []string `protobuf:"bytes,1,rep,name=addresses,proto3" json:"addresses,omitempty"`
}

func (x *DeriveFeeFragmenterAddressesResponse) Reset() {
	*x = DeriveFeeFragmenterAddressesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tdex_daemon_v2_operator_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeriveFeeFragmenterAddressesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeriveFeeFragmenterAddressesResponse) ProtoMessage() {}

func (x *DeriveFeeFragmenterAddressesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tdex_daemon_v2_operator_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeriveFeeFragmenterAddressesResponse.ProtoReflect.Descriptor instead.
func (*DeriveFeeFragmenterAddressesResponse) Descriptor() ([]byte, []int) {
	return file_tdex_daemon_v2_operator_proto_rawDescGZIP(), []int{37}
}

func (x *DeriveFeeFragmenterAddressesResponse) GetAddresses() []string {
	if x != nil {
		return x.Addresses
	}
	return nil
}

type ListFeeFragmenterAddressesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListFeeFragmenterAddressesRequest) Reset() {
	*x = ListFeeFragmenterAddressesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tdex_daemon_v2_operator_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListFeeFragmenterAddressesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListFeeFragmenterAddressesRequest) ProtoMessage() {}

func (x *ListFeeFragmenterAddressesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tdex_daemon_v2_operator_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListFeeFragmenterAddressesRequest.ProtoReflect.Descriptor instead.
func (*ListFeeFragmenterAddressesRequest) Descriptor() ([]byte, []int) {
	return file_tdex_daemon_v2_operator_proto_rawDescGZIP(), []int{38}
}

type ListFeeFragmenterAddressesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Addresses []string `protobuf:"bytes,1,rep,name=addresses,proto3" json:"addresses,omitempty"`
}

func (x *ListFeeFragmenterAddressesResponse) Reset() {
	*x = ListFeeFragmenterAddressesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tdex_daemon_v2_operator_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListFeeFragmenterAddressesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListFeeFragmenterAddressesResponse) ProtoMessage() {}

func (x *ListFeeFragmenterAddressesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tdex_daemon_v2_operator_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListFeeFragmenterAddressesResponse.ProtoReflect.Descriptor instead.
func (*ListFeeFragmenterAddressesResponse) Descriptor() ([]byte, []int) {
	return file_tdex_daemon_v2_operator_proto_rawDescGZIP(), []int{39}
}

func (x *ListFeeFragmenterAddressesResponse) GetAddresses() []string {
	if x != nil {
		return x.Addresses
	}
	return nil
}

type GetFeeFragmenterBalanceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetFeeFragmenterBalanceRequest) Reset() {
	*x = GetFeeFragmenterBalanceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tdex_daemon_v2_operator_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFeeFragmenterBalanceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFeeFragmenterBalanceRequest) ProtoMessage() {}

func (x *GetFeeFragmenterBalanceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tdex_daemon_v2_operator_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFeeFragmenterBalanceRequest.ProtoReflect.Descriptor instead.
func (*GetFeeFragmenterBalanceRequest) Descriptor() ([]byte, []int) {
	return file_tdex_daemon_v2_operator_proto_rawDescGZIP(), []int{40}
}

type GetFeeFragmenterBalanceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Account balance grouped by asset.
	Balance map[string]*Balance `protobuf:"bytes,1,rep,name=balance,proto3" json:"balance,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *GetFeeFragmenterBalanceResponse) Reset() {
	*x = GetFeeFragmenterBalanceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tdex_daemon_v2_operator_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFeeFragmenterBalanceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFeeFragmenterBalanceResponse) ProtoMessage() {}

func (x *GetFeeFragmenterBalanceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tdex_daemon_v2_operator_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFeeFragmenterBalanceResponse.ProtoReflect.Descriptor instead.
func (*GetFeeFragmenterBalanceResponse) Descriptor() ([]byte, []int) {
	return file_tdex_daemon_v2_operator_proto_rawDescGZIP(), []int{41}
}

func (x *GetFeeFragmenterBalanceResponse) GetBalance() map[string]*Balance {
	if x != nil {
		return x.Balance
	}
	return nil
}

type FeeFragmenterSplitFundsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The max number of fragments the fragmenter can generate when splitting
	// its funds.
	MaxFragments     uint32 `protobuf:"varint,1,opt,name=max_fragments,json=maxFragments,proto3" json:"max_fragments,omitempty"`
	MillisatsPerByte uint64 `protobuf:"varint,2,opt,name=millisats_per_byte,json=millisatsPerByte,proto3" json:"millisats_per_byte,omitempty"`
}

func (x *FeeFragmenterSplitFundsRequest) Reset() {
	*x = FeeFragmenterSplitFundsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tdex_daemon_v2_operator_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FeeFragmenterSplitFundsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FeeFragmenterSplitFundsRequest) ProtoMessage() {}

func (x *FeeFragmenterSplitFundsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tdex_daemon_v2_operator_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FeeFragmenterSplitFundsRequest.ProtoReflect.Descriptor instead.
func (*FeeFragmenterSplitFundsRequest) Descriptor() ([]byte, []int) {
	return file_tdex_daemon_v2_operator_proto_rawDescGZIP(), []int{42}
}

func (x *FeeFragmenterSplitFundsRequest) GetMaxFragments() uint32 {
	if x != nil {
		return x.MaxFragments
	}
	return 0
}

func (x *FeeFragmenterSplitFundsRequest) GetMillisatsPerByte() uint64 {
	if x != nil {
		return x.MillisatsPerByte
	}
	return 0
}

type FeeFragmenterSplitFundsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// A sequence of string messages returned during the process.
	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *FeeFragmenterSplitFundsResponse) Reset() {
	*x = FeeFragmenterSplitFundsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tdex_daemon_v2_operator_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FeeFragmenterSplitFundsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FeeFragmenterSplitFundsResponse) ProtoMessage() {}

func (x *FeeFragmenterSplitFundsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tdex_daemon_v2_operator_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FeeFragmenterSplitFundsResponse.ProtoReflect.Descriptor instead.
func (*FeeFragmenterSplitFundsResponse) Descriptor() ([]byte, []int) {
	return file_tdex_daemon_v2_operator_proto_rawDescGZIP(), []int{43}
}

func (x *FeeFragmenterSplitFundsResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type WithdrawFeeFragmenterRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// List of receivers.
	Outputs []*TxOutput `protobuf:"bytes,1,rep,name=outputs,proto3" json:"outputs,omitempty"`
	// The number of millisatoshis per byte that should be paid for network fees.
	MillisatsPerByte uint64 `protobuf:"varint,2,opt,name=millisats_per_byte,json=millisatsPerByte,proto3" json:"millisats_per_byte,omitempty"`
	// The password that unlocks the internal wallet.
	Password string `protobuf:"bytes,3,opt,name=password,proto3" json:"password,omitempty"`
}

func (x *WithdrawFeeFragmenterRequest) Reset() {
	*x = WithdrawFeeFragmenterRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tdex_daemon_v2_operator_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WithdrawFeeFragmenterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WithdrawFeeFragmenterRequest) ProtoMessage() {}

func (x *WithdrawFeeFragmenterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tdex_daemon_v2_operator_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WithdrawFeeFragmenterRequest.ProtoReflect.Descriptor instead.
func (*WithdrawFeeFragmenterRequest) Descriptor() ([]byte, []int) {
	return file_tdex_daemon_v2_operator_proto_rawDescGZIP(), []int{44}
}

func (x *WithdrawFeeFragmenterRequest) GetOutputs() []*TxOutput {
	if x != nil {
		return x.Outputs
	}
	return nil
}

func (x *WithdrawFeeFragmenterRequest) GetMillisatsPerByte() uint64 {
	if x != nil {
		return x.MillisatsPerByte
	}
	return 0
}

func (x *WithdrawFeeFragmenterRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

type WithdrawFeeFragmenterResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Txid string `protobuf:"bytes,1,opt,name=txid,proto3" json:"txid,omitempty"`
}

func (x *WithdrawFeeFragmenterResponse) Reset() {
	*x = WithdrawFeeFragmenterResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tdex_daemon_v2_operator_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WithdrawFeeFragmenterResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WithdrawFeeFragmenterResponse) ProtoMessage() {}

func (x *WithdrawFeeFragmenterResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tdex_daemon_v2_operator_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WithdrawFeeFragmenterResponse.ProtoReflect.Descriptor instead.
func (*WithdrawFeeFragmenterResponse) Descriptor() ([]byte, []int) {
	return file_tdex_daemon_v2_operator_proto_rawDescGZIP(), []int{45}
}

func (x *WithdrawFeeFragmenterResponse) GetTxid() string {
	if x != nil {
		return x.Txid
	}
	return ""
}

type DeriveMarketFragmenterAddressesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NumOfAddresses int64 `protobuf:"varint,1,opt,name=num_of_addresses,json=numOfAddresses,proto3" json:"num_of_addresses,omitempty"`
}

func (x *DeriveMarketFragmenterAddressesRequest) Reset() {
	*x = DeriveMarketFragmenterAddressesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tdex_daemon_v2_operator_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeriveMarketFragmenterAddressesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeriveMarketFragmenterAddressesRequest) ProtoMessage() {}

func (x *DeriveMarketFragmenterAddressesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tdex_daemon_v2_operator_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeriveMarketFragmenterAddressesRequest.ProtoReflect.Descriptor instead.
func (*DeriveMarketFragmenterAddressesRequest) Descriptor() ([]byte, []int) {
	return file_tdex_daemon_v2_operator_proto_rawDescGZIP(), []int{46}
}

func (x *DeriveMarketFragmenterAddressesRequest) GetNumOfAddresses() int64 {
	if x != nil {
		return x.NumOfAddresses
	}
	return 0
}

type DeriveMarketFragmenterAddressesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Addresses []string `protobuf:"bytes,1,rep,name=addresses,proto3" json:"addresses,omitempty"`
}

func (x *DeriveMarketFragmenterAddressesResponse) Reset() {
	*x = DeriveMarketFragmenterAddressesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tdex_daemon_v2_operator_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeriveMarketFragmenterAddressesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeriveMarketFragmenterAddressesResponse) ProtoMessage() {}

func (x *DeriveMarketFragmenterAddressesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tdex_daemon_v2_operator_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeriveMarketFragmenterAddressesResponse.ProtoReflect.Descriptor instead.
func (*DeriveMarketFragmenterAddressesResponse) Descriptor() ([]byte, []int) {
	return file_tdex_daemon_v2_operator_proto_rawDescGZIP(), []int{47}
}

func (x *DeriveMarketFragmenterAddressesResponse) GetAddresses() []string {
	if x != nil {
		return x.Addresses
	}
	return nil
}

type ListMarketFragmenterAddressesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListMarketFragmenterAddressesRequest) Reset() {
	*x = ListMarketFragmenterAddressesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tdex_daemon_v2_operator_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListMarketFragmenterAddressesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMarketFragmenterAddressesRequest) ProtoMessage() {}

func (x *ListMarketFragmenterAddressesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tdex_daemon_v2_operator_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMarketFragmenterAddressesRequest.ProtoReflect.Descriptor instead.
func (*ListMarketFragmenterAddressesRequest) Descriptor() ([]byte, []int) {
	return file_tdex_daemon_v2_operator_proto_rawDescGZIP(), []int{48}
}

type ListMarketFragmenterAddressesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Addresses []string `protobuf:"bytes,1,rep,name=addresses,proto3" json:"addresses,omitempty"`
}

func (x *ListMarketFragmenterAddressesResponse) Reset() {
	*x = ListMarketFragmenterAddressesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tdex_daemon_v2_operator_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListMarketFragmenterAddressesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMarketFragmenterAddressesResponse) ProtoMessage() {}

func (x *ListMarketFragmenterAddressesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tdex_daemon_v2_operator_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMarketFragmenterAddressesResponse.ProtoReflect.Descriptor instead.
func (*ListMarketFragmenterAddressesResponse) Descriptor() ([]byte, []int) {
	return file_tdex_daemon_v2_operator_proto_rawDescGZIP(), []int{49}
}

func (x *ListMarketFragmenterAddressesResponse) GetAddresses() []string {
	if x != nil {
		return x.Addresses
	}
	return nil
}

type GetMarketFragmenterBalanceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetMarketFragmenterBalanceRequest) Reset() {
	*x = GetMarketFragmenterBalanceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tdex_daemon_v2_operator_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMarketFragmenterBalanceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMarketFragmenterBalanceRequest) ProtoMessage() {}

func (x *GetMarketFragmenterBalanceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tdex_daemon_v2_operator_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMarketFragmenterBalanceRequest.ProtoReflect.Descriptor instead.
func (*GetMarketFragmenterBalanceRequest) Descriptor() ([]byte, []int) {
	return file_tdex_daemon_v2_operator_proto_rawDescGZIP(), []int{50}
}

type GetMarketFragmenterBalanceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Account balance grouped by asset
	Balance map[string]*Balance `protobuf:"bytes,1,rep,name=balance,proto3" json:"balance,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *GetMarketFragmenterBalanceResponse) Reset() {
	*x = GetMarketFragmenterBalanceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tdex_daemon_v2_operator_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMarketFragmenterBalanceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMarketFragmenterBalanceResponse) ProtoMessage() {}

func (x *GetMarketFragmenterBalanceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tdex_daemon_v2_operator_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMarketFragmenterBalanceResponse.ProtoReflect.Descriptor instead.
func (*GetMarketFragmenterBalanceResponse) Descriptor() ([]byte, []int) {
	return file_tdex_daemon_v2_operator_proto_rawDescGZIP(), []int{51}
}

func (x *GetMarketFragmenterBalanceResponse) GetBalance() map[string]*Balance {
	if x != nil {
		return x.Balance
	}
	return nil
}

type MarketFragmenterSplitFundsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The market to which to deposit the fragmented funds owned by the market
	// fragmenter.
	Market           *v2.Market `protobuf:"bytes,1,opt,name=market,proto3" json:"market,omitempty"`
	MillisatsPerByte uint64     `protobuf:"varint,2,opt,name=millisats_per_byte,json=millisatsPerByte,proto3" json:"millisats_per_byte,omitempty"`
}

func (x *MarketFragmenterSplitFundsRequest) Reset() {
	*x = MarketFragmenterSplitFundsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tdex_daemon_v2_operator_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MarketFragmenterSplitFundsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarketFragmenterSplitFundsRequest) ProtoMessage() {}

func (x *MarketFragmenterSplitFundsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tdex_daemon_v2_operator_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarketFragmenterSplitFundsRequest.ProtoReflect.Descriptor instead.
func (*MarketFragmenterSplitFundsRequest) Descriptor() ([]byte, []int) {
	return file_tdex_daemon_v2_operator_proto_rawDescGZIP(), []int{52}
}

func (x *MarketFragmenterSplitFundsRequest) GetMarket() *v2.Market {
	if x != nil {
		return x.Market
	}
	return nil
}

func (x *MarketFragmenterSplitFundsRequest) GetMillisatsPerByte() uint64 {
	if x != nil {
		return x.MillisatsPerByte
	}
	return 0
}

type MarketFragmenterSplitFundsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// A sequence of string messages returned during the process.
	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *MarketFragmenterSplitFundsResponse) Reset() {
	*x = MarketFragmenterSplitFundsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tdex_daemon_v2_operator_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MarketFragmenterSplitFundsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarketFragmenterSplitFundsResponse) ProtoMessage() {}

func (x *MarketFragmenterSplitFundsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tdex_daemon_v2_operator_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarketFragmenterSplitFundsResponse.ProtoReflect.Descriptor instead.
func (*MarketFragmenterSplitFundsResponse) Descriptor() ([]byte, []int) {
	return file_tdex_daemon_v2_operator_proto_rawDescGZIP(), []int{53}
}

func (x *MarketFragmenterSplitFundsResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type WithdrawMarketFragmenterRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// List of receivers.
	Outputs []*TxOutput `protobuf:"bytes,1,rep,name=outputs,proto3" json:"outputs,omitempty"`
	// The number of millisatoshis per byte that should be paid for network fees.
	MillisatsPerByte uint64 `protobuf:"varint,2,opt,name=millisats_per_byte,json=millisatsPerByte,proto3" json:"millisats_per_byte,omitempty"`
	// The password that unlocks the internal wallet.
	Password string `protobuf:"bytes,3,opt,name=password,proto3" json:"password,omitempty"`
}

func (x *WithdrawMarketFragmenterRequest) Reset() {
	*x = WithdrawMarketFragmenterRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tdex_daemon_v2_operator_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WithdrawMarketFragmenterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WithdrawMarketFragmenterRequest) ProtoMessage() {}

func (x *WithdrawMarketFragmenterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tdex_daemon_v2_operator_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WithdrawMarketFragmenterRequest.ProtoReflect.Descriptor instead.
func (*WithdrawMarketFragmenterRequest) Descriptor() ([]byte, []int) {
	return file_tdex_daemon_v2_operator_proto_rawDescGZIP(), []int{54}
}

func (x *WithdrawMarketFragmenterRequest) GetOutputs() []*TxOutput {
	if x != nil {
		return x.Outputs
	}
	return nil
}

func (x *WithdrawMarketFragmenterRequest) GetMillisatsPerByte() uint64 {
	if x != nil {
		return x.MillisatsPerByte
	}
	return 0
}

func (x *WithdrawMarketFragmenterRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

type WithdrawMarketFragmenterResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Txid string `protobuf:"bytes,1,opt,name=txid,proto3" json:"txid,omitempty"`
}

func (x *WithdrawMarketFragmenterResponse) Reset() {
	*x = WithdrawMarketFragmenterResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tdex_daemon_v2_operator_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WithdrawMarketFragmenterResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WithdrawMarketFragmenterResponse) ProtoMessage() {}

func (x *WithdrawMarketFragmenterResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tdex_daemon_v2_operator_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WithdrawMarketFragmenterResponse.ProtoReflect.Descriptor instead.
func (*WithdrawMarketFragmenterResponse) Descriptor() ([]byte, []int) {
	return file_tdex_daemon_v2_operator_proto_rawDescGZIP(), []int{55}
}

func (x *WithdrawMarketFragmenterResponse) GetTxid() string {
	if x != nil {
		return x.Txid
	}
	return ""
}

type ListMarketsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListMarketsRequest) Reset() {
	*x = ListMarketsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tdex_daemon_v2_operator_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListMarketsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMarketsRequest) ProtoMessage() {}

func (x *ListMarketsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tdex_daemon_v2_operator_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMarketsRequest.ProtoReflect.Descriptor instead.
func (*ListMarketsRequest) Descriptor() ([]byte, []int) {
	return file_tdex_daemon_v2_operator_proto_rawDescGZIP(), []int{56}
}

type ListMarketsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The list of info about all the created markets.
	Markets []*MarketInfo `protobuf:"bytes,1,rep,name=markets,proto3" json:"markets,omitempty"`
}

func (x *ListMarketsResponse) Reset() {
	*x = ListMarketsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tdex_daemon_v2_operator_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListMarketsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMarketsResponse) ProtoMessage() {}

func (x *ListMarketsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tdex_daemon_v2_operator_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMarketsResponse.ProtoReflect.Descriptor instead.
func (*ListMarketsResponse) Descriptor() ([]byte, []int) {
	return file_tdex_daemon_v2_operator_proto_rawDescGZIP(), []int{57}
}

func (x *ListMarketsResponse) GetMarkets() []*MarketInfo {
	if x != nil {
		return x.Markets
	}
	return nil
}

type ListTradesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Market for which listing trades.
	Market *v2.Market `protobuf:"bytes,1,opt,name=market,proto3" json:"market,omitempty"`
	// The page for a paginated reply.
	Page *Page `protobuf:"bytes,2,opt,name=page,proto3" json:"page,omitempty"`
}

func (x *ListTradesRequest) Reset() {
	*x = ListTradesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tdex_daemon_v2_operator_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListTradesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTradesRequest) ProtoMessage() {}

func (x *ListTradesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tdex_daemon_v2_operator_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTradesRequest.ProtoReflect.Descriptor instead.
func (*ListTradesRequest) Descriptor() ([]byte, []int) {
	return file_tdex_daemon_v2_operator_proto_rawDescGZIP(), []int{58}
}

func (x *ListTradesRequest) GetMarket() *v2.Market {
	if x != nil {
		return x.Market
	}
	return nil
}

func (x *ListTradesRequest) GetPage() *Page {
	if x != nil {
		return x.Page
	}
	return nil
}

type ListTradesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The list of info about all trades or all trades for a market depending on
	// the request.
	Trades []*TradeInfo `protobuf:"bytes,1,rep,name=trades,proto3" json:"trades,omitempty"`
}

func (x *ListTradesResponse) Reset() {
	*x = ListTradesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tdex_daemon_v2_operator_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListTradesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTradesResponse) ProtoMessage() {}

func (x *ListTradesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tdex_daemon_v2_operator_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTradesResponse.ProtoReflect.Descriptor instead.
func (*ListTradesResponse) Descriptor() ([]byte, []int) {
	return file_tdex_daemon_v2_operator_proto_rawDescGZIP(), []int{59}
}

func (x *ListTradesResponse) GetTrades() []*TradeInfo {
	if x != nil {
		return x.Trades
	}
	return nil
}

type ListUtxosRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Name of the account for which listing utxos.
	AccountName string `protobuf:"bytes,1,opt,name=account_name,json=accountName,proto3" json:"account_name,omitempty"`
	// The page for a paginated reply.
	Page *Page `protobuf:"bytes,2,opt,name=page,proto3" json:"page,omitempty"`
}

func (x *ListUtxosRequest) Reset() {
	*x = ListUtxosRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tdex_daemon_v2_operator_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListUtxosRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListUtxosRequest) ProtoMessage() {}

func (x *ListUtxosRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tdex_daemon_v2_operator_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListUtxosRequest.ProtoReflect.Descriptor instead.
func (*ListUtxosRequest) Descriptor() ([]byte, []int) {
	return file_tdex_daemon_v2_operator_proto_rawDescGZIP(), []int{60}
}

func (x *ListUtxosRequest) GetAccountName() string {
	if x != nil {
		return x.AccountName
	}
	return ""
}

func (x *ListUtxosRequest) GetPage() *Page {
	if x != nil {
		return x.Page
	}
	return nil
}

type ListUtxosResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The list of all spendable utxos.
	SpendableUtxos []*UtxoInfo `protobuf:"bytes,1,rep,name=spendable_utxos,json=spendableUtxos,proto3" json:"spendable_utxos,omitempty"`
	// The list of all locked utxos.
	LockedUtxos []*UtxoInfo `protobuf:"bytes,2,rep,name=locked_utxos,json=lockedUtxos,proto3" json:"locked_utxos,omitempty"`
}

func (x *ListUtxosResponse) Reset() {
	*x = ListUtxosResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tdex_daemon_v2_operator_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListUtxosResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListUtxosResponse) ProtoMessage() {}

func (x *ListUtxosResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tdex_daemon_v2_operator_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListUtxosResponse.ProtoReflect.Descriptor instead.
func (*ListUtxosResponse) Descriptor() ([]byte, []int) {
	return file_tdex_daemon_v2_operator_proto_rawDescGZIP(), []int{61}
}

func (x *ListUtxosResponse) GetSpendableUtxos() []*UtxoInfo {
	if x != nil {
		return x.SpendableUtxos
	}
	return nil
}

func (x *ListUtxosResponse) GetLockedUtxos() []*UtxoInfo {
	if x != nil {
		return x.LockedUtxos
	}
	return nil
}

type AddWebhookRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The endpoint of the external service to reach.
	Endpoint string `protobuf:"bytes,1,opt,name=endpoint,proto3" json:"endpoint,omitempty"`
	// The type of action for which the webhook should be registered.
	Action ActionType `protobuf:"varint,2,opt,name=action,proto3,enum=tdex_daemon.v2.ActionType" json:"action,omitempty"`
	// The secret to use for signign a JWT token for an authenticated request
	// to the external service.
	Secret string `protobuf:"bytes,3,opt,name=secret,proto3" json:"secret,omitempty"`
}

func (x *AddWebhookRequest) Reset() {
	*x = AddWebhookRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tdex_daemon_v2_operator_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddWebhookRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddWebhookRequest) ProtoMessage() {}

func (x *AddWebhookRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tdex_daemon_v2_operator_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddWebhookRequest.ProtoReflect.Descriptor instead.
func (*AddWebhookRequest) Descriptor() ([]byte, []int) {
	return file_tdex_daemon_v2_operator_proto_rawDescGZIP(), []int{62}
}

func (x *AddWebhookRequest) GetEndpoint() string {
	if x != nil {
		return x.Endpoint
	}
	return ""
}

func (x *AddWebhookRequest) GetAction() ActionType {
	if x != nil {
		return x.Action
	}
	return ActionType_ACTION_TYPE_UNSPECIFIED
}

func (x *AddWebhookRequest) GetSecret() string {
	if x != nil {
		return x.Secret
	}
	return ""
}

type AddWebhookResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The id of the new webhook.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *AddWebhookResponse) Reset() {
	*x = AddWebhookResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tdex_daemon_v2_operator_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddWebhookResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddWebhookResponse) ProtoMessage() {}

func (x *AddWebhookResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tdex_daemon_v2_operator_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddWebhookResponse.ProtoReflect.Descriptor instead.
func (*AddWebhookResponse) Descriptor() ([]byte, []int) {
	return file_tdex_daemon_v2_operator_proto_rawDescGZIP(), []int{63}
}

func (x *AddWebhookResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type RemoveWebhookRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The id of the webhook to remove.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *RemoveWebhookRequest) Reset() {
	*x = RemoveWebhookRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tdex_daemon_v2_operator_proto_msgTypes[64]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveWebhookRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveWebhookRequest) ProtoMessage() {}

func (x *RemoveWebhookRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tdex_daemon_v2_operator_proto_msgTypes[64]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveWebhookRequest.ProtoReflect.Descriptor instead.
func (*RemoveWebhookRequest) Descriptor() ([]byte, []int) {
	return file_tdex_daemon_v2_operator_proto_rawDescGZIP(), []int{64}
}

func (x *RemoveWebhookRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type RemoveWebhookResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RemoveWebhookResponse) Reset() {
	*x = RemoveWebhookResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tdex_daemon_v2_operator_proto_msgTypes[65]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveWebhookResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveWebhookResponse) ProtoMessage() {}

func (x *RemoveWebhookResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tdex_daemon_v2_operator_proto_msgTypes[65]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveWebhookResponse.ProtoReflect.Descriptor instead.
func (*RemoveWebhookResponse) Descriptor() ([]byte, []int) {
	return file_tdex_daemon_v2_operator_proto_rawDescGZIP(), []int{65}
}

type ListWebhooksRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The action for which filtering the list of webhooks.
	Action ActionType `protobuf:"varint,1,opt,name=action,proto3,enum=tdex_daemon.v2.ActionType" json:"action,omitempty"`
}

func (x *ListWebhooksRequest) Reset() {
	*x = ListWebhooksRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tdex_daemon_v2_operator_proto_msgTypes[66]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListWebhooksRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListWebhooksRequest) ProtoMessage() {}

func (x *ListWebhooksRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tdex_daemon_v2_operator_proto_msgTypes[66]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListWebhooksRequest.ProtoReflect.Descriptor instead.
func (*ListWebhooksRequest) Descriptor() ([]byte, []int) {
	return file_tdex_daemon_v2_operator_proto_rawDescGZIP(), []int{66}
}

func (x *ListWebhooksRequest) GetAction() ActionType {
	if x != nil {
		return x.Action
	}
	return ActionType_ACTION_TYPE_UNSPECIFIED
}

type ListWebhooksResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The list of info about the webhooks regitered for an action.
	WebhookInfo []*WebhookInfo `protobuf:"bytes,1,rep,name=webhook_info,json=webhookInfo,proto3" json:"webhook_info,omitempty"`
}

func (x *ListWebhooksResponse) Reset() {
	*x = ListWebhooksResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tdex_daemon_v2_operator_proto_msgTypes[67]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListWebhooksResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListWebhooksResponse) ProtoMessage() {}

func (x *ListWebhooksResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tdex_daemon_v2_operator_proto_msgTypes[67]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListWebhooksResponse.ProtoReflect.Descriptor instead.
func (*ListWebhooksResponse) Descriptor() ([]byte, []int) {
	return file_tdex_daemon_v2_operator_proto_rawDescGZIP(), []int{67}
}

func (x *ListWebhooksResponse) GetWebhookInfo() []*WebhookInfo {
	if x != nil {
		return x.WebhookInfo
	}
	return nil
}

type ListDepositsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The name of the wallet account for which listing the deposits.
	AccountName string `protobuf:"bytes,1,opt,name=account_name,json=accountName,proto3" json:"account_name,omitempty"`
	// The page for a paginated reply.
	Page *Page `protobuf:"bytes,2,opt,name=page,proto3" json:"page,omitempty"`
}

func (x *ListDepositsRequest) Reset() {
	*x = ListDepositsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tdex_daemon_v2_operator_proto_msgTypes[68]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListDepositsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDepositsRequest) ProtoMessage() {}

func (x *ListDepositsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tdex_daemon_v2_operator_proto_msgTypes[68]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDepositsRequest.ProtoReflect.Descriptor instead.
func (*ListDepositsRequest) Descriptor() ([]byte, []int) {
	return file_tdex_daemon_v2_operator_proto_rawDescGZIP(), []int{68}
}

func (x *ListDepositsRequest) GetAccountName() string {
	if x != nil {
		return x.AccountName
	}
	return ""
}

func (x *ListDepositsRequest) GetPage() *Page {
	if x != nil {
		return x.Page
	}
	return nil
}

type ListDepositsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The name of the wallet account.
	AccountName string `protobuf:"bytes,1,opt,name=account_name,json=accountName,proto3" json:"account_name,omitempty"`
	// The list of info about the deposits.
	Deposits []*Transaction `protobuf:"bytes,2,rep,name=deposits,proto3" json:"deposits,omitempty"`
}

func (x *ListDepositsResponse) Reset() {
	*x = ListDepositsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tdex_daemon_v2_operator_proto_msgTypes[69]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListDepositsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDepositsResponse) ProtoMessage() {}

func (x *ListDepositsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tdex_daemon_v2_operator_proto_msgTypes[69]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDepositsResponse.ProtoReflect.Descriptor instead.
func (*ListDepositsResponse) Descriptor() ([]byte, []int) {
	return file_tdex_daemon_v2_operator_proto_rawDescGZIP(), []int{69}
}

func (x *ListDepositsResponse) GetAccountName() string {
	if x != nil {
		return x.AccountName
	}
	return ""
}

func (x *ListDepositsResponse) GetDeposits() []*Transaction {
	if x != nil {
		return x.Deposits
	}
	return nil
}

type ListWithdrawalsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The name of the wallet account for which listing the withdrawals.
	AccountName string `protobuf:"bytes,1,opt,name=account_name,json=accountName,proto3" json:"account_name,omitempty"`
	// The page for a paginated reply.
	Page *Page `protobuf:"bytes,2,opt,name=page,proto3" json:"page,omitempty"`
}

func (x *ListWithdrawalsRequest) Reset() {
	*x = ListWithdrawalsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tdex_daemon_v2_operator_proto_msgTypes[70]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListWithdrawalsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListWithdrawalsRequest) ProtoMessage() {}

func (x *ListWithdrawalsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tdex_daemon_v2_operator_proto_msgTypes[70]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListWithdrawalsRequest.ProtoReflect.Descriptor instead.
func (*ListWithdrawalsRequest) Descriptor() ([]byte, []int) {
	return file_tdex_daemon_v2_operator_proto_rawDescGZIP(), []int{70}
}

func (x *ListWithdrawalsRequest) GetAccountName() string {
	if x != nil {
		return x.AccountName
	}
	return ""
}

func (x *ListWithdrawalsRequest) GetPage() *Page {
	if x != nil {
		return x.Page
	}
	return nil
}

type ListWithdrawalsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The name of the wallet account.
	AccountName string `protobuf:"bytes,1,opt,name=account_name,json=accountName,proto3" json:"account_name,omitempty"`
	// The list of info about the withdrawals.
	Withdrawals []*Transaction `protobuf:"bytes,2,rep,name=withdrawals,proto3" json:"withdrawals,omitempty"`
}

func (x *ListWithdrawalsResponse) Reset() {
	*x = ListWithdrawalsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tdex_daemon_v2_operator_proto_msgTypes[71]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListWithdrawalsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListWithdrawalsResponse) ProtoMessage() {}

func (x *ListWithdrawalsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tdex_daemon_v2_operator_proto_msgTypes[71]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListWithdrawalsResponse.ProtoReflect.Descriptor instead.
func (*ListWithdrawalsResponse) Descriptor() ([]byte, []int) {
	return file_tdex_daemon_v2_operator_proto_rawDescGZIP(), []int{71}
}

func (x *ListWithdrawalsResponse) GetAccountName() string {
	if x != nil {
		return x.AccountName
	}
	return ""
}

func (x *ListWithdrawalsResponse) GetWithdrawals() []*Transaction {
	if x != nil {
		return x.Withdrawals
	}
	return nil
}

var File_tdex_daemon_v2_operator_proto protoreflect.FileDescriptor

var file_tdex_daemon_v2_operator_proto_rawDesc = []byte{
	0x0a, 0x1d, 0x74, 0x64, 0x65, 0x78, 0x2d, 0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x2f, 0x76, 0x32,
	0x2f, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x0e, 0x74, 0x64, 0x65, 0x78, 0x5f, 0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x32, 0x1a,
	0x1a, 0x74, 0x64, 0x65, 0x78, 0x2d, 0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x2f, 0x76, 0x32, 0x2f,
	0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x13, 0x74, 0x64, 0x65,
	0x78, 0x2f, 0x76, 0x32, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0x49, 0x0a, 0x19, 0x44, 0x65, 0x72, 0x69, 0x76, 0x65, 0x46, 0x65, 0x65, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2c, 0x0a,
	0x10, 0x6e, 0x75, 0x6d, 0x5f, 0x6f, 0x66, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x42, 0x02, 0x30, 0x02, 0x52, 0x0e, 0x6e, 0x75, 0x6d,
	0x4f, 0x66, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x22, 0x3a, 0x0a, 0x1a, 0x44,
	0x65, 0x72, 0x69, 0x76, 0x65, 0x46, 0x65, 0x65, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x22, 0x19, 0x0a, 0x17, 0x4c, 0x69, 0x73, 0x74, 0x46,
	0x65, 0x65, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x22, 0x38, 0x0a, 0x18, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x65, 0x65, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1c,
	0x0a, 0x09, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x09, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x22, 0x16, 0x0a, 0x14,
	0x47, 0x65, 0x74, 0x46, 0x65, 0x65, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x22, 0x4a, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x46, 0x65, 0x65, 0x42, 0x61,
	0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x31, 0x0a,
	0x07, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17,
	0x2e, 0x74, 0x64, 0x65, 0x78, 0x5f, 0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x32, 0x2e,
	0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x07, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65,
	0x22, 0x92, 0x01, 0x0a, 0x12, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x46, 0x65, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x32, 0x0a, 0x07, 0x6f, 0x75, 0x74, 0x70, 0x75,
	0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x74, 0x64, 0x65, 0x78, 0x5f,
	0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x32, 0x2e, 0x54, 0x78, 0x4f, 0x75, 0x74, 0x70,
	0x75, 0x74, 0x52, 0x07, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x73, 0x12, 0x2c, 0x0a, 0x12, 0x6d,
	0x69, 0x6c, 0x6c, 0x69, 0x73, 0x61, 0x74, 0x73, 0x5f, 0x70, 0x65, 0x72, 0x5f, 0x62, 0x79, 0x74,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x10, 0x6d, 0x69, 0x6c, 0x6c, 0x69, 0x73, 0x61,
	0x74, 0x73, 0x50, 0x65, 0x72, 0x42, 0x79, 0x74, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73,
	0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73,
	0x73, 0x77, 0x6f, 0x72, 0x64, 0x22, 0x29, 0x0a, 0x13, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61,
	0x77, 0x46, 0x65, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x74, 0x78, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x78, 0x69, 0x64,
	0x22, 0xf0, 0x01, 0x0a, 0x10, 0x4e, 0x65, 0x77, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x27, 0x0a, 0x06, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x74, 0x64, 0x65, 0x78, 0x2e, 0x76, 0x32, 0x2e,
	0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x52, 0x06, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x12, 0x30,
	0x0a, 0x14, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x61, 0x73, 0x73, 0x65, 0x74, 0x5f, 0x70, 0x72, 0x65,
	0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x12, 0x62, 0x61,
	0x73, 0x65, 0x41, 0x73, 0x73, 0x65, 0x74, 0x50, 0x72, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e,
	0x12, 0x32, 0x0a, 0x15, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x5f, 0x61, 0x73, 0x73, 0x65, 0x74, 0x5f,
	0x70, 0x72, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x13, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x41, 0x73, 0x73, 0x65, 0x74, 0x50, 0x72, 0x65, 0x63, 0x69,
	0x73, 0x69, 0x6f, 0x6e, 0x12, 0x39, 0x0a, 0x0e, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61,
	0x67, 0x65, 0x5f, 0x66, 0x65, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x74,
	0x64, 0x65, 0x78, 0x2e, 0x76, 0x32, 0x2e, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x46, 0x65, 0x65,
	0x52, 0x0d, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x46, 0x65, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x22, 0x13, 0x0a, 0x11, 0x4e, 0x65, 0x77, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x3f, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x4d,
	0x61, 0x72, 0x6b, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x27, 0x0a, 0x06, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0f, 0x2e, 0x74, 0x64, 0x65, 0x78, 0x2e, 0x76, 0x32, 0x2e, 0x4d, 0x61, 0x72, 0x6b, 0x65,
	0x74, 0x52, 0x06, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x22, 0x47, 0x0a, 0x15, 0x47, 0x65, 0x74,
	0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x2e, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x74, 0x64, 0x65, 0x78, 0x5f, 0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x2e, 0x76,
	0x32, 0x2e, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x69, 0x6e,
	0x66, 0x6f, 0x22, 0x75, 0x0a, 0x1c, 0x44, 0x65, 0x72, 0x69, 0x76, 0x65, 0x4d, 0x61, 0x72, 0x6b,
	0x65, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x27, 0x0a, 0x06, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x74, 0x64, 0x65, 0x78, 0x2e, 0x76, 0x32, 0x2e, 0x4d, 0x61, 0x72,
	0x6b, 0x65, 0x74, 0x52, 0x06, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x12, 0x2c, 0x0a, 0x10, 0x6e,
	0x75, 0x6d, 0x5f, 0x6f, 0x66, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x42, 0x02, 0x30, 0x02, 0x52, 0x0e, 0x6e, 0x75, 0x6d, 0x4f, 0x66,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x22, 0x3d, 0x0a, 0x1d, 0x44, 0x65, 0x72,
	0x69, 0x76, 0x65, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x22, 0x45, 0x0a, 0x1a, 0x4c, 0x69, 0x73, 0x74,
	0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x27, 0x0a, 0x06, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x74, 0x64, 0x65, 0x78, 0x2e, 0x76, 0x32,
	0x2e, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x52, 0x06, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x22,
	0x3b, 0x0a, 0x1b, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1c,
	0x0a, 0x09, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x09, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x22, 0x3c, 0x0a, 0x11,
	0x4f, 0x70, 0x65, 0x6e, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x27, 0x0a, 0x06, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0f, 0x2e, 0x74, 0x64, 0x65, 0x78, 0x2e, 0x76, 0x32, 0x2e, 0x4d, 0x61, 0x72, 0x6b,
	0x65, 0x74, 0x52, 0x06, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x22, 0x14, 0x0a, 0x12, 0x4f, 0x70,
	0x65, 0x6e, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x3d, 0x0a, 0x12, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x27, 0x0a, 0x06, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x74, 0x64, 0x65, 0x78, 0x2e, 0x76, 0x32,
	0x2e, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x52, 0x06, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x22,
	0x15, 0x0a, 0x13, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x3c, 0x0a, 0x11, 0x44, 0x72, 0x6f, 0x70, 0x4d, 0x61,
	0x72, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x27, 0x0a, 0x06, 0x6d,
	0x61, 0x72, 0x6b, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x74, 0x64,
	0x65, 0x78, 0x2e, 0x76, 0x32, 0x2e, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x52, 0x06, 0x6d, 0x61,
	0x72, 0x6b, 0x65, 0x74, 0x22, 0x14, 0x0a, 0x12, 0x44, 0x72, 0x6f, 0x70, 0x4d, 0x61, 0x72, 0x6b,
	0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xbe, 0x01, 0x0a, 0x15, 0x57,
	0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x27, 0x0a, 0x06, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x74, 0x64, 0x65, 0x78, 0x2e, 0x76, 0x32, 0x2e, 0x4d,
	0x61, 0x72, 0x6b, 0x65, 0x74, 0x52, 0x06, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x12, 0x32, 0x0a,
	0x07, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18,
	0x2e, 0x74, 0x64, 0x65, 0x78, 0x5f, 0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x32, 0x2e,
	0x54, 0x78, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x52, 0x07, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74,
	0x73, 0x12, 0x2c, 0x0a, 0x12, 0x6d, 0x69, 0x6c, 0x6c, 0x69, 0x73, 0x61, 0x74, 0x73, 0x5f, 0x70,
	0x65, 0x72, 0x5f, 0x62, 0x79, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x10, 0x6d,
	0x69, 0x6c, 0x6c, 0x69, 0x73, 0x61, 0x74, 0x73, 0x50, 0x65, 0x72, 0x42, 0x79, 0x74, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x22, 0x2c, 0x0a, 0x16, 0x57,
	0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x78, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x78, 0x69, 0x64, 0x22, 0xb5, 0x01, 0x0a, 0x16, 0x47, 0x65,
	0x74, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x27, 0x0a, 0x06, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x74, 0x64, 0x65, 0x78, 0x2e, 0x76, 0x32, 0x2e, 0x4d,
	0x61, 0x72, 0x6b, 0x65, 0x74, 0x52, 0x06, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x12, 0x38, 0x0a,
	0x0a, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x19, 0x2e, 0x74, 0x64, 0x65, 0x78, 0x5f, 0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x2e,
	0x76, 0x32, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x09, 0x74, 0x69,
	0x6d, 0x65, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x38, 0x0a, 0x0a, 0x74, 0x69, 0x6d, 0x65, 0x5f,
	0x66, 0x72, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x74, 0x64,
	0x65, 0x78, 0x5f, 0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x32, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x46, 0x72, 0x61, 0x6d,
	0x65, 0x22, 0x4f, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x52, 0x65,
	0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x34, 0x0a, 0x06,
	0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x74,
	0x64, 0x65, 0x78, 0x5f, 0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x32, 0x2e, 0x4d, 0x61,
	0x72, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x06, 0x72, 0x65, 0x70, 0x6f,
	0x72, 0x74, 0x22, 0x71, 0x0a, 0x20, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x72, 0x6b,
	0x65, 0x74, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x46, 0x65, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x27, 0x0a, 0x06, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x74, 0x64, 0x65, 0x78, 0x2e, 0x76, 0x32,
	0x2e, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x52, 0x06, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x12,
	0x24, 0x0a, 0x03, 0x66, 0x65, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x74,
	0x64, 0x65, 0x78, 0x2e, 0x76, 0x32, 0x2e, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x46, 0x65, 0x65,
	0x52, 0x03, 0x66, 0x65, 0x65, 0x22, 0x63, 0x0a, 0x21, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d,
	0x61, 0x72, 0x6b, 0x65, 0x74, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x46,
	0x65, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3e, 0x0a, 0x0f, 0x6d, 0x61,
	0x72, 0x6b, 0x65, 0x74, 0x5f, 0x77, 0x69, 0x74, 0x68, 0x5f, 0x66, 0x65, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x74, 0x64, 0x65, 0x78, 0x2e, 0x76, 0x32, 0x2e, 0x4d, 0x61,
	0x72, 0x6b, 0x65, 0x74, 0x57, 0x69, 0x74, 0x68, 0x46, 0x65, 0x65, 0x52, 0x0d, 0x6d, 0x61, 0x72,
	0x6b, 0x65, 0x74, 0x57, 0x69, 0x74, 0x68, 0x46, 0x65, 0x65, 0x22, 0x6c, 0x0a, 0x1b, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x46, 0x69, 0x78, 0x65, 0x64, 0x46,
	0x65, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x27, 0x0a, 0x06, 0x6d, 0x61, 0x72,
	0x6b, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x74, 0x64, 0x65, 0x78,
	0x2e, 0x76, 0x32, 0x2e, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x52, 0x06, 0x6d, 0x61, 0x72, 0x6b,
	0x65, 0x74, 0x12, 0x24, 0x0a, 0x03, 0x66, 0x65, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x12, 0x2e, 0x74, 0x64, 0x65, 0x78, 0x2e, 0x76, 0x32, 0x2e, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74,
	0x46, 0x65, 0x65, 0x52, 0x03, 0x66, 0x65, 0x65, 0x22, 0x5e, 0x0a, 0x1c, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x46, 0x69, 0x78, 0x65, 0x64, 0x46, 0x65, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3e, 0x0a, 0x0f, 0x6d, 0x61, 0x72, 0x6b,
	0x65, 0x74, 0x5f, 0x77, 0x69, 0x74, 0x68, 0x5f, 0x66, 0x65, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x16, 0x2e, 0x74, 0x64, 0x65, 0x78, 0x2e, 0x76, 0x32, 0x2e, 0x4d, 0x61, 0x72, 0x6b,
	0x65, 0x74, 0x57, 0x69, 0x74, 0x68, 0x46, 0x65, 0x65, 0x52, 0x0d, 0x6d, 0x61, 0x72, 0x6b, 0x65,
	0x74, 0x57, 0x69, 0x74, 0x68, 0x46, 0x65, 0x65, 0x22, 0xb3, 0x01, 0x0a, 0x22, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x41, 0x73, 0x73, 0x65, 0x74, 0x73, 0x50,
	0x72, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x27, 0x0a, 0x06, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0f, 0x2e, 0x74, 0x64, 0x65, 0x78, 0x2e, 0x76, 0x32, 0x2e, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74,
	0x52, 0x06, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x12, 0x30, 0x0a, 0x14, 0x62, 0x61, 0x73, 0x65,
	0x5f, 0x61, 0x73, 0x73, 0x65, 0x74, 0x5f, 0x70, 0x72, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x12, 0x62, 0x61, 0x73, 0x65, 0x41, 0x73, 0x73, 0x65,
	0x74, 0x50, 0x72, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x32, 0x0a, 0x15, 0x71, 0x75,
	0x6f, 0x74, 0x65, 0x5f, 0x61, 0x73, 0x73, 0x65, 0x74, 0x5f, 0x70, 0x72, 0x65, 0x63, 0x69, 0x73,
	0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x13, 0x71, 0x75, 0x6f, 0x74, 0x65,
	0x41, 0x73, 0x73, 0x65, 0x74, 0x50, 0x72, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x25,
	0x0a, 0x23, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x41, 0x73,
	0x73, 0x65, 0x74, 0x73, 0x50, 0x72, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x69, 0x0a, 0x18, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d,
	0x61, 0x72, 0x6b, 0x65, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x27, 0x0a, 0x06, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0f, 0x2e, 0x74, 0x64, 0x65, 0x78, 0x2e, 0x76, 0x32, 0x2e, 0x4d, 0x61, 0x72, 0x6b,
	0x65, 0x74, 0x52, 0x06, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x12, 0x24, 0x0a, 0x05, 0x70, 0x72,
	0x69, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x74, 0x64, 0x65, 0x78,
	0x2e, 0x76, 0x32, 0x2e, 0x50, 0x72, 0x69, 0x63, 0x65, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65,
	0x22, 0x1b, 0x0a, 0x19, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74,
	0x50, 0x72, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xa5, 0x01,
	0x0a, 0x1b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x53, 0x74,
	0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x27, 0x0a,
	0x06, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e,
	0x74, 0x64, 0x65, 0x78, 0x2e, 0x76, 0x32, 0x2e, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x52, 0x06,
	0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x12, 0x41, 0x0a, 0x0d, 0x73, 0x74, 0x72, 0x61, 0x74, 0x65,
	0x67, 0x79, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1c, 0x2e,
	0x74, 0x64, 0x65, 0x78, 0x5f, 0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x32, 0x2e, 0x53,
	0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0c, 0x73, 0x74, 0x72,
	0x61, 0x74, 0x65, 0x67, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x22, 0x1e, 0x0a, 0x1c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d,
	0x61, 0x72, 0x6b, 0x65, 0x74, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x53, 0x0a, 0x23, 0x44, 0x65, 0x72, 0x69, 0x76, 0x65, 0x46,
	0x65, 0x65, 0x46, 0x72, 0x61, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2c, 0x0a, 0x10,
	0x6e, 0x75, 0x6d, 0x5f, 0x6f, 0x66, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x42, 0x02, 0x30, 0x02, 0x52, 0x0e, 0x6e, 0x75, 0x6d, 0x4f,
	0x66, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x22, 0x44, 0x0a, 0x24, 0x44, 0x65,
	0x72, 0x69, 0x76, 0x65, 0x46, 0x65, 0x65, 0x46, 0x72, 0x61, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x65,
	0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73,
	0x22, 0x23, 0x0a, 0x21, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x65, 0x65, 0x46, 0x72, 0x61, 0x67, 0x6d,
	0x65, 0x6e, 0x74, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x42, 0x0a, 0x22, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x65, 0x65,
	0x46, 0x72, 0x61, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x22, 0x20, 0x0a, 0x1e, 0x47, 0x65, 0x74,
	0x46, 0x65, 0x65, 0x46, 0x72, 0x61, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x42, 0x61, 0x6c,
	0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0xce, 0x01, 0x0a, 0x1f,
	0x47, 0x65, 0x74, 0x46, 0x65, 0x65, 0x46, 0x72, 0x61, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x65, 0x72,
	0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x56, 0x0a, 0x07, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x3c, 0x2e, 0x74, 0x64, 0x65, 0x78, 0x5f, 0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x2e, 0x76,
	0x32, 0x2e, 0x47, 0x65, 0x74, 0x46, 0x65, 0x65, 0x46, 0x72, 0x61, 0x67, 0x6d, 0x65, 0x6e, 0x74,
	0x65, 0x72, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x2e, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07,
	0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x1a, 0x53, 0x0a, 0x0c, 0x42, 0x61, 0x6c, 0x61, 0x6e,
	0x63, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x2d, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x74, 0x64, 0x65, 0x78, 0x5f,
	0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x32, 0x2e, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63,
	0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x73, 0x0a, 0x1e,
	0x46, 0x65, 0x65, 0x46, 0x72, 0x61, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x53, 0x70, 0x6c,
	0x69, 0x74, 0x46, 0x75, 0x6e, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x23,
	0x0a, 0x0d, 0x6d, 0x61, 0x78, 0x5f, 0x66, 0x72, 0x61, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x6d, 0x61, 0x78, 0x46, 0x72, 0x61, 0x67, 0x6d, 0x65,
	0x6e, 0x74, 0x73, 0x12, 0x2c, 0x0a, 0x12, 0x6d, 0x69, 0x6c, 0x6c, 0x69, 0x73, 0x61, 0x74, 0x73,
	0x5f, 0x70, 0x65, 0x72, 0x5f, 0x62, 0x79, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x10, 0x6d, 0x69, 0x6c, 0x6c, 0x69, 0x73, 0x61, 0x74, 0x73, 0x50, 0x65, 0x72, 0x42, 0x79, 0x74,
	0x65, 0x22, 0x3b, 0x0a, 0x1f, 0x46, 0x65, 0x65, 0x46, 0x72, 0x61, 0x67, 0x6d, 0x65, 0x6e, 0x74,
	0x65, 0x72, 0x53, 0x70, 0x6c, 0x69, 0x74, 0x46, 0x75, 0x6e, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x9c,
	0x01, 0x0a, 0x1c, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x46, 0x65, 0x65, 0x46, 0x72,
	0x61, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x32, 0x0a, 0x07, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x18, 0x2e, 0x74, 0x64, 0x65, 0x78, 0x5f, 0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x2e, 0x76,
	0x32, 0x2e, 0x54, 0x78, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x52, 0x07, 0x6f, 0x75, 0x74, 0x70,
	0x75, 0x74, 0x73, 0x12, 0x2c, 0x0a, 0x12, 0x6d, 0x69, 0x6c, 0x6c, 0x69, 0x73, 0x61, 0x74, 0x73,
	0x5f, 0x70, 0x65, 0x72, 0x5f, 0x62, 0x79, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x10, 0x6d, 0x69, 0x6c, 0x6c, 0x69, 0x73, 0x61, 0x74, 0x73, 0x50, 0x65, 0x72, 0x42, 0x79, 0x74,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x22, 0x33, 0x0a,
	0x1d, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x46, 0x65, 0x65, 0x46, 0x72, 0x61, 0x67,
	0x6d, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x74, 0x78, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x78,
	0x69, 0x64, 0x22, 0x56, 0x0a, 0x26, 0x44, 0x65, 0x72, 0x69, 0x76, 0x65, 0x4d, 0x61, 0x72, 0x6b,
	0x65, 0x74, 0x46, 0x72, 0x61, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2c, 0x0a, 0x10,
	0x6e, 0x75, 0x6d, 0x5f, 0x6f, 0x66, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x42, 0x02, 0x30, 0x02, 0x52, 0x0e, 0x6e, 0x75, 0x6d, 0x4f,
	0x66, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x22, 0x47, 0x0a, 0x27, 0x44, 0x65,
	0x72, 0x69, 0x76, 0x65, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x46, 0x72, 0x61, 0x67, 0x6d, 0x65,
	0x6e, 0x74, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x65, 0x73, 0x22, 0x26, 0x0a, 0x24, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x61, 0x72, 0x6b, 0x65,
	0x74, 0x46, 0x72, 0x61, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x45, 0x0a, 0x25, 0x4c,
	0x69, 0x73, 0x74, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x46, 0x72, 0x61, 0x67, 0x6d, 0x65, 0x6e,
	0x74, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x65, 0x73, 0x22, 0x23, 0x0a, 0x21, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x46,
	0x72, 0x61, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0xd4, 0x01, 0x0a, 0x22, 0x47, 0x65, 0x74, 0x4d,
	0x61, 0x72, 0x6b, 0x65, 0x74, 0x46, 0x72, 0x61, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x42,
	0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x59,
	0x0a, 0x07, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x3f, 0x2e, 0x74, 0x64, 0x65, 0x78, 0x5f, 0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x32,
	0x2e, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x46, 0x72, 0x61, 0x67, 0x6d, 0x65,
	0x6e, 0x74, 0x65, 0x72, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x2e, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x52, 0x07, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x1a, 0x53, 0x0a, 0x0c, 0x42, 0x61, 0x6c,
	0x61, 0x6e, 0x63, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x2d, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x74, 0x64, 0x65,
	0x78, 0x5f, 0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x32, 0x2e, 0x42, 0x61, 0x6c, 0x61,
	0x6e, 0x63, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x7a,
	0x0a, 0x21, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x46, 0x72, 0x61, 0x67, 0x6d, 0x65, 0x6e, 0x74,
	0x65, 0x72, 0x53, 0x70, 0x6c, 0x69, 0x74, 0x46, 0x75, 0x6e, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x27, 0x0a, 0x06, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x74, 0x64, 0x65, 0x78, 0x2e, 0x76, 0x32, 0x2e, 0x4d, 0x61,
	0x72, 0x6b, 0x65, 0x74, 0x52, 0x06, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x12, 0x2c, 0x0a, 0x12,
	0x6d, 0x69, 0x6c, 0x6c, 0x69, 0x73, 0x61, 0x74, 0x73, 0x5f, 0x70, 0x65, 0x72, 0x5f, 0x62, 0x79,
	0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x10, 0x6d, 0x69, 0x6c, 0x6c, 0x69, 0x73,
	0x61, 0x74, 0x73, 0x50, 0x65, 0x72, 0x42, 0x79, 0x74, 0x65, 0x22, 0x3e, 0x0a, 0x22, 0x4d, 0x61,
	0x72, 0x6b, 0x65, 0x74, 0x46, 0x72, 0x61, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x53, 0x70,
	0x6c, 0x69, 0x74, 0x46, 0x75, 0x6e, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x9f, 0x01, 0x0a, 0x1f, 0x57,
	0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x46, 0x72, 0x61,
	0x67, 0x6d, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x32,
	0x0a, 0x07, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x18, 0x2e, 0x74, 0x64, 0x65, 0x78, 0x5f, 0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x32,
	0x2e, 0x54, 0x78, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x52, 0x07, 0x6f, 0x75, 0x74, 0x70, 0x75,
	0x74, 0x73, 0x12, 0x2c, 0x0a, 0x12, 0x6d, 0x69, 0x6c, 0x6c, 0x69, 0x73, 0x61, 0x74, 0x73, 0x5f,
	0x70, 0x65, 0x72, 0x5f, 0x62, 0x79, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x10,
	0x6d, 0x69, 0x6c, 0x6c, 0x69, 0x73, 0x61, 0x74, 0x73, 0x50, 0x65, 0x72, 0x42, 0x79, 0x74, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x22, 0x36, 0x0a, 0x20,
	0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x46, 0x72,
	0x61, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x74, 0x78, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x74, 0x78, 0x69, 0x64, 0x22, 0x14, 0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x61, 0x72, 0x6b,
	0x65, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x4b, 0x0a, 0x13, 0x4c, 0x69,
	0x73, 0x74, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x34, 0x0a, 0x07, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x74, 0x64, 0x65, 0x78, 0x5f, 0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e,
	0x2e, 0x76, 0x32, 0x2e, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x07,
	0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x73, 0x22, 0x66, 0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74, 0x54,
	0x72, 0x61, 0x64, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x27, 0x0a, 0x06,
	0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x74,
	0x64, 0x65, 0x78, 0x2e, 0x76, 0x32, 0x2e, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x52, 0x06, 0x6d,
	0x61, 0x72, 0x6b, 0x65, 0x74, 0x12, 0x28, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x74, 0x64, 0x65, 0x78, 0x5f, 0x64, 0x61, 0x65, 0x6d, 0x6f,
	0x6e, 0x2e, 0x76, 0x32, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x22,
	0x47, 0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x72, 0x61, 0x64, 0x65, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x31, 0x0a, 0x06, 0x74, 0x72, 0x61, 0x64, 0x65, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x74, 0x64, 0x65, 0x78, 0x5f, 0x64, 0x61, 0x65,
	0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x32, 0x2e, 0x54, 0x72, 0x61, 0x64, 0x65, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x06, 0x74, 0x72, 0x61, 0x64, 0x65, 0x73, 0x22, 0x5f, 0x0a, 0x10, 0x4c, 0x69, 0x73, 0x74,
	0x55, 0x74, 0x78, 0x6f, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x28, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e,
	0x74, 0x64, 0x65, 0x78, 0x5f, 0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x32, 0x2e, 0x50,
	0x61, 0x67, 0x65, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x22, 0x93, 0x01, 0x0a, 0x11, 0x4c, 0x69,
	0x73, 0x74, 0x55, 0x74, 0x78, 0x6f, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x41, 0x0a, 0x0f, 0x73, 0x70, 0x65, 0x6e, 0x64, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x75, 0x74, 0x78,
	0x6f, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x74, 0x64, 0x65, 0x78, 0x5f,
	0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x32, 0x2e, 0x55, 0x74, 0x78, 0x6f, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x0e, 0x73, 0x70, 0x65, 0x6e, 0x64, 0x61, 0x62, 0x6c, 0x65, 0x55, 0x74, 0x78,
	0x6f, 0x73, 0x12, 0x3b, 0x0a, 0x0c, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x5f, 0x75, 0x74, 0x78,
	0x6f, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x74, 0x64, 0x65, 0x78, 0x5f,
	0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x32, 0x2e, 0x55, 0x74, 0x78, 0x6f, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x0b, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x55, 0x74, 0x78, 0x6f, 0x73, 0x22,
	0x7b, 0x0a, 0x11, 0x41, 0x64, 0x64, 0x57, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74,
	0x12, 0x32, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x1a, 0x2e, 0x74, 0x64, 0x65, 0x78, 0x5f, 0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x2e, 0x76,
	0x32, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x06, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x22, 0x24, 0x0a, 0x12,
	0x41, 0x64, 0x64, 0x57, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x22, 0x26, 0x0a, 0x14, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x57, 0x65, 0x62, 0x68,
	0x6f, 0x6f, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x17, 0x0a, 0x15, 0x52, 0x65,
	0x6d, 0x6f, 0x76, 0x65, 0x57, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x49, 0x0a, 0x13, 0x4c, 0x69, 0x73, 0x74, 0x57, 0x65, 0x62, 0x68, 0x6f,
	0x6f, 0x6b, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x32, 0x0a, 0x06, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1a, 0x2e, 0x74, 0x64, 0x65,
	0x78, 0x5f, 0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x32, 0x2e, 0x41, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x56,
	0x0a, 0x14, 0x4c, 0x69, 0x73, 0x74, 0x57, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3e, 0x0a, 0x0c, 0x77, 0x65, 0x62, 0x68, 0x6f, 0x6f,
	0x6b, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x74,
	0x64, 0x65, 0x78, 0x5f, 0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x32, 0x2e, 0x57, 0x65,
	0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0b, 0x77, 0x65, 0x62, 0x68, 0x6f,
	0x6f, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x62, 0x0a, 0x13, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x65,
	0x70, 0x6f, 0x73, 0x69, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a,
	0x0c, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x28, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14,
	0x2e, 0x74, 0x64, 0x65, 0x78, 0x5f, 0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x32, 0x2e,
	0x50, 0x61, 0x67, 0x65, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x22, 0x72, 0x0a, 0x14, 0x4c, 0x69,
	0x73, 0x74, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x37, 0x0a, 0x08, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x74, 0x64, 0x65, 0x78, 0x5f, 0x64,
	0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x32, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x73, 0x22, 0x65,
	0x0a, 0x16, 0x4c, 0x69, 0x73, 0x74, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x61, 0x6c,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x28, 0x0a, 0x04, 0x70,
	0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x74, 0x64, 0x65, 0x78,
	0x5f, 0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x32, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x52,
	0x04, 0x70, 0x61, 0x67, 0x65, 0x22, 0x7b, 0x0a, 0x17, 0x4c, 0x69, 0x73, 0x74, 0x57, 0x69, 0x74,
	0x68, 0x64, 0x72, 0x61, 0x77, 0x61, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x21, 0x0a, 0x0c, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x3d, 0x0a, 0x0b, 0x77, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x61,
	0x6c, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x74, 0x64, 0x65, 0x78, 0x5f,
	0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x32, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x77, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x61,
	0x6c, 0x73, 0x32, 0x9b, 0x1f, 0x0a, 0x0f, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x6d, 0x0a, 0x12, 0x44, 0x65, 0x72, 0x69, 0x76, 0x65,
	0x46, 0x65, 0x65, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x12, 0x29, 0x2e, 0x74,
	0x64, 0x65, 0x78, 0x5f, 0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x32, 0x2e, 0x44, 0x65,
	0x72, 0x69, 0x76, 0x65, 0x46, 0x65, 0x65, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x74, 0x64, 0x65, 0x78, 0x5f, 0x64,
	0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x32, 0x2e, 0x44, 0x65, 0x72, 0x69, 0x76, 0x65, 0x46,
	0x65, 0x65, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x67, 0x0a, 0x10, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x65, 0x65,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x12, 0x27, 0x2e, 0x74, 0x64, 0x65, 0x78,
	0x5f, 0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x32, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x46,
	0x65, 0x65, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x28, 0x2e, 0x74, 0x64, 0x65, 0x78, 0x5f, 0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e,
	0x2e, 0x76, 0x32, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x65, 0x65, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5e,
	0x0a, 0x0d, 0x47, 0x65, 0x74, 0x46, 0x65, 0x65, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12,
	0x24, 0x2e, 0x74, 0x64, 0x65, 0x78, 0x5f, 0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x32,
	0x2e, 0x47, 0x65, 0x74, 0x46, 0x65, 0x65, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x74, 0x64, 0x65, 0x78, 0x5f, 0x64, 0x61, 0x65,
	0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x65, 0x74, 0x46, 0x65, 0x65, 0x42, 0x61, 0x6c,
	0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x58,
	0x0a, 0x0b, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x46, 0x65, 0x65, 0x12, 0x22, 0x2e,
	0x74, 0x64, 0x65, 0x78, 0x5f, 0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x32, 0x2e, 0x57,
	0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x46, 0x65, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x23, 0x2e, 0x74, 0x64, 0x65, 0x78, 0x5f, 0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x2e,
	0x76, 0x32, 0x2e, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x46, 0x65, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x52, 0x0a, 0x09, 0x4e, 0x65, 0x77, 0x4d,
	0x61, 0x72, 0x6b, 0x65, 0x74, 0x12, 0x20, 0x2e, 0x74, 0x64, 0x65, 0x78, 0x5f, 0x64, 0x61, 0x65,
	0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x32, 0x2e, 0x4e, 0x65, 0x77, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x74, 0x64, 0x65, 0x78, 0x5f, 0x64,
	0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x32, 0x2e, 0x4e, 0x65, 0x77, 0x4d, 0x61, 0x72, 0x6b,
	0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5e, 0x0a, 0x0d,
	0x47, 0x65, 0x74, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x24, 0x2e,
	0x74, 0x64, 0x65, 0x78, 0x5f, 0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x32, 0x2e, 0x47,
	0x65, 0x74, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x74, 0x64, 0x65, 0x78, 0x5f, 0x64, 0x61, 0x65, 0x6d, 0x6f,
	0x6e, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x76, 0x0a, 0x15,
	0x44, 0x65, 0x72, 0x69, 0x76, 0x65, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x65, 0x73, 0x12, 0x2c, 0x2e, 0x74, 0x64, 0x65, 0x78, 0x5f, 0x64, 0x61, 0x65,
	0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x32, 0x2e, 0x44, 0x65, 0x72, 0x69, 0x76, 0x65, 0x4d, 0x61, 0x72,
	0x6b, 0x65, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x2d, 0x2e, 0x74, 0x64, 0x65, 0x78, 0x5f, 0x64, 0x61, 0x65, 0x6d, 0x6f,
	0x6e, 0x2e, 0x76, 0x32, 0x2e, 0x44, 0x65, 0x72, 0x69, 0x76, 0x65, 0x4d, 0x61, 0x72, 0x6b, 0x65,
	0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x70, 0x0a, 0x13, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x61, 0x72, 0x6b,
	0x65, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x12, 0x2a, 0x2e, 0x74, 0x64,
	0x65, 0x78, 0x5f, 0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x32, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x74, 0x64, 0x65, 0x78, 0x5f, 0x64,
	0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x32, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x61, 0x72,
	0x6b, 0x65, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x55, 0x0a, 0x0a, 0x4f, 0x70, 0x65, 0x6e, 0x4d, 0x61,
	0x72, 0x6b, 0x65, 0x74, 0x12, 0x21, 0x2e, 0x74, 0x64, 0x65, 0x78, 0x5f, 0x64, 0x61, 0x65, 0x6d,
	0x6f, 0x6e, 0x2e, 0x76, 0x32, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x74, 0x64, 0x65, 0x78, 0x5f, 0x64,
	0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x32, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x4d, 0x61, 0x72,
	0x6b, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x58, 0x0a,
	0x0b, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x12, 0x22, 0x2e, 0x74,
	0x64, 0x65, 0x78, 0x5f, 0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x32, 0x2e, 0x43, 0x6c,
	0x6f, 0x73, 0x65, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x23, 0x2e, 0x74, 0x64, 0x65, 0x78, 0x5f, 0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x2e, 0x76,
	0x32, 0x2e, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x55, 0x0a, 0x0a, 0x44, 0x72, 0x6f, 0x70, 0x4d,
	0x61, 0x72, 0x6b, 0x65, 0x74, 0x12, 0x21, 0x2e, 0x74, 0x64, 0x65, 0x78, 0x5f, 0x64, 0x61, 0x65,
	0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x32, 0x2e, 0x44, 0x72, 0x6f, 0x70, 0x4d, 0x61, 0x72, 0x6b, 0x65,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x74, 0x64, 0x65, 0x78, 0x5f,
	0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x32, 0x2e, 0x44, 0x72, 0x6f, 0x70, 0x4d, 0x61,
	0x72, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x61,
	0x0a, 0x0e, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74,
	0x12, 0x25, 0x2e, 0x74, 0x64, 0x65, 0x78, 0x5f, 0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x2e, 0x76,
	0x32, 0x2e, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x74, 0x64, 0x65, 0x78, 0x5f, 0x64,
	0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x32, 0x2e, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61,
	0x77, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x64, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x52, 0x65,
	0x70, 0x6f, 0x72, 0x74, 0x12, 0x26, 0x2e, 0x74, 0x64, 0x65, 0x78, 0x5f, 0x64, 0x61, 0x65, 0x6d,
	0x6f, 0x6e, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x52,
	0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x74,
	0x64, 0x65, 0x78, 0x5f, 0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x65,
	0x74, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x82, 0x01, 0x0a, 0x19, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61,
	0x67, 0x65, 0x46, 0x65, 0x65, 0x12, 0x30, 0x2e, 0x74, 0x64, 0x65, 0x78, 0x5f, 0x64, 0x61, 0x65,
	0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x32, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x72,
	0x6b, 0x65, 0x74, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x46, 0x65, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x31, 0x2e, 0x74, 0x64, 0x65, 0x78, 0x5f, 0x64,
	0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x32, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d,
	0x61, 0x72, 0x6b, 0x65, 0x74, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x46,
	0x65, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x73, 0x0a, 0x14,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x46, 0x69, 0x78, 0x65,
	0x64, 0x46, 0x65, 0x65, 0x12, 0x2b, 0x2e, 0x74, 0x64, 0x65, 0x78, 0x5f, 0x64, 0x61, 0x65, 0x6d,
	0x6f, 0x6e, 0x2e, 0x76, 0x32, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x72, 0x6b,
	0x65, 0x74, 0x46, 0x69, 0x78, 0x65, 0x64, 0x46, 0x65, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x2c, 0x2e, 0x74, 0x64, 0x65, 0x78, 0x5f, 0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x2e,
	0x76, 0x32, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x46,
	0x69, 0x78, 0x65, 0x64, 0x46, 0x65, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x88, 0x01, 0x0a, 0x1b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x72, 0x6b,
	0x65, 0x74, 0x41, 0x73, 0x73, 0x65, 0x74, 0x73, 0x50, 0x72, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f,
	0x6e, 0x12, 0x32, 0x2e, 0x74, 0x64, 0x65, 0x78, 0x5f, 0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x2e,
	0x76, 0x32, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x41,
	0x73, 0x73, 0x65, 0x74, 0x73, 0x50, 0x72, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x33, 0x2e, 0x74, 0x64, 0x65, 0x78, 0x5f, 0x64, 0x61, 0x65,
	0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x32, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x72,
	0x6b, 0x65, 0x74, 0x41, 0x73, 0x73, 0x65, 0x74, 0x73, 0x50, 0x72, 0x65, 0x63, 0x69, 0x73, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x6a, 0x0a, 0x11,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x50, 0x72, 0x69, 0x63,
	0x65, 0x12, 0x28, 0x2e, 0x74, 0x64, 0x65, 0x78, 0x5f, 0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x2e,
	0x76, 0x32, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x50,
	0x72, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x74, 0x64,
	0x65, 0x78, 0x5f, 0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x32, 0x2e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x73, 0x0a, 0x14, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79,
	0x12, 0x2b, 0x2e, 0x74, 0x64, 0x65, 0x78, 0x5f, 0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x2e, 0x76,
	0x32, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x53, 0x74,
	0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e,
	0x74, 0x64, 0x65, 0x78, 0x5f, 0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x32, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x53, 0x74, 0x72, 0x61, 0x74,
	0x65, 0x67, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x8b, 0x01,
	0x0a, 0x1c, 0x44, 0x65, 0x72, 0x69, 0x76, 0x65, 0x46, 0x65, 0x65, 0x46, 0x72, 0x61, 0x67, 0x6d,
	0x65, 0x6e, 0x74, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x12, 0x33,
	0x2e, 0x74, 0x64, 0x65, 0x78, 0x5f, 0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x32, 0x2e,
	0x44, 0x65, 0x72, 0x69, 0x76, 0x65, 0x46, 0x65, 0x65, 0x46, 0x72, 0x61, 0x67, 0x6d, 0x65, 0x6e,
	0x74, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x34, 0x2e, 0x74, 0x64, 0x65, 0x78, 0x5f, 0x64, 0x61, 0x65, 0x6d, 0x6f,
	0x6e, 0x2e, 0x76, 0x32, 0x2e, 0x44, 0x65, 0x72, 0x69, 0x76, 0x65, 0x46, 0x65, 0x65, 0x46, 0x72,
	0x61, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x85, 0x01, 0x0a, 0x1a,
	0x4c, 0x69, 0x73, 0x74, 0x46, 0x65, 0x65, 0x46, 0x72, 0x61, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x65,
	0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x12, 0x31, 0x2e, 0x74, 0x64, 0x65,
	0x78, 0x5f, 0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x32, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x46, 0x65, 0x65, 0x46, 0x72, 0x61, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x32, 0x2e,
	0x74, 0x64, 0x65, 0x78, 0x5f, 0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x32, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x46, 0x65, 0x65, 0x46, 0x72, 0x61, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x65, 0x72,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x7c, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x46, 0x65, 0x65, 0x46, 0x72, 0x61,
	0x67, 0x6d, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x2e,
	0x2e, 0x74, 0x64, 0x65, 0x78, 0x5f, 0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x32, 0x2e,
	0x47, 0x65, 0x74, 0x46, 0x65, 0x65, 0x46, 0x72, 0x61, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x65, 0x72,
	0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2f,
	0x2e, 0x74, 0x64, 0x65, 0x78, 0x5f, 0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x32, 0x2e,
	0x47, 0x65, 0x74, 0x46, 0x65, 0x65, 0x46, 0x72, 0x61, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x65, 0x72,
	0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x7e, 0x0a, 0x17, 0x46, 0x65, 0x65, 0x46, 0x72, 0x61, 0x67, 0x6d, 0x65, 0x6e, 0x74,
	0x65, 0x72, 0x53, 0x70, 0x6c, 0x69, 0x74, 0x46, 0x75, 0x6e, 0x64, 0x73, 0x12, 0x2e, 0x2e, 0x74,
	0x64, 0x65, 0x78, 0x5f, 0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x32, 0x2e, 0x46, 0x65,
	0x65, 0x46, 0x72, 0x61, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x53, 0x70, 0x6c, 0x69, 0x74,
	0x46, 0x75, 0x6e, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2f, 0x2e, 0x74,
	0x64, 0x65, 0x78, 0x5f, 0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x32, 0x2e, 0x46, 0x65,
	0x65, 0x46, 0x72, 0x61, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x53, 0x70, 0x6c, 0x69, 0x74,
	0x46, 0x75, 0x6e, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x30,
	0x01, 0x12, 0x76, 0x0a, 0x15, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x46, 0x65, 0x65,
	0x46, 0x72, 0x61, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x12, 0x2c, 0x2e, 0x74, 0x64, 0x65,
	0x78, 0x5f, 0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x32, 0x2e, 0x57, 0x69, 0x74, 0x68,
	0x64, 0x72, 0x61, 0x77, 0x46, 0x65, 0x65, 0x46, 0x72, 0x61, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x65,
	0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2d, 0x2e, 0x74, 0x64, 0x65, 0x78, 0x5f,
	0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x32, 0x2e, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72,
	0x61, 0x77, 0x46, 0x65, 0x65, 0x46, 0x72, 0x61, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x94, 0x01, 0x0a, 0x1f, 0x44, 0x65,
	0x72, 0x69, 0x76, 0x65, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x46, 0x72, 0x61, 0x67, 0x6d, 0x65,
	0x6e, 0x74, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x12, 0x36, 0x2e,
	0x74, 0x64, 0x65, 0x78, 0x5f, 0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x32, 0x2e, 0x44,
	0x65, 0x72, 0x69, 0x76, 0x65, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x46, 0x72, 0x61, 0x67, 0x6d,
	0x65, 0x6e, 0x74, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x37, 0x2e, 0x74, 0x64, 0x65, 0x78, 0x5f, 0x64, 0x61, 0x65,
	0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x32, 0x2e, 0x44, 0x65, 0x72, 0x69, 0x76, 0x65, 0x4d, 0x61, 0x72,
	0x6b, 0x65, 0x74, 0x46, 0x72, 0x61, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x8e, 0x01, 0x0a, 0x1d, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x46,
	0x72, 0x61, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x65, 0x73, 0x12, 0x34, 0x2e, 0x74, 0x64, 0x65, 0x78, 0x5f, 0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e,
	0x2e, 0x76, 0x32, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x46, 0x72,
	0x61, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x35, 0x2e, 0x74, 0x64, 0x65, 0x78, 0x5f,
	0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x32, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x61,
	0x72, 0x6b, 0x65, 0x74, 0x46, 0x72, 0x61, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x85, 0x01, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x46,
	0x72, 0x61, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65,
	0x12, 0x31, 0x2e, 0x74, 0x64, 0x65, 0x78, 0x5f, 0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x2e, 0x76,
	0x32, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x46, 0x72, 0x61, 0x67, 0x6d,
	0x65, 0x6e, 0x74, 0x65, 0x72, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x32, 0x2e, 0x74, 0x64, 0x65, 0x78, 0x5f, 0x64, 0x61, 0x65, 0x6d, 0x6f,
	0x6e, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x46, 0x72,
	0x61, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x87, 0x01, 0x0a, 0x1a, 0x4d, 0x61,
	0x72, 0x6b, 0x65, 0x74, 0x46, 0x72, 0x61, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x53, 0x70,
	0x6c, 0x69, 0x74, 0x46, 0x75, 0x6e, 0x64, 0x73, 0x12, 0x31, 0x2e, 0x74, 0x64, 0x65, 0x78, 0x5f,
	0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x32, 0x2e, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74,
	0x46, 0x72, 0x61, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x53, 0x70, 0x6c, 0x69, 0x74, 0x46,
	0x75, 0x6e, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x32, 0x2e, 0x74, 0x64,
	0x65, 0x78, 0x5f, 0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x32, 0x2e, 0x4d, 0x61, 0x72,
	0x6b, 0x65, 0x74, 0x46, 0x72, 0x61, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x53, 0x70, 0x6c,
	0x69, 0x74, 0x46, 0x75, 0x6e, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x30, 0x01, 0x12, 0x7f, 0x0a, 0x18, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x4d,
	0x61, 0x72, 0x6b, 0x65, 0x74, 0x46, 0x72, 0x61, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x12,
	0x2f, 0x2e, 0x74, 0x64, 0x65, 0x78, 0x5f, 0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x32,
	0x2e, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x46,
	0x72, 0x61, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x30, 0x2e, 0x74, 0x64, 0x65, 0x78, 0x5f, 0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x2e, 0x76,
	0x32, 0x2e, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74,
	0x46, 0x72, 0x61, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x58, 0x0a, 0x0b, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x61, 0x72, 0x6b,
	0x65, 0x74, 0x73, 0x12, 0x22, 0x2e, 0x74, 0x64, 0x65, 0x78, 0x5f, 0x64, 0x61, 0x65, 0x6d, 0x6f,
	0x6e, 0x2e, 0x76, 0x32, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x74, 0x64, 0x65, 0x78, 0x5f, 0x64,
	0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x32, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x61, 0x72,
	0x6b, 0x65, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x55,
	0x0a, 0x0a, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x72, 0x61, 0x64, 0x65, 0x73, 0x12, 0x21, 0x2e, 0x74,
	0x64, 0x65, 0x78, 0x5f, 0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x32, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x54, 0x72, 0x61, 0x64, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x22, 0x2e, 0x74, 0x64, 0x65, 0x78, 0x5f, 0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x32,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x72, 0x61, 0x64, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x52, 0x0a, 0x09, 0x4c, 0x69, 0x73, 0x74, 0x55, 0x74, 0x78,
	0x6f, 0x73, 0x12, 0x20, 0x2e, 0x74, 0x64, 0x65, 0x78, 0x5f, 0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e,
	0x2e, 0x76, 0x32, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x55, 0x74, 0x78, 0x6f, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x74, 0x64, 0x65, 0x78, 0x5f, 0x64, 0x61, 0x65, 0x6d,
	0x6f, 0x6e, 0x2e, 0x76, 0x32, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x55, 0x74, 0x78, 0x6f, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x55, 0x0a, 0x0a, 0x41, 0x64, 0x64,
	0x57, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x12, 0x21, 0x2e, 0x74, 0x64, 0x65, 0x78, 0x5f, 0x64,
	0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x32, 0x2e, 0x41, 0x64, 0x64, 0x57, 0x65, 0x62, 0x68,
	0x6f, 0x6f, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x74, 0x64, 0x65,
	0x78, 0x5f, 0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x32, 0x2e, 0x41, 0x64, 0x64, 0x57,
	0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x5e, 0x0a, 0x0d, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x57, 0x65, 0x62, 0x68, 0x6f, 0x6f,
	0x6b, 0x12, 0x24, 0x2e, 0x74, 0x64, 0x65, 0x78, 0x5f, 0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x2e,
	0x76, 0x32, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x57, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x74, 0x64, 0x65, 0x78, 0x5f, 0x64,
	0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x57,
	0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x5b, 0x0a, 0x0c, 0x4c, 0x69, 0x73, 0x74, 0x57, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x73,
	0x12, 0x23, 0x2e, 0x74, 0x64, 0x65, 0x78, 0x5f, 0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x2e, 0x76,
	0x32, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x57, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x74, 0x64, 0x65, 0x78, 0x5f, 0x64, 0x61, 0x65,
	0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x32, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x57, 0x65, 0x62, 0x68, 0x6f,
	0x6f, 0x6b, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5b, 0x0a,
	0x0c, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x73, 0x12, 0x23, 0x2e,
	0x74, 0x64, 0x65, 0x78, 0x5f, 0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x32, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x24, 0x2e, 0x74, 0x64, 0x65, 0x78, 0x5f, 0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e,
	0x2e, 0x76, 0x32, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x64, 0x0a, 0x0f, 0x4c, 0x69,
	0x73, 0x74, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x61, 0x6c, 0x73, 0x12, 0x26, 0x2e,
	0x74, 0x64, 0x65, 0x78, 0x5f, 0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x32, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x61, 0x6c, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x74, 0x64, 0x65, 0x78, 0x5f, 0x64, 0x61, 0x65,
	0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x32, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x57, 0x69, 0x74, 0x68, 0x64,
	0x72, 0x61, 0x77, 0x61, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x42, 0xd0, 0x01, 0x0a, 0x12, 0x63, 0x6f, 0x6d, 0x2e, 0x74, 0x64, 0x65, 0x78, 0x5f, 0x64, 0x61,
	0x65, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x32, 0x42, 0x0d, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f,
	0x72, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x56, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x74, 0x64, 0x65, 0x78, 0x2d, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72,
	0x6b, 0x2f, 0x74, 0x64, 0x65, 0x78, 0x2d, 0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x2f, 0x61, 0x70,
	0x69, 0x2d, 0x73, 0x70, 0x65, 0x63, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f,
	0x67, 0x65, 0x6e, 0x2f, 0x74, 0x64, 0x65, 0x78, 0x2d, 0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x2f,
	0x76, 0x32, 0x3b, 0x74, 0x64, 0x65, 0x78, 0x5f, 0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x76, 0x32,
	0xa2, 0x02, 0x03, 0x54, 0x58, 0x58, 0xaa, 0x02, 0x0d, 0x54, 0x64, 0x65, 0x78, 0x44, 0x61, 0x65,
	0x6d, 0x6f, 0x6e, 0x2e, 0x56, 0x32, 0xca, 0x02, 0x0d, 0x54, 0x64, 0x65, 0x78, 0x44, 0x61, 0x65,
	0x6d, 0x6f, 0x6e, 0x5c, 0x56, 0x32, 0xe2, 0x02, 0x19, 0x54, 0x64, 0x65, 0x78, 0x44, 0x61, 0x65,
	0x6d, 0x6f, 0x6e, 0x5c, 0x56, 0x32, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0xea, 0x02, 0x0e, 0x54, 0x64, 0x65, 0x78, 0x44, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x3a,
	0x3a, 0x56, 0x32, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_tdex_daemon_v2_operator_proto_rawDescOnce sync.Once
	file_tdex_daemon_v2_operator_proto_rawDescData = file_tdex_daemon_v2_operator_proto_rawDesc
)

func file_tdex_daemon_v2_operator_proto_rawDescGZIP() []byte {
	file_tdex_daemon_v2_operator_proto_rawDescOnce.Do(func() {
		file_tdex_daemon_v2_operator_proto_rawDescData = protoimpl.X.CompressGZIP(file_tdex_daemon_v2_operator_proto_rawDescData)
	})
	return file_tdex_daemon_v2_operator_proto_rawDescData
}

var file_tdex_daemon_v2_operator_proto_msgTypes = make([]protoimpl.MessageInfo, 74)
var file_tdex_daemon_v2_operator_proto_goTypes = []interface{}{
	(*DeriveFeeAddressesRequest)(nil),               // 0: tdex_daemon.v2.DeriveFeeAddressesRequest
	(*DeriveFeeAddressesResponse)(nil),              // 1: tdex_daemon.v2.DeriveFeeAddressesResponse
	(*ListFeeAddressesRequest)(nil),                 // 2: tdex_daemon.v2.ListFeeAddressesRequest
	(*ListFeeAddressesResponse)(nil),                // 3: tdex_daemon.v2.ListFeeAddressesResponse
	(*GetFeeBalanceRequest)(nil),                    // 4: tdex_daemon.v2.GetFeeBalanceRequest
	(*GetFeeBalanceResponse)(nil),                   // 5: tdex_daemon.v2.GetFeeBalanceResponse
	(*WithdrawFeeRequest)(nil),                      // 6: tdex_daemon.v2.WithdrawFeeRequest
	(*WithdrawFeeResponse)(nil),                     // 7: tdex_daemon.v2.WithdrawFeeResponse
	(*NewMarketRequest)(nil),                        // 8: tdex_daemon.v2.NewMarketRequest
	(*NewMarketResponse)(nil),                       // 9: tdex_daemon.v2.NewMarketResponse
	(*GetMarketInfoRequest)(nil),                    // 10: tdex_daemon.v2.GetMarketInfoRequest
	(*GetMarketInfoResponse)(nil),                   // 11: tdex_daemon.v2.GetMarketInfoResponse
	(*DeriveMarketAddressesRequest)(nil),            // 12: tdex_daemon.v2.DeriveMarketAddressesRequest
	(*DeriveMarketAddressesResponse)(nil),           // 13: tdex_daemon.v2.DeriveMarketAddressesResponse
	(*ListMarketAddressesRequest)(nil),              // 14: tdex_daemon.v2.ListMarketAddressesRequest
	(*ListMarketAddressesResponse)(nil),             // 15: tdex_daemon.v2.ListMarketAddressesResponse
	(*OpenMarketRequest)(nil),                       // 16: tdex_daemon.v2.OpenMarketRequest
	(*OpenMarketResponse)(nil),                      // 17: tdex_daemon.v2.OpenMarketResponse
	(*CloseMarketRequest)(nil),                      // 18: tdex_daemon.v2.CloseMarketRequest
	(*CloseMarketResponse)(nil),                     // 19: tdex_daemon.v2.CloseMarketResponse
	(*DropMarketRequest)(nil),                       // 20: tdex_daemon.v2.DropMarketRequest
	(*DropMarketResponse)(nil),                      // 21: tdex_daemon.v2.DropMarketResponse
	(*WithdrawMarketRequest)(nil),                   // 22: tdex_daemon.v2.WithdrawMarketRequest
	(*WithdrawMarketResponse)(nil),                  // 23: tdex_daemon.v2.WithdrawMarketResponse
	(*GetMarketReportRequest)(nil),                  // 24: tdex_daemon.v2.GetMarketReportRequest
	(*GetMarketReportResponse)(nil),                 // 25: tdex_daemon.v2.GetMarketReportResponse
	(*UpdateMarketPercentageFeeRequest)(nil),        // 26: tdex_daemon.v2.UpdateMarketPercentageFeeRequest
	(*UpdateMarketPercentageFeeResponse)(nil),       // 27: tdex_daemon.v2.UpdateMarketPercentageFeeResponse
	(*UpdateMarketFixedFeeRequest)(nil),             // 28: tdex_daemon.v2.UpdateMarketFixedFeeRequest
	(*UpdateMarketFixedFeeResponse)(nil),            // 29: tdex_daemon.v2.UpdateMarketFixedFeeResponse
	(*UpdateMarketAssetsPrecisionRequest)(nil),      // 30: tdex_daemon.v2.UpdateMarketAssetsPrecisionRequest
	(*UpdateMarketAssetsPrecisionResponse)(nil),     // 31: tdex_daemon.v2.UpdateMarketAssetsPrecisionResponse
	(*UpdateMarketPriceRequest)(nil),                // 32: tdex_daemon.v2.UpdateMarketPriceRequest
	(*UpdateMarketPriceResponse)(nil),               // 33: tdex_daemon.v2.UpdateMarketPriceResponse
	(*UpdateMarketStrategyRequest)(nil),             // 34: tdex_daemon.v2.UpdateMarketStrategyRequest
	(*UpdateMarketStrategyResponse)(nil),            // 35: tdex_daemon.v2.UpdateMarketStrategyResponse
	(*DeriveFeeFragmenterAddressesRequest)(nil),     // 36: tdex_daemon.v2.DeriveFeeFragmenterAddressesRequest
	(*DeriveFeeFragmenterAddressesResponse)(nil),    // 37: tdex_daemon.v2.DeriveFeeFragmenterAddressesResponse
	(*ListFeeFragmenterAddressesRequest)(nil),       // 38: tdex_daemon.v2.ListFeeFragmenterAddressesRequest
	(*ListFeeFragmenterAddressesResponse)(nil),      // 39: tdex_daemon.v2.ListFeeFragmenterAddressesResponse
	(*GetFeeFragmenterBalanceRequest)(nil),          // 40: tdex_daemon.v2.GetFeeFragmenterBalanceRequest
	(*GetFeeFragmenterBalanceResponse)(nil),         // 41: tdex_daemon.v2.GetFeeFragmenterBalanceResponse
	(*FeeFragmenterSplitFundsRequest)(nil),          // 42: tdex_daemon.v2.FeeFragmenterSplitFundsRequest
	(*FeeFragmenterSplitFundsResponse)(nil),         // 43: tdex_daemon.v2.FeeFragmenterSplitFundsResponse
	(*WithdrawFeeFragmenterRequest)(nil),            // 44: tdex_daemon.v2.WithdrawFeeFragmenterRequest
	(*WithdrawFeeFragmenterResponse)(nil),           // 45: tdex_daemon.v2.WithdrawFeeFragmenterResponse
	(*DeriveMarketFragmenterAddressesRequest)(nil),  // 46: tdex_daemon.v2.DeriveMarketFragmenterAddressesRequest
	(*DeriveMarketFragmenterAddressesResponse)(nil), // 47: tdex_daemon.v2.DeriveMarketFragmenterAddressesResponse
	(*ListMarketFragmenterAddressesRequest)(nil),    // 48: tdex_daemon.v2.ListMarketFragmenterAddressesRequest
	(*ListMarketFragmenterAddressesResponse)(nil),   // 49: tdex_daemon.v2.ListMarketFragmenterAddressesResponse
	(*GetMarketFragmenterBalanceRequest)(nil),       // 50: tdex_daemon.v2.GetMarketFragmenterBalanceRequest
	(*GetMarketFragmenterBalanceResponse)(nil),      // 51: tdex_daemon.v2.GetMarketFragmenterBalanceResponse
	(*MarketFragmenterSplitFundsRequest)(nil),       // 52: tdex_daemon.v2.MarketFragmenterSplitFundsRequest
	(*MarketFragmenterSplitFundsResponse)(nil),      // 53: tdex_daemon.v2.MarketFragmenterSplitFundsResponse
	(*WithdrawMarketFragmenterRequest)(nil),         // 54: tdex_daemon.v2.WithdrawMarketFragmenterRequest
	(*WithdrawMarketFragmenterResponse)(nil),        // 55: tdex_daemon.v2.WithdrawMarketFragmenterResponse
	(*ListMarketsRequest)(nil),                      // 56: tdex_daemon.v2.ListMarketsRequest
	(*ListMarketsResponse)(nil),                     // 57: tdex_daemon.v2.ListMarketsResponse
	(*ListTradesRequest)(nil),                       // 58: tdex_daemon.v2.ListTradesRequest
	(*ListTradesResponse)(nil),                      // 59: tdex_daemon.v2.ListTradesResponse
	(*ListUtxosRequest)(nil),                        // 60: tdex_daemon.v2.ListUtxosRequest
	(*ListUtxosResponse)(nil),                       // 61: tdex_daemon.v2.ListUtxosResponse
	(*AddWebhookRequest)(nil),                       // 62: tdex_daemon.v2.AddWebhookRequest
	(*AddWebhookResponse)(nil),                      // 63: tdex_daemon.v2.AddWebhookResponse
	(*RemoveWebhookRequest)(nil),                    // 64: tdex_daemon.v2.RemoveWebhookRequest
	(*RemoveWebhookResponse)(nil),                   // 65: tdex_daemon.v2.RemoveWebhookResponse
	(*ListWebhooksRequest)(nil),                     // 66: tdex_daemon.v2.ListWebhooksRequest
	(*ListWebhooksResponse)(nil),                    // 67: tdex_daemon.v2.ListWebhooksResponse
	(*ListDepositsRequest)(nil),                     // 68: tdex_daemon.v2.ListDepositsRequest
	(*ListDepositsResponse)(nil),                    // 69: tdex_daemon.v2.ListDepositsResponse
	(*ListWithdrawalsRequest)(nil),                  // 70: tdex_daemon.v2.ListWithdrawalsRequest
	(*ListWithdrawalsResponse)(nil),                 // 71: tdex_daemon.v2.ListWithdrawalsResponse
	nil,                                             // 72: tdex_daemon.v2.GetFeeFragmenterBalanceResponse.BalanceEntry
	nil,                                             // 73: tdex_daemon.v2.GetMarketFragmenterBalanceResponse.BalanceEntry
	(*Balance)(nil),                                 // 74: tdex_daemon.v2.Balance
	(*TxOutput)(nil),                                // 75: tdex_daemon.v2.TxOutput
	(*v2.Market)(nil),                               // 76: tdex.v2.Market
	(*v2.MarketFee)(nil),                            // 77: tdex.v2.MarketFee
	(*MarketInfo)(nil),                              // 78: tdex_daemon.v2.MarketInfo
	(*TimeRange)(nil),                               // 79: tdex_daemon.v2.TimeRange
	(TimeFrame)(0),                                  // 80: tdex_daemon.v2.TimeFrame
	(*MarketReport)(nil),                            // 81: tdex_daemon.v2.MarketReport
	(*v2.MarketWithFee)(nil),                        // 82: tdex.v2.MarketWithFee
	(*v2.Price)(nil),                                // 83: tdex.v2.Price
	(StrategyType)(0),                               // 84: tdex_daemon.v2.StrategyType
	(*Page)(nil),                                    // 85: tdex_daemon.v2.Page
	(*TradeInfo)(nil),                               // 86: tdex_daemon.v2.TradeInfo
	(*UtxoInfo)(nil),                                // 87: tdex_daemon.v2.UtxoInfo
	(ActionType)(0),                                 // 88: tdex_daemon.v2.ActionType
	(*WebhookInfo)(nil),                             // 89: tdex_daemon.v2.WebhookInfo
	(*Transaction)(nil),                             // 90: tdex_daemon.v2.Transaction
}
var file_tdex_daemon_v2_operator_proto_depIdxs = []int32{
	74, // 0: tdex_daemon.v2.GetFeeBalanceResponse.balance:type_name -> tdex_daemon.v2.Balance
	75, // 1: tdex_daemon.v2.WithdrawFeeRequest.outputs:type_name -> tdex_daemon.v2.TxOutput
	76, // 2: tdex_daemon.v2.NewMarketRequest.market:type_name -> tdex.v2.Market
	77, // 3: tdex_daemon.v2.NewMarketRequest.percentage_fee:type_name -> tdex.v2.MarketFee
	76, // 4: tdex_daemon.v2.GetMarketInfoRequest.market:type_name -> tdex.v2.Market
	78, // 5: tdex_daemon.v2.GetMarketInfoResponse.info:type_name -> tdex_daemon.v2.MarketInfo
	76, // 6: tdex_daemon.v2.DeriveMarketAddressesRequest.market:type_name -> tdex.v2.Market
	76, // 7: tdex_daemon.v2.ListMarketAddressesRequest.market:type_name -> tdex.v2.Market
	76, // 8: tdex_daemon.v2.OpenMarketRequest.market:type_name -> tdex.v2.Market
	76, // 9: tdex_daemon.v2.CloseMarketRequest.market:type_name -> tdex.v2.Market
	76, // 10: tdex_daemon.v2.DropMarketRequest.market:type_name -> tdex.v2.Market
	76, // 11: tdex_daemon.v2.WithdrawMarketRequest.market:type_name -> tdex.v2.Market
	75, // 12: tdex_daemon.v2.WithdrawMarketRequest.outputs:type_name -> tdex_daemon.v2.TxOutput
	76, // 13: tdex_daemon.v2.GetMarketReportRequest.market:type_name -> tdex.v2.Market
	79, // 14: tdex_daemon.v2.GetMarketReportRequest.time_range:type_name -> tdex_daemon.v2.TimeRange
	80, // 15: tdex_daemon.v2.GetMarketReportRequest.time_frame:type_name -> tdex_daemon.v2.TimeFrame
	81, // 16: tdex_daemon.v2.GetMarketReportResponse.report:type_name -> tdex_daemon.v2.MarketReport
	76, // 17: tdex_daemon.v2.UpdateMarketPercentageFeeRequest.market:type_name -> tdex.v2.Market
	77, // 18: tdex_daemon.v2.UpdateMarketPercentageFeeRequest.fee:type_name -> tdex.v2.MarketFee
	82, // 19: tdex_daemon.v2.UpdateMarketPercentageFeeResponse.market_with_fee:type_name -> tdex.v2.MarketWithFee
	76, // 20: tdex_daemon.v2.UpdateMarketFixedFeeRequest.market:type_name -> tdex.v2.Market
	77, // 21: tdex_daemon.v2.UpdateMarketFixedFeeRequest.fee:type_name -> tdex.v2.MarketFee
	82, // 22: tdex_daemon.v2.UpdateMarketFixedFeeResponse.market_with_fee:type_name -> tdex.v2.MarketWithFee
	76, // 23: tdex_daemon.v2.UpdateMarketAssetsPrecisionRequest.market:type_name -> tdex.v2.Market
	76, // 24: tdex_daemon.v2.UpdateMarketPriceRequest.market:type_name -> tdex.v2.Market
	83, // 25: tdex_daemon.v2.UpdateMarketPriceRequest.price:type_name -> tdex.v2.Price
	76, // 26: tdex_daemon.v2.UpdateMarketStrategyRequest.market:type_name -> tdex.v2.Market
	84, // 27: tdex_daemon.v2.UpdateMarketStrategyRequest.strategy_type:type_name -> tdex_daemon.v2.StrategyType
	72, // 28: tdex_daemon.v2.GetFeeFragmenterBalanceResponse.balance:type_name -> tdex_daemon.v2.GetFeeFragmenterBalanceResponse.BalanceEntry
	75, // 29: tdex_daemon.v2.WithdrawFeeFragmenterRequest.outputs:type_name -> tdex_daemon.v2.TxOutput
	73, // 30: tdex_daemon.v2.GetMarketFragmenterBalanceResponse.balance:type_name -> tdex_daemon.v2.GetMarketFragmenterBalanceResponse.BalanceEntry
	76, // 31: tdex_daemon.v2.MarketFragmenterSplitFundsRequest.market:type_name -> tdex.v2.Market
	75, // 32: tdex_daemon.v2.WithdrawMarketFragmenterRequest.outputs:type_name -> tdex_daemon.v2.TxOutput
	78, // 33: tdex_daemon.v2.ListMarketsResponse.markets:type_name -> tdex_daemon.v2.MarketInfo
	76, // 34: tdex_daemon.v2.ListTradesRequest.market:type_name -> tdex.v2.Market
	85, // 35: tdex_daemon.v2.ListTradesRequest.page:type_name -> tdex_daemon.v2.Page
	86, // 36: tdex_daemon.v2.ListTradesResponse.trades:type_name -> tdex_daemon.v2.TradeInfo
	85, // 37: tdex_daemon.v2.ListUtxosRequest.page:type_name -> tdex_daemon.v2.Page
	87, // 38: tdex_daemon.v2.ListUtxosResponse.spendable_utxos:type_name -> tdex_daemon.v2.UtxoInfo
	87, // 39: tdex_daemon.v2.ListUtxosResponse.locked_utxos:type_name -> tdex_daemon.v2.UtxoInfo
	88, // 40: tdex_daemon.v2.AddWebhookRequest.action:type_name -> tdex_daemon.v2.ActionType
	88, // 41: tdex_daemon.v2.ListWebhooksRequest.action:type_name -> tdex_daemon.v2.ActionType
	89, // 42: tdex_daemon.v2.ListWebhooksResponse.webhook_info:type_name -> tdex_daemon.v2.WebhookInfo
	85, // 43: tdex_daemon.v2.ListDepositsRequest.page:type_name -> tdex_daemon.v2.Page
	90, // 44: tdex_daemon.v2.ListDepositsResponse.deposits:type_name -> tdex_daemon.v2.Transaction
	85, // 45: tdex_daemon.v2.ListWithdrawalsRequest.page:type_name -> tdex_daemon.v2.Page
	90, // 46: tdex_daemon.v2.ListWithdrawalsResponse.withdrawals:type_name -> tdex_daemon.v2.Transaction
	74, // 47: tdex_daemon.v2.GetFeeFragmenterBalanceResponse.BalanceEntry.value:type_name -> tdex_daemon.v2.Balance
	74, // 48: tdex_daemon.v2.GetMarketFragmenterBalanceResponse.BalanceEntry.value:type_name -> tdex_daemon.v2.Balance
	0,  // 49: tdex_daemon.v2.OperatorService.DeriveFeeAddresses:input_type -> tdex_daemon.v2.DeriveFeeAddressesRequest
	2,  // 50: tdex_daemon.v2.OperatorService.ListFeeAddresses:input_type -> tdex_daemon.v2.ListFeeAddressesRequest
	4,  // 51: tdex_daemon.v2.OperatorService.GetFeeBalance:input_type -> tdex_daemon.v2.GetFeeBalanceRequest
	6,  // 52: tdex_daemon.v2.OperatorService.WithdrawFee:input_type -> tdex_daemon.v2.WithdrawFeeRequest
	8,  // 53: tdex_daemon.v2.OperatorService.NewMarket:input_type -> tdex_daemon.v2.NewMarketRequest
	10, // 54: tdex_daemon.v2.OperatorService.GetMarketInfo:input_type -> tdex_daemon.v2.GetMarketInfoRequest
	12, // 55: tdex_daemon.v2.OperatorService.DeriveMarketAddresses:input_type -> tdex_daemon.v2.DeriveMarketAddressesRequest
	14, // 56: tdex_daemon.v2.OperatorService.ListMarketAddresses:input_type -> tdex_daemon.v2.ListMarketAddressesRequest
	16, // 57: tdex_daemon.v2.OperatorService.OpenMarket:input_type -> tdex_daemon.v2.OpenMarketRequest
	18, // 58: tdex_daemon.v2.OperatorService.CloseMarket:input_type -> tdex_daemon.v2.CloseMarketRequest
	20, // 59: tdex_daemon.v2.OperatorService.DropMarket:input_type -> tdex_daemon.v2.DropMarketRequest
	22, // 60: tdex_daemon.v2.OperatorService.WithdrawMarket:input_type -> tdex_daemon.v2.WithdrawMarketRequest
	24, // 61: tdex_daemon.v2.OperatorService.GetMarketReport:input_type -> tdex_daemon.v2.GetMarketReportRequest
	26, // 62: tdex_daemon.v2.OperatorService.UpdateMarketPercentageFee:input_type -> tdex_daemon.v2.UpdateMarketPercentageFeeRequest
	28, // 63: tdex_daemon.v2.OperatorService.UpdateMarketFixedFee:input_type -> tdex_daemon.v2.UpdateMarketFixedFeeRequest
	30, // 64: tdex_daemon.v2.OperatorService.UpdateMarketAssetsPrecision:input_type -> tdex_daemon.v2.UpdateMarketAssetsPrecisionRequest
	32, // 65: tdex_daemon.v2.OperatorService.UpdateMarketPrice:input_type -> tdex_daemon.v2.UpdateMarketPriceRequest
	34, // 66: tdex_daemon.v2.OperatorService.UpdateMarketStrategy:input_type -> tdex_daemon.v2.UpdateMarketStrategyRequest
	36, // 67: tdex_daemon.v2.OperatorService.DeriveFeeFragmenterAddresses:input_type -> tdex_daemon.v2.DeriveFeeFragmenterAddressesRequest
	38, // 68: tdex_daemon.v2.OperatorService.ListFeeFragmenterAddresses:input_type -> tdex_daemon.v2.ListFeeFragmenterAddressesRequest
	40, // 69: tdex_daemon.v2.OperatorService.GetFeeFragmenterBalance:input_type -> tdex_daemon.v2.GetFeeFragmenterBalanceRequest
	42, // 70: tdex_daemon.v2.OperatorService.FeeFragmenterSplitFunds:input_type -> tdex_daemon.v2.FeeFragmenterSplitFundsRequest
	44, // 71: tdex_daemon.v2.OperatorService.WithdrawFeeFragmenter:input_type -> tdex_daemon.v2.WithdrawFeeFragmenterRequest
	46, // 72: tdex_daemon.v2.OperatorService.DeriveMarketFragmenterAddresses:input_type -> tdex_daemon.v2.DeriveMarketFragmenterAddressesRequest
	48, // 73: tdex_daemon.v2.OperatorService.ListMarketFragmenterAddresses:input_type -> tdex_daemon.v2.ListMarketFragmenterAddressesRequest
	50, // 74: tdex_daemon.v2.OperatorService.GetMarketFragmenterBalance:input_type -> tdex_daemon.v2.GetMarketFragmenterBalanceRequest
	52, // 75: tdex_daemon.v2.OperatorService.MarketFragmenterSplitFunds:input_type -> tdex_daemon.v2.MarketFragmenterSplitFundsRequest
	54, // 76: tdex_daemon.v2.OperatorService.WithdrawMarketFragmenter:input_type -> tdex_daemon.v2.WithdrawMarketFragmenterRequest
	56, // 77: tdex_daemon.v2.OperatorService.ListMarkets:input_type -> tdex_daemon.v2.ListMarketsRequest
	58, // 78: tdex_daemon.v2.OperatorService.ListTrades:input_type -> tdex_daemon.v2.ListTradesRequest
	60, // 79: tdex_daemon.v2.OperatorService.ListUtxos:input_type -> tdex_daemon.v2.ListUtxosRequest
	62, // 80: tdex_daemon.v2.OperatorService.AddWebhook:input_type -> tdex_daemon.v2.AddWebhookRequest
	64, // 81: tdex_daemon.v2.OperatorService.RemoveWebhook:input_type -> tdex_daemon.v2.RemoveWebhookRequest
	66, // 82: tdex_daemon.v2.OperatorService.ListWebhooks:input_type -> tdex_daemon.v2.ListWebhooksRequest
	68, // 83: tdex_daemon.v2.OperatorService.ListDeposits:input_type -> tdex_daemon.v2.ListDepositsRequest
	70, // 84: tdex_daemon.v2.OperatorService.ListWithdrawals:input_type -> tdex_daemon.v2.ListWithdrawalsRequest
	1,  // 85: tdex_daemon.v2.OperatorService.DeriveFeeAddresses:output_type -> tdex_daemon.v2.DeriveFeeAddressesResponse
	3,  // 86: tdex_daemon.v2.OperatorService.ListFeeAddresses:output_type -> tdex_daemon.v2.ListFeeAddressesResponse
	5,  // 87: tdex_daemon.v2.OperatorService.GetFeeBalance:output_type -> tdex_daemon.v2.GetFeeBalanceResponse
	7,  // 88: tdex_daemon.v2.OperatorService.WithdrawFee:output_type -> tdex_daemon.v2.WithdrawFeeResponse
	9,  // 89: tdex_daemon.v2.OperatorService.NewMarket:output_type -> tdex_daemon.v2.NewMarketResponse
	11, // 90: tdex_daemon.v2.OperatorService.GetMarketInfo:output_type -> tdex_daemon.v2.GetMarketInfoResponse
	13, // 91: tdex_daemon.v2.OperatorService.DeriveMarketAddresses:output_type -> tdex_daemon.v2.DeriveMarketAddressesResponse
	15, // 92: tdex_daemon.v2.OperatorService.ListMarketAddresses:output_type -> tdex_daemon.v2.ListMarketAddressesResponse
	17, // 93: tdex_daemon.v2.OperatorService.OpenMarket:output_type -> tdex_daemon.v2.OpenMarketResponse
	19, // 94: tdex_daemon.v2.OperatorService.CloseMarket:output_type -> tdex_daemon.v2.CloseMarketResponse
	21, // 95: tdex_daemon.v2.OperatorService.DropMarket:output_type -> tdex_daemon.v2.DropMarketResponse
	23, // 96: tdex_daemon.v2.OperatorService.WithdrawMarket:output_type -> tdex_daemon.v2.WithdrawMarketResponse
	25, // 97: tdex_daemon.v2.OperatorService.GetMarketReport:output_type -> tdex_daemon.v2.GetMarketReportResponse
	27, // 98: tdex_daemon.v2.OperatorService.UpdateMarketPercentageFee:output_type -> tdex_daemon.v2.UpdateMarketPercentageFeeResponse
	29, // 99: tdex_daemon.v2.OperatorService.UpdateMarketFixedFee:output_type -> tdex_daemon.v2.UpdateMarketFixedFeeResponse
	31, // 100: tdex_daemon.v2.OperatorService.UpdateMarketAssetsPrecision:output_type -> tdex_daemon.v2.UpdateMarketAssetsPrecisionResponse
	33, // 101: tdex_daemon.v2.OperatorService.UpdateMarketPrice:output_type -> tdex_daemon.v2.UpdateMarketPriceResponse
	35, // 102: tdex_daemon.v2.OperatorService.UpdateMarketStrategy:output_type -> tdex_daemon.v2.UpdateMarketStrategyResponse
	37, // 103: tdex_daemon.v2.OperatorService.DeriveFeeFragmenterAddresses:output_type -> tdex_daemon.v2.DeriveFeeFragmenterAddressesResponse
	39, // 104: tdex_daemon.v2.OperatorService.ListFeeFragmenterAddresses:output_type -> tdex_daemon.v2.ListFeeFragmenterAddressesResponse
	41, // 105: tdex_daemon.v2.OperatorService.GetFeeFragmenterBalance:output_type -> tdex_daemon.v2.GetFeeFragmenterBalanceResponse
	43, // 106: tdex_daemon.v2.OperatorService.FeeFragmenterSplitFunds:output_type -> tdex_daemon.v2.FeeFragmenterSplitFundsResponse
	45, // 107: tdex_daemon.v2.OperatorService.WithdrawFeeFragmenter:output_type -> tdex_daemon.v2.WithdrawFeeFragmenterResponse
	47, // 108: tdex_daemon.v2.OperatorService.DeriveMarketFragmenterAddresses:output_type -> tdex_daemon.v2.DeriveMarketFragmenterAddressesResponse
	49, // 109: tdex_daemon.v2.OperatorService.ListMarketFragmenterAddresses:output_type -> tdex_daemon.v2.ListMarketFragmenterAddressesResponse
	51, // 110: tdex_daemon.v2.OperatorService.GetMarketFragmenterBalance:output_type -> tdex_daemon.v2.GetMarketFragmenterBalanceResponse
	53, // 111: tdex_daemon.v2.OperatorService.MarketFragmenterSplitFunds:output_type -> tdex_daemon.v2.MarketFragmenterSplitFundsResponse
	55, // 112: tdex_daemon.v2.OperatorService.WithdrawMarketFragmenter:output_type -> tdex_daemon.v2.WithdrawMarketFragmenterResponse
	57, // 113: tdex_daemon.v2.OperatorService.ListMarkets:output_type -> tdex_daemon.v2.ListMarketsResponse
	59, // 114: tdex_daemon.v2.OperatorService.ListTrades:output_type -> tdex_daemon.v2.ListTradesResponse
	61, // 115: tdex_daemon.v2.OperatorService.ListUtxos:output_type -> tdex_daemon.v2.ListUtxosResponse
	63, // 116: tdex_daemon.v2.OperatorService.AddWebhook:output_type -> tdex_daemon.v2.AddWebhookResponse
	65, // 117: tdex_daemon.v2.OperatorService.RemoveWebhook:output_type -> tdex_daemon.v2.RemoveWebhookResponse
	67, // 118: tdex_daemon.v2.OperatorService.ListWebhooks:output_type -> tdex_daemon.v2.ListWebhooksResponse
	69, // 119: tdex_daemon.v2.OperatorService.ListDeposits:output_type -> tdex_daemon.v2.ListDepositsResponse
	71, // 120: tdex_daemon.v2.OperatorService.ListWithdrawals:output_type -> tdex_daemon.v2.ListWithdrawalsResponse
	85, // [85:121] is the sub-list for method output_type
	49, // [49:85] is the sub-list for method input_type
	49, // [49:49] is the sub-list for extension type_name
	49, // [49:49] is the sub-list for extension extendee
	0,  // [0:49] is the sub-list for field type_name
}

func init() { file_tdex_daemon_v2_operator_proto_init() }
func file_tdex_daemon_v2_operator_proto_init() {
	if File_tdex_daemon_v2_operator_proto != nil {
		return
	}
	file_tdex_daemon_v2_types_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_tdex_daemon_v2_operator_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeriveFeeAddressesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tdex_daemon_v2_operator_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeriveFeeAddressesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tdex_daemon_v2_operator_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListFeeAddressesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tdex_daemon_v2_operator_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListFeeAddressesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tdex_daemon_v2_operator_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFeeBalanceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tdex_daemon_v2_operator_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFeeBalanceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tdex_daemon_v2_operator_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WithdrawFeeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tdex_daemon_v2_operator_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WithdrawFeeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tdex_daemon_v2_operator_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NewMarketRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tdex_daemon_v2_operator_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NewMarketResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tdex_daemon_v2_operator_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMarketInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tdex_daemon_v2_operator_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMarketInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tdex_daemon_v2_operator_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeriveMarketAddressesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tdex_daemon_v2_operator_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeriveMarketAddressesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tdex_daemon_v2_operator_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListMarketAddressesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tdex_daemon_v2_operator_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListMarketAddressesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tdex_daemon_v2_operator_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OpenMarketRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tdex_daemon_v2_operator_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OpenMarketResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tdex_daemon_v2_operator_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CloseMarketRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tdex_daemon_v2_operator_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CloseMarketResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tdex_daemon_v2_operator_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DropMarketRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tdex_daemon_v2_operator_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DropMarketResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tdex_daemon_v2_operator_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WithdrawMarketRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tdex_daemon_v2_operator_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WithdrawMarketResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tdex_daemon_v2_operator_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMarketReportRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tdex_daemon_v2_operator_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMarketReportResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tdex_daemon_v2_operator_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateMarketPercentageFeeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tdex_daemon_v2_operator_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateMarketPercentageFeeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tdex_daemon_v2_operator_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateMarketFixedFeeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tdex_daemon_v2_operator_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateMarketFixedFeeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tdex_daemon_v2_operator_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateMarketAssetsPrecisionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tdex_daemon_v2_operator_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateMarketAssetsPrecisionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tdex_daemon_v2_operator_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateMarketPriceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tdex_daemon_v2_operator_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateMarketPriceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tdex_daemon_v2_operator_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateMarketStrategyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tdex_daemon_v2_operator_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateMarketStrategyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tdex_daemon_v2_operator_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeriveFeeFragmenterAddressesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tdex_daemon_v2_operator_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeriveFeeFragmenterAddressesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tdex_daemon_v2_operator_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListFeeFragmenterAddressesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tdex_daemon_v2_operator_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListFeeFragmenterAddressesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tdex_daemon_v2_operator_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFeeFragmenterBalanceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tdex_daemon_v2_operator_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFeeFragmenterBalanceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tdex_daemon_v2_operator_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FeeFragmenterSplitFundsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tdex_daemon_v2_operator_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FeeFragmenterSplitFundsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tdex_daemon_v2_operator_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WithdrawFeeFragmenterRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tdex_daemon_v2_operator_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WithdrawFeeFragmenterResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tdex_daemon_v2_operator_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeriveMarketFragmenterAddressesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tdex_daemon_v2_operator_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeriveMarketFragmenterAddressesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tdex_daemon_v2_operator_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListMarketFragmenterAddressesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tdex_daemon_v2_operator_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListMarketFragmenterAddressesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tdex_daemon_v2_operator_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMarketFragmenterBalanceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tdex_daemon_v2_operator_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMarketFragmenterBalanceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tdex_daemon_v2_operator_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MarketFragmenterSplitFundsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tdex_daemon_v2_operator_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MarketFragmenterSplitFundsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tdex_daemon_v2_operator_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WithdrawMarketFragmenterRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tdex_daemon_v2_operator_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WithdrawMarketFragmenterResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tdex_daemon_v2_operator_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListMarketsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tdex_daemon_v2_operator_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListMarketsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tdex_daemon_v2_operator_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListTradesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tdex_daemon_v2_operator_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListTradesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tdex_daemon_v2_operator_proto_msgTypes[60].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListUtxosRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tdex_daemon_v2_operator_proto_msgTypes[61].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListUtxosResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tdex_daemon_v2_operator_proto_msgTypes[62].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddWebhookRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tdex_daemon_v2_operator_proto_msgTypes[63].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddWebhookResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tdex_daemon_v2_operator_proto_msgTypes[64].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveWebhookRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tdex_daemon_v2_operator_proto_msgTypes[65].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveWebhookResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tdex_daemon_v2_operator_proto_msgTypes[66].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListWebhooksRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tdex_daemon_v2_operator_proto_msgTypes[67].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListWebhooksResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tdex_daemon_v2_operator_proto_msgTypes[68].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListDepositsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tdex_daemon_v2_operator_proto_msgTypes[69].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListDepositsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tdex_daemon_v2_operator_proto_msgTypes[70].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListWithdrawalsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tdex_daemon_v2_operator_proto_msgTypes[71].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListWithdrawalsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_tdex_daemon_v2_operator_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   74,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_tdex_daemon_v2_operator_proto_goTypes,
		DependencyIndexes: file_tdex_daemon_v2_operator_proto_depIdxs,
		MessageInfos:      file_tdex_daemon_v2_operator_proto_msgTypes,
	}.Build()
	File_tdex_daemon_v2_operator_proto = out.File
	file_tdex_daemon_v2_operator_proto_rawDesc = nil
	file_tdex_daemon_v2_operator_proto_goTypes = nil
	file_tdex_daemon_v2_operator_proto_depIdxs = nil
}
