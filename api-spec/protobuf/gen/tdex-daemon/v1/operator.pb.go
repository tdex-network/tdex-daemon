// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        (unknown)
// source: tdex-daemon/v1/operator.proto

package tdex_daemonv1

import (
	v1 "github.com/tdex-network/tdex-daemon/api-spec/protobuf/gen/tdex/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetInfoRequest) Reset() {
	*x = GetInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tdex_daemon_v1_operator_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetInfoRequest) ProtoMessage() {}

func (x *GetInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tdex_daemon_v1_operator_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetInfoRequest.ProtoReflect.Descriptor instead.
func (*GetInfoRequest) Descriptor() ([]byte, []int) {
	return file_tdex_daemon_v1_operator_proto_rawDescGZIP(), []int{0}
}

type GetInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The root path of the wallet of the daemon.
	RootPath string `protobuf:"bytes,1,opt,name=root_path,json=rootPath,proto3" json:"root_path,omitempty"`
	// The SLIP-77 master blinding key from which every keypair is derived.
	MasterBlindingKey string `protobuf:"bytes,2,opt,name=master_blinding_key,json=masterBlindingKey,proto3" json:"master_blinding_key,omitempty"`
	// The list of info related to every account.
	AccountInfo []*AccountInfo `protobuf:"bytes,3,rep,name=account_info,json=accountInfo,proto3" json:"account_info,omitempty"`
	// Network daemon running on
	Network string `protobuf:"bytes,4,opt,name=network,proto3" json:"network,omitempty"`
	// Daemon build information
	BuildData *BuildInfo `protobuf:"bytes,5,opt,name=build_data,json=buildData,proto3" json:"build_data,omitempty"`
	// Fixed base asset
	FixedBaseAsset string `protobuf:"bytes,6,opt,name=fixed_base_asset,json=fixedBaseAsset,proto3" json:"fixed_base_asset,omitempty"`
	// Fixed quote asset
	FixedQuoteAsset string `protobuf:"bytes,7,opt,name=fixed_quote_asset,json=fixedQuoteAsset,proto3" json:"fixed_quote_asset,omitempty"`
}

func (x *GetInfoResponse) Reset() {
	*x = GetInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tdex_daemon_v1_operator_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetInfoResponse) ProtoMessage() {}

func (x *GetInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tdex_daemon_v1_operator_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetInfoResponse.ProtoReflect.Descriptor instead.
func (*GetInfoResponse) Descriptor() ([]byte, []int) {
	return file_tdex_daemon_v1_operator_proto_rawDescGZIP(), []int{1}
}

func (x *GetInfoResponse) GetRootPath() string {
	if x != nil {
		return x.RootPath
	}
	return ""
}

func (x *GetInfoResponse) GetMasterBlindingKey() string {
	if x != nil {
		return x.MasterBlindingKey
	}
	return ""
}

func (x *GetInfoResponse) GetAccountInfo() []*AccountInfo {
	if x != nil {
		return x.AccountInfo
	}
	return nil
}

func (x *GetInfoResponse) GetNetwork() string {
	if x != nil {
		return x.Network
	}
	return ""
}

func (x *GetInfoResponse) GetBuildData() *BuildInfo {
	if x != nil {
		return x.BuildData
	}
	return nil
}

func (x *GetInfoResponse) GetFixedBaseAsset() string {
	if x != nil {
		return x.FixedBaseAsset
	}
	return ""
}

func (x *GetInfoResponse) GetFixedQuoteAsset() string {
	if x != nil {
		return x.FixedQuoteAsset
	}
	return ""
}

type BuildInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Version
	Version string `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
	// Commit
	Commit string `protobuf:"bytes,2,opt,name=commit,proto3" json:"commit,omitempty"`
	// Date
	Date string `protobuf:"bytes,3,opt,name=date,proto3" json:"date,omitempty"`
}

func (x *BuildInfo) Reset() {
	*x = BuildInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tdex_daemon_v1_operator_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BuildInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BuildInfo) ProtoMessage() {}

func (x *BuildInfo) ProtoReflect() protoreflect.Message {
	mi := &file_tdex_daemon_v1_operator_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BuildInfo.ProtoReflect.Descriptor instead.
func (*BuildInfo) Descriptor() ([]byte, []int) {
	return file_tdex_daemon_v1_operator_proto_rawDescGZIP(), []int{2}
}

func (x *BuildInfo) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *BuildInfo) GetCommit() string {
	if x != nil {
		return x.Commit
	}
	return ""
}

func (x *BuildInfo) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

type GetFeeAddressRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The number of addresses to generate.
	NumOfAddresses int64 `protobuf:"varint,1,opt,name=num_of_addresses,json=numOfAddresses,proto3" json:"num_of_addresses,omitempty"`
}

func (x *GetFeeAddressRequest) Reset() {
	*x = GetFeeAddressRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tdex_daemon_v1_operator_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFeeAddressRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFeeAddressRequest) ProtoMessage() {}

func (x *GetFeeAddressRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tdex_daemon_v1_operator_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFeeAddressRequest.ProtoReflect.Descriptor instead.
func (*GetFeeAddressRequest) Descriptor() ([]byte, []int) {
	return file_tdex_daemon_v1_operator_proto_rawDescGZIP(), []int{3}
}

func (x *GetFeeAddressRequest) GetNumOfAddresses() int64 {
	if x != nil {
		return x.NumOfAddresses
	}
	return 0
}

type GetFeeAddressResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The list of new confidential addresses and related private blinding keys.
	AddressWithBlindingKey []*AddressWithBlindingKey `protobuf:"bytes,1,rep,name=address_with_blinding_key,json=addressWithBlindingKey,proto3" json:"address_with_blinding_key,omitempty"`
}

func (x *GetFeeAddressResponse) Reset() {
	*x = GetFeeAddressResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tdex_daemon_v1_operator_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFeeAddressResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFeeAddressResponse) ProtoMessage() {}

func (x *GetFeeAddressResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tdex_daemon_v1_operator_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFeeAddressResponse.ProtoReflect.Descriptor instead.
func (*GetFeeAddressResponse) Descriptor() ([]byte, []int) {
	return file_tdex_daemon_v1_operator_proto_rawDescGZIP(), []int{4}
}

func (x *GetFeeAddressResponse) GetAddressWithBlindingKey() []*AddressWithBlindingKey {
	if x != nil {
		return x.AddressWithBlindingKey
	}
	return nil
}

type ListFeeAddressesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListFeeAddressesRequest) Reset() {
	*x = ListFeeAddressesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tdex_daemon_v1_operator_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListFeeAddressesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListFeeAddressesRequest) ProtoMessage() {}

func (x *ListFeeAddressesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tdex_daemon_v1_operator_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListFeeAddressesRequest.ProtoReflect.Descriptor instead.
func (*ListFeeAddressesRequest) Descriptor() ([]byte, []int) {
	return file_tdex_daemon_v1_operator_proto_rawDescGZIP(), []int{5}
}

type ListFeeAddressesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The list of derived confidential addresses and related private blinding
	// keys.
	AddressWithBlindingKey []*AddressWithBlindingKey `protobuf:"bytes,1,rep,name=address_with_blinding_key,json=addressWithBlindingKey,proto3" json:"address_with_blinding_key,omitempty"`
}

func (x *ListFeeAddressesResponse) Reset() {
	*x = ListFeeAddressesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tdex_daemon_v1_operator_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListFeeAddressesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListFeeAddressesResponse) ProtoMessage() {}

func (x *ListFeeAddressesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tdex_daemon_v1_operator_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListFeeAddressesResponse.ProtoReflect.Descriptor instead.
func (*ListFeeAddressesResponse) Descriptor() ([]byte, []int) {
	return file_tdex_daemon_v1_operator_proto_rawDescGZIP(), []int{6}
}

func (x *ListFeeAddressesResponse) GetAddressWithBlindingKey() []*AddressWithBlindingKey {
	if x != nil {
		return x.AddressWithBlindingKey
	}
	return nil
}

type GetFeeBalanceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetFeeBalanceRequest) Reset() {
	*x = GetFeeBalanceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tdex_daemon_v1_operator_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFeeBalanceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFeeBalanceRequest) ProtoMessage() {}

func (x *GetFeeBalanceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tdex_daemon_v1_operator_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFeeBalanceRequest.ProtoReflect.Descriptor instead.
func (*GetFeeBalanceRequest) Descriptor() ([]byte, []int) {
	return file_tdex_daemon_v1_operator_proto_rawDescGZIP(), []int{7}
}

type GetFeeBalanceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The balance of all unlocked unspents.
	AvailableBalance uint64 `protobuf:"varint,1,opt,name=available_balance,json=availableBalance,proto3" json:"available_balance,omitempty"`
	// The balance of all unspents included those locked.
	TotalBalance uint64 `protobuf:"varint,2,opt,name=total_balance,json=totalBalance,proto3" json:"total_balance,omitempty"`
}

func (x *GetFeeBalanceResponse) Reset() {
	*x = GetFeeBalanceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tdex_daemon_v1_operator_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFeeBalanceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFeeBalanceResponse) ProtoMessage() {}

func (x *GetFeeBalanceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tdex_daemon_v1_operator_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFeeBalanceResponse.ProtoReflect.Descriptor instead.
func (*GetFeeBalanceResponse) Descriptor() ([]byte, []int) {
	return file_tdex_daemon_v1_operator_proto_rawDescGZIP(), []int{8}
}

func (x *GetFeeBalanceResponse) GetAvailableBalance() uint64 {
	if x != nil {
		return x.AvailableBalance
	}
	return 0
}

func (x *GetFeeBalanceResponse) GetTotalBalance() uint64 {
	if x != nil {
		return x.TotalBalance
	}
	return 0
}

type ClaimFeeDepositsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The list of outpoints sent to the fee account address(es).
	// They all must be confirmed, ie. included in blockchain.
	Outpoints []*Outpoint `protobuf:"bytes,1,rep,name=outpoints,proto3" json:"outpoints,omitempty"`
}

func (x *ClaimFeeDepositsRequest) Reset() {
	*x = ClaimFeeDepositsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tdex_daemon_v1_operator_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClaimFeeDepositsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClaimFeeDepositsRequest) ProtoMessage() {}

func (x *ClaimFeeDepositsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tdex_daemon_v1_operator_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClaimFeeDepositsRequest.ProtoReflect.Descriptor instead.
func (*ClaimFeeDepositsRequest) Descriptor() ([]byte, []int) {
	return file_tdex_daemon_v1_operator_proto_rawDescGZIP(), []int{9}
}

func (x *ClaimFeeDepositsRequest) GetOutpoints() []*Outpoint {
	if x != nil {
		return x.Outpoints
	}
	return nil
}

type ClaimFeeDepositsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ClaimFeeDepositsResponse) Reset() {
	*x = ClaimFeeDepositsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tdex_daemon_v1_operator_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClaimFeeDepositsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClaimFeeDepositsResponse) ProtoMessage() {}

func (x *ClaimFeeDepositsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tdex_daemon_v1_operator_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClaimFeeDepositsResponse.ProtoReflect.Descriptor instead.
func (*ClaimFeeDepositsResponse) Descriptor() ([]byte, []int) {
	return file_tdex_daemon_v1_operator_proto_rawDescGZIP(), []int{10}
}

type WithdrawFeeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The amount of L-BTC to widthdraw expressed in Satoshi.
	Amount uint64 `protobuf:"varint,1,opt,name=amount,proto3" json:"amount,omitempty"`
	// The number of millisatoshis per byte that should be paid for network fees.
	MillisatsPerByte uint64 `protobuf:"varint,2,opt,name=millisats_per_byte,json=millisatsPerByte,proto3" json:"millisats_per_byte,omitempty"`
	// The address to send the funds to.
	Address string `protobuf:"bytes,3,opt,name=address,proto3" json:"address,omitempty"`
	// The asset to withdraw. To leave blank for LBTC. This is aimed for
	// those cases where the operator deposits funds with assets diffent from LBTC
	// into the Fee account and than needs to withdraw'em.
	Asset string `protobuf:"bytes,4,opt,name=asset,proto3" json:"asset,omitempty"`
	// The password that unlocks the internal wallet.
	Password string `protobuf:"bytes,5,opt,name=password,proto3" json:"password,omitempty"`
}

func (x *WithdrawFeeRequest) Reset() {
	*x = WithdrawFeeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tdex_daemon_v1_operator_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WithdrawFeeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WithdrawFeeRequest) ProtoMessage() {}

func (x *WithdrawFeeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tdex_daemon_v1_operator_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WithdrawFeeRequest.ProtoReflect.Descriptor instead.
func (*WithdrawFeeRequest) Descriptor() ([]byte, []int) {
	return file_tdex_daemon_v1_operator_proto_rawDescGZIP(), []int{11}
}

func (x *WithdrawFeeRequest) GetAmount() uint64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *WithdrawFeeRequest) GetMillisatsPerByte() uint64 {
	if x != nil {
		return x.MillisatsPerByte
	}
	return 0
}

func (x *WithdrawFeeRequest) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *WithdrawFeeRequest) GetAsset() string {
	if x != nil {
		return x.Asset
	}
	return ""
}

func (x *WithdrawFeeRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

type WithdrawFeeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The transaction hash in mempool/blockchain.
	Txid string `protobuf:"bytes,1,opt,name=txid,proto3" json:"txid,omitempty"`
}

func (x *WithdrawFeeResponse) Reset() {
	*x = WithdrawFeeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tdex_daemon_v1_operator_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WithdrawFeeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WithdrawFeeResponse) ProtoMessage() {}

func (x *WithdrawFeeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tdex_daemon_v1_operator_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WithdrawFeeResponse.ProtoReflect.Descriptor instead.
func (*WithdrawFeeResponse) Descriptor() ([]byte, []int) {
	return file_tdex_daemon_v1_operator_proto_rawDescGZIP(), []int{12}
}

func (x *WithdrawFeeResponse) GetTxid() string {
	if x != nil {
		return x.Txid
	}
	return ""
}

type NewMarketRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The asset pair for which creating a new account in the daemon's wallet.
	Market *v1.Market `protobuf:"bytes,1,opt,name=market,proto3" json:"market,omitempty"`
	// The precision of the base asset.
	BaseAssetPrecision uint32 `protobuf:"varint,2,opt,name=base_asset_precision,json=baseAssetPrecision,proto3" json:"base_asset_precision,omitempty"`
	// The precision of the quote asset.
	QuoteAssetPrecision uint32 `protobuf:"varint,3,opt,name=quote_asset_precision,json=quoteAssetPrecision,proto3" json:"quote_asset_precision,omitempty"`
}

func (x *NewMarketRequest) Reset() {
	*x = NewMarketRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tdex_daemon_v1_operator_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewMarketRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewMarketRequest) ProtoMessage() {}

func (x *NewMarketRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tdex_daemon_v1_operator_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewMarketRequest.ProtoReflect.Descriptor instead.
func (*NewMarketRequest) Descriptor() ([]byte, []int) {
	return file_tdex_daemon_v1_operator_proto_rawDescGZIP(), []int{13}
}

func (x *NewMarketRequest) GetMarket() *v1.Market {
	if x != nil {
		return x.Market
	}
	return nil
}

func (x *NewMarketRequest) GetBaseAssetPrecision() uint32 {
	if x != nil {
		return x.BaseAssetPrecision
	}
	return 0
}

func (x *NewMarketRequest) GetQuoteAssetPrecision() uint32 {
	if x != nil {
		return x.QuoteAssetPrecision
	}
	return 0
}

type NewMarketResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *NewMarketResponse) Reset() {
	*x = NewMarketResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tdex_daemon_v1_operator_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewMarketResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewMarketResponse) ProtoMessage() {}

func (x *NewMarketResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tdex_daemon_v1_operator_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewMarketResponse.ProtoReflect.Descriptor instead.
func (*NewMarketResponse) Descriptor() ([]byte, []int) {
	return file_tdex_daemon_v1_operator_proto_rawDescGZIP(), []int{14}
}

type GetMarketInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Market *v1.Market `protobuf:"bytes,1,opt,name=market,proto3" json:"market,omitempty"`
}

func (x *GetMarketInfoRequest) Reset() {
	*x = GetMarketInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tdex_daemon_v1_operator_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMarketInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMarketInfoRequest) ProtoMessage() {}

func (x *GetMarketInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tdex_daemon_v1_operator_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMarketInfoRequest.ProtoReflect.Descriptor instead.
func (*GetMarketInfoRequest) Descriptor() ([]byte, []int) {
	return file_tdex_daemon_v1_operator_proto_rawDescGZIP(), []int{15}
}

func (x *GetMarketInfoRequest) GetMarket() *v1.Market {
	if x != nil {
		return x.Market
	}
	return nil
}

type GetMarketInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *MarketInfo `protobuf:"bytes,1,opt,name=info,proto3" json:"info,omitempty"`
}

func (x *GetMarketInfoResponse) Reset() {
	*x = GetMarketInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tdex_daemon_v1_operator_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMarketInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMarketInfoResponse) ProtoMessage() {}

func (x *GetMarketInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tdex_daemon_v1_operator_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMarketInfoResponse.ProtoReflect.Descriptor instead.
func (*GetMarketInfoResponse) Descriptor() ([]byte, []int) {
	return file_tdex_daemon_v1_operator_proto_rawDescGZIP(), []int{16}
}

func (x *GetMarketInfoResponse) GetInfo() *MarketInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

type GetMarketAddressRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The market for which deriving new addresses.
	Market *v1.Market `protobuf:"bytes,1,opt,name=market,proto3" json:"market,omitempty"`
	// The number of addresses to generate.
	NumOfAddresses int64 `protobuf:"varint,2,opt,name=num_of_addresses,json=numOfAddresses,proto3" json:"num_of_addresses,omitempty"`
}

func (x *GetMarketAddressRequest) Reset() {
	*x = GetMarketAddressRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tdex_daemon_v1_operator_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMarketAddressRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMarketAddressRequest) ProtoMessage() {}

func (x *GetMarketAddressRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tdex_daemon_v1_operator_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMarketAddressRequest.ProtoReflect.Descriptor instead.
func (*GetMarketAddressRequest) Descriptor() ([]byte, []int) {
	return file_tdex_daemon_v1_operator_proto_rawDescGZIP(), []int{17}
}

func (x *GetMarketAddressRequest) GetMarket() *v1.Market {
	if x != nil {
		return x.Market
	}
	return nil
}

func (x *GetMarketAddressRequest) GetNumOfAddresses() int64 {
	if x != nil {
		return x.NumOfAddresses
	}
	return 0
}

type GetMarketAddressResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The list of new confidential addresses and related private blinding keys.
	AddressWithBlindingKey []*AddressWithBlindingKey `protobuf:"bytes,1,rep,name=address_with_blinding_key,json=addressWithBlindingKey,proto3" json:"address_with_blinding_key,omitempty"`
}

func (x *GetMarketAddressResponse) Reset() {
	*x = GetMarketAddressResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tdex_daemon_v1_operator_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMarketAddressResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMarketAddressResponse) ProtoMessage() {}

func (x *GetMarketAddressResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tdex_daemon_v1_operator_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMarketAddressResponse.ProtoReflect.Descriptor instead.
func (*GetMarketAddressResponse) Descriptor() ([]byte, []int) {
	return file_tdex_daemon_v1_operator_proto_rawDescGZIP(), []int{18}
}

func (x *GetMarketAddressResponse) GetAddressWithBlindingKey() []*AddressWithBlindingKey {
	if x != nil {
		return x.AddressWithBlindingKey
	}
	return nil
}

type ListMarketAddressesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The Market for which listing all derived addresses.
	Market *v1.Market `protobuf:"bytes,1,opt,name=market,proto3" json:"market,omitempty"`
}

func (x *ListMarketAddressesRequest) Reset() {
	*x = ListMarketAddressesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tdex_daemon_v1_operator_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListMarketAddressesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMarketAddressesRequest) ProtoMessage() {}

func (x *ListMarketAddressesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tdex_daemon_v1_operator_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMarketAddressesRequest.ProtoReflect.Descriptor instead.
func (*ListMarketAddressesRequest) Descriptor() ([]byte, []int) {
	return file_tdex_daemon_v1_operator_proto_rawDescGZIP(), []int{19}
}

func (x *ListMarketAddressesRequest) GetMarket() *v1.Market {
	if x != nil {
		return x.Market
	}
	return nil
}

type ListMarketAddressesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The list of derived confidential addresses and related private blinding
	// keys.
	AddressWithBlindingKey []*AddressWithBlindingKey `protobuf:"bytes,1,rep,name=address_with_blinding_key,json=addressWithBlindingKey,proto3" json:"address_with_blinding_key,omitempty"`
}

func (x *ListMarketAddressesResponse) Reset() {
	*x = ListMarketAddressesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tdex_daemon_v1_operator_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListMarketAddressesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMarketAddressesResponse) ProtoMessage() {}

func (x *ListMarketAddressesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tdex_daemon_v1_operator_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMarketAddressesResponse.ProtoReflect.Descriptor instead.
func (*ListMarketAddressesResponse) Descriptor() ([]byte, []int) {
	return file_tdex_daemon_v1_operator_proto_rawDescGZIP(), []int{20}
}

func (x *ListMarketAddressesResponse) GetAddressWithBlindingKey() []*AddressWithBlindingKey {
	if x != nil {
		return x.AddressWithBlindingKey
	}
	return nil
}

type GetMarketBalanceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The market for which calculating the balance.
	Market *v1.Market `protobuf:"bytes,1,opt,name=market,proto3" json:"market,omitempty"`
}

func (x *GetMarketBalanceRequest) Reset() {
	*x = GetMarketBalanceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tdex_daemon_v1_operator_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMarketBalanceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMarketBalanceRequest) ProtoMessage() {}

func (x *GetMarketBalanceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tdex_daemon_v1_operator_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMarketBalanceRequest.ProtoReflect.Descriptor instead.
func (*GetMarketBalanceRequest) Descriptor() ([]byte, []int) {
	return file_tdex_daemon_v1_operator_proto_rawDescGZIP(), []int{21}
}

func (x *GetMarketBalanceRequest) GetMarket() *v1.Market {
	if x != nil {
		return x.Market
	}
	return nil
}

type GetMarketBalanceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The balance of all unlocked unspents.
	AvailableBalance *v1.Balance `protobuf:"bytes,1,opt,name=available_balance,json=availableBalance,proto3" json:"available_balance,omitempty"`
	// The balance of all unspents included those locked.
	TotalBalance *v1.Balance `protobuf:"bytes,2,opt,name=total_balance,json=totalBalance,proto3" json:"total_balance,omitempty"`
}

func (x *GetMarketBalanceResponse) Reset() {
	*x = GetMarketBalanceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tdex_daemon_v1_operator_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMarketBalanceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMarketBalanceResponse) ProtoMessage() {}

func (x *GetMarketBalanceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tdex_daemon_v1_operator_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMarketBalanceResponse.ProtoReflect.Descriptor instead.
func (*GetMarketBalanceResponse) Descriptor() ([]byte, []int) {
	return file_tdex_daemon_v1_operator_proto_rawDescGZIP(), []int{22}
}

func (x *GetMarketBalanceResponse) GetAvailableBalance() *v1.Balance {
	if x != nil {
		return x.AvailableBalance
	}
	return nil
}

func (x *GetMarketBalanceResponse) GetTotalBalance() *v1.Balance {
	if x != nil {
		return x.TotalBalance
	}
	return nil
}

type ClaimMarketDepositsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The market for which claiming the deposits.
	Market *v1.Market `protobuf:"bytes,1,opt,name=market,proto3" json:"market,omitempty"`
	// The list of outpoints sent to the market address(es).
	// They all must be confirmed, ie. included in blockchain.
	Outpoints []*Outpoint `protobuf:"bytes,2,rep,name=outpoints,proto3" json:"outpoints,omitempty"`
}

func (x *ClaimMarketDepositsRequest) Reset() {
	*x = ClaimMarketDepositsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tdex_daemon_v1_operator_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClaimMarketDepositsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClaimMarketDepositsRequest) ProtoMessage() {}

func (x *ClaimMarketDepositsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tdex_daemon_v1_operator_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClaimMarketDepositsRequest.ProtoReflect.Descriptor instead.
func (*ClaimMarketDepositsRequest) Descriptor() ([]byte, []int) {
	return file_tdex_daemon_v1_operator_proto_rawDescGZIP(), []int{23}
}

func (x *ClaimMarketDepositsRequest) GetMarket() *v1.Market {
	if x != nil {
		return x.Market
	}
	return nil
}

func (x *ClaimMarketDepositsRequest) GetOutpoints() []*Outpoint {
	if x != nil {
		return x.Outpoints
	}
	return nil
}

type ClaimMarketDepositsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ClaimMarketDepositsResponse) Reset() {
	*x = ClaimMarketDepositsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tdex_daemon_v1_operator_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClaimMarketDepositsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClaimMarketDepositsResponse) ProtoMessage() {}

func (x *ClaimMarketDepositsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tdex_daemon_v1_operator_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClaimMarketDepositsResponse.ProtoReflect.Descriptor instead.
func (*ClaimMarketDepositsResponse) Descriptor() ([]byte, []int) {
	return file_tdex_daemon_v1_operator_proto_rawDescGZIP(), []int{24}
}

type OpenMarketRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The market to be made tradable.
	Market *v1.Market `protobuf:"bytes,1,opt,name=market,proto3" json:"market,omitempty"`
}

func (x *OpenMarketRequest) Reset() {
	*x = OpenMarketRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tdex_daemon_v1_operator_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpenMarketRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpenMarketRequest) ProtoMessage() {}

func (x *OpenMarketRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tdex_daemon_v1_operator_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpenMarketRequest.ProtoReflect.Descriptor instead.
func (*OpenMarketRequest) Descriptor() ([]byte, []int) {
	return file_tdex_daemon_v1_operator_proto_rawDescGZIP(), []int{25}
}

func (x *OpenMarketRequest) GetMarket() *v1.Market {
	if x != nil {
		return x.Market
	}
	return nil
}

type OpenMarketResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *OpenMarketResponse) Reset() {
	*x = OpenMarketResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tdex_daemon_v1_operator_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpenMarketResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpenMarketResponse) ProtoMessage() {}

func (x *OpenMarketResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tdex_daemon_v1_operator_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpenMarketResponse.ProtoReflect.Descriptor instead.
func (*OpenMarketResponse) Descriptor() ([]byte, []int) {
	return file_tdex_daemon_v1_operator_proto_rawDescGZIP(), []int{26}
}

type CloseMarketRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The market to be made not tradable.
	Market *v1.Market `protobuf:"bytes,1,opt,name=market,proto3" json:"market,omitempty"`
}

func (x *CloseMarketRequest) Reset() {
	*x = CloseMarketRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tdex_daemon_v1_operator_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CloseMarketRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloseMarketRequest) ProtoMessage() {}

func (x *CloseMarketRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tdex_daemon_v1_operator_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloseMarketRequest.ProtoReflect.Descriptor instead.
func (*CloseMarketRequest) Descriptor() ([]byte, []int) {
	return file_tdex_daemon_v1_operator_proto_rawDescGZIP(), []int{27}
}

func (x *CloseMarketRequest) GetMarket() *v1.Market {
	if x != nil {
		return x.Market
	}
	return nil
}

type CloseMarketResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CloseMarketResponse) Reset() {
	*x = CloseMarketResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tdex_daemon_v1_operator_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CloseMarketResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloseMarketResponse) ProtoMessage() {}

func (x *CloseMarketResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tdex_daemon_v1_operator_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloseMarketResponse.ProtoReflect.Descriptor instead.
func (*CloseMarketResponse) Descriptor() ([]byte, []int) {
	return file_tdex_daemon_v1_operator_proto_rawDescGZIP(), []int{28}
}

type ListMarketsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListMarketsRequest) Reset() {
	*x = ListMarketsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tdex_daemon_v1_operator_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListMarketsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMarketsRequest) ProtoMessage() {}

func (x *ListMarketsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tdex_daemon_v1_operator_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMarketsRequest.ProtoReflect.Descriptor instead.
func (*ListMarketsRequest) Descriptor() ([]byte, []int) {
	return file_tdex_daemon_v1_operator_proto_rawDescGZIP(), []int{29}
}

type ListMarketsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The list of info about all the created markets.
	Markets []*MarketInfo `protobuf:"bytes,1,rep,name=markets,proto3" json:"markets,omitempty"`
}

func (x *ListMarketsResponse) Reset() {
	*x = ListMarketsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tdex_daemon_v1_operator_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListMarketsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMarketsResponse) ProtoMessage() {}

func (x *ListMarketsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tdex_daemon_v1_operator_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMarketsResponse.ProtoReflect.Descriptor instead.
func (*ListMarketsResponse) Descriptor() ([]byte, []int) {
	return file_tdex_daemon_v1_operator_proto_rawDescGZIP(), []int{30}
}

func (x *ListMarketsResponse) GetMarkets() []*MarketInfo {
	if x != nil {
		return x.Markets
	}
	return nil
}

type DropMarketRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Market *v1.Market `protobuf:"bytes,1,opt,name=market,proto3" json:"market,omitempty"`
}

func (x *DropMarketRequest) Reset() {
	*x = DropMarketRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tdex_daemon_v1_operator_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DropMarketRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DropMarketRequest) ProtoMessage() {}

func (x *DropMarketRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tdex_daemon_v1_operator_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DropMarketRequest.ProtoReflect.Descriptor instead.
func (*DropMarketRequest) Descriptor() ([]byte, []int) {
	return file_tdex_daemon_v1_operator_proto_rawDescGZIP(), []int{31}
}

func (x *DropMarketRequest) GetMarket() *v1.Market {
	if x != nil {
		return x.Market
	}
	return nil
}

type DropMarketResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DropMarketResponse) Reset() {
	*x = DropMarketResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tdex_daemon_v1_operator_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DropMarketResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DropMarketResponse) ProtoMessage() {}

func (x *DropMarketResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tdex_daemon_v1_operator_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DropMarketResponse.ProtoReflect.Descriptor instead.
func (*DropMarketResponse) Descriptor() ([]byte, []int) {
	return file_tdex_daemon_v1_operator_proto_rawDescGZIP(), []int{32}
}

type GetMarketCollectedSwapFeesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The marker for which returning the report of collected fees.
	Market *v1.Market `protobuf:"bytes,1,opt,name=market,proto3" json:"market,omitempty"`
	// The page for a paginated reply.
	Page *Page `protobuf:"bytes,2,opt,name=page,proto3" json:"page,omitempty"`
}

func (x *GetMarketCollectedSwapFeesRequest) Reset() {
	*x = GetMarketCollectedSwapFeesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tdex_daemon_v1_operator_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMarketCollectedSwapFeesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMarketCollectedSwapFeesRequest) ProtoMessage() {}

func (x *GetMarketCollectedSwapFeesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tdex_daemon_v1_operator_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMarketCollectedSwapFeesRequest.ProtoReflect.Descriptor instead.
func (*GetMarketCollectedSwapFeesRequest) Descriptor() ([]byte, []int) {
	return file_tdex_daemon_v1_operator_proto_rawDescGZIP(), []int{33}
}

func (x *GetMarketCollectedSwapFeesRequest) GetMarket() *v1.Market {
	if x != nil {
		return x.Market
	}
	return nil
}

func (x *GetMarketCollectedSwapFeesRequest) GetPage() *Page {
	if x != nil {
		return x.Page
	}
	return nil
}

type GetMarketCollectedSwapFeesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The list of info about the collected fees per each trade.
	CollectedFees []*FeeInfo `protobuf:"bytes,1,rep,name=collected_fees,json=collectedFees,proto3" json:"collected_fees,omitempty"`
	// The map of total fees collected per asset.
	TotalCollectedFeesPerAsset map[string]int64 `protobuf:"bytes,2,rep,name=total_collected_fees_per_asset,json=totalCollectedFeesPerAsset,proto3" json:"total_collected_fees_per_asset,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
}

func (x *GetMarketCollectedSwapFeesResponse) Reset() {
	*x = GetMarketCollectedSwapFeesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tdex_daemon_v1_operator_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMarketCollectedSwapFeesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMarketCollectedSwapFeesResponse) ProtoMessage() {}

func (x *GetMarketCollectedSwapFeesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tdex_daemon_v1_operator_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMarketCollectedSwapFeesResponse.ProtoReflect.Descriptor instead.
func (*GetMarketCollectedSwapFeesResponse) Descriptor() ([]byte, []int) {
	return file_tdex_daemon_v1_operator_proto_rawDescGZIP(), []int{34}
}

func (x *GetMarketCollectedSwapFeesResponse) GetCollectedFees() []*FeeInfo {
	if x != nil {
		return x.CollectedFees
	}
	return nil
}

func (x *GetMarketCollectedSwapFeesResponse) GetTotalCollectedFeesPerAsset() map[string]int64 {
	if x != nil {
		return x.TotalCollectedFeesPerAsset
	}
	return nil
}

type WithdrawMarketRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The market from which funds should be withdrawn.
	Market *v1.Market `protobuf:"bytes,1,opt,name=market,proto3" json:"market,omitempty"`
	// The amount of base and quote asset to be withdrawn.
	BalanceToWithdraw *v1.Balance `protobuf:"bytes,2,opt,name=balance_to_withdraw,json=balanceToWithdraw,proto3" json:"balance_to_withdraw,omitempty"`
	// The number of millisatoshis per byte that should be paid for network fees.
	MillisatsPerByte int64 `protobuf:"varint,3,opt,name=millisats_per_byte,json=millisatsPerByte,proto3" json:"millisats_per_byte,omitempty"`
	// The address to send the funds to.
	Address string `protobuf:"bytes,4,opt,name=address,proto3" json:"address,omitempty"`
	// The password that unlocks the internal wallet.
	Password string `protobuf:"bytes,5,opt,name=password,proto3" json:"password,omitempty"`
}

func (x *WithdrawMarketRequest) Reset() {
	*x = WithdrawMarketRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tdex_daemon_v1_operator_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WithdrawMarketRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WithdrawMarketRequest) ProtoMessage() {}

func (x *WithdrawMarketRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tdex_daemon_v1_operator_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WithdrawMarketRequest.ProtoReflect.Descriptor instead.
func (*WithdrawMarketRequest) Descriptor() ([]byte, []int) {
	return file_tdex_daemon_v1_operator_proto_rawDescGZIP(), []int{35}
}

func (x *WithdrawMarketRequest) GetMarket() *v1.Market {
	if x != nil {
		return x.Market
	}
	return nil
}

func (x *WithdrawMarketRequest) GetBalanceToWithdraw() *v1.Balance {
	if x != nil {
		return x.BalanceToWithdraw
	}
	return nil
}

func (x *WithdrawMarketRequest) GetMillisatsPerByte() int64 {
	if x != nil {
		return x.MillisatsPerByte
	}
	return 0
}

func (x *WithdrawMarketRequest) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *WithdrawMarketRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

type WithdrawMarketResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The transaction hash in mempool/blockchain.
	Txid string `protobuf:"bytes,1,opt,name=txid,proto3" json:"txid,omitempty"`
}

func (x *WithdrawMarketResponse) Reset() {
	*x = WithdrawMarketResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tdex_daemon_v1_operator_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WithdrawMarketResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WithdrawMarketResponse) ProtoMessage() {}

func (x *WithdrawMarketResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tdex_daemon_v1_operator_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WithdrawMarketResponse.ProtoReflect.Descriptor instead.
func (*WithdrawMarketResponse) Descriptor() ([]byte, []int) {
	return file_tdex_daemon_v1_operator_proto_rawDescGZIP(), []int{36}
}

func (x *WithdrawMarketResponse) GetTxid() string {
	if x != nil {
		return x.Txid
	}
	return ""
}

type UpdateMarketPercentageFeeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The market for which updating the percentage fee.
	Market *v1.Market `protobuf:"bytes,1,opt,name=market,proto3" json:"market,omitempty"`
	// The new percentage fee expresses in basis point.
	BasisPoint int64 `protobuf:"varint,2,opt,name=basis_point,json=basisPoint,proto3" json:"basis_point,omitempty"`
}

func (x *UpdateMarketPercentageFeeRequest) Reset() {
	*x = UpdateMarketPercentageFeeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tdex_daemon_v1_operator_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateMarketPercentageFeeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMarketPercentageFeeRequest) ProtoMessage() {}

func (x *UpdateMarketPercentageFeeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tdex_daemon_v1_operator_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMarketPercentageFeeRequest.ProtoReflect.Descriptor instead.
func (*UpdateMarketPercentageFeeRequest) Descriptor() ([]byte, []int) {
	return file_tdex_daemon_v1_operator_proto_rawDescGZIP(), []int{37}
}

func (x *UpdateMarketPercentageFeeRequest) GetMarket() *v1.Market {
	if x != nil {
		return x.Market
	}
	return nil
}

func (x *UpdateMarketPercentageFeeRequest) GetBasisPoint() int64 {
	if x != nil {
		return x.BasisPoint
	}
	return 0
}

type UpdateMarketPercentageFeeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The market with updated fees.
	MarketWithFee *v1.MarketWithFee `protobuf:"bytes,1,opt,name=market_with_fee,json=marketWithFee,proto3" json:"market_with_fee,omitempty"`
}

func (x *UpdateMarketPercentageFeeResponse) Reset() {
	*x = UpdateMarketPercentageFeeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tdex_daemon_v1_operator_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateMarketPercentageFeeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMarketPercentageFeeResponse) ProtoMessage() {}

func (x *UpdateMarketPercentageFeeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tdex_daemon_v1_operator_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMarketPercentageFeeResponse.ProtoReflect.Descriptor instead.
func (*UpdateMarketPercentageFeeResponse) Descriptor() ([]byte, []int) {
	return file_tdex_daemon_v1_operator_proto_rawDescGZIP(), []int{38}
}

func (x *UpdateMarketPercentageFeeResponse) GetMarketWithFee() *v1.MarketWithFee {
	if x != nil {
		return x.MarketWithFee
	}
	return nil
}

type UpdateMarketFixedFeeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The market for which updating the fixed fee.
	Market *v1.Market `protobuf:"bytes,1,opt,name=market,proto3" json:"market,omitempty"`
	// The new fixed fee for base and quote asset.
	Fixed *v1.Fixed `protobuf:"bytes,2,opt,name=fixed,proto3" json:"fixed,omitempty"`
}

func (x *UpdateMarketFixedFeeRequest) Reset() {
	*x = UpdateMarketFixedFeeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tdex_daemon_v1_operator_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateMarketFixedFeeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMarketFixedFeeRequest) ProtoMessage() {}

func (x *UpdateMarketFixedFeeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tdex_daemon_v1_operator_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMarketFixedFeeRequest.ProtoReflect.Descriptor instead.
func (*UpdateMarketFixedFeeRequest) Descriptor() ([]byte, []int) {
	return file_tdex_daemon_v1_operator_proto_rawDescGZIP(), []int{39}
}

func (x *UpdateMarketFixedFeeRequest) GetMarket() *v1.Market {
	if x != nil {
		return x.Market
	}
	return nil
}

func (x *UpdateMarketFixedFeeRequest) GetFixed() *v1.Fixed {
	if x != nil {
		return x.Fixed
	}
	return nil
}

type UpdateMarketFixedFeeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The market with updated fees.
	MarketWithFee *v1.MarketWithFee `protobuf:"bytes,1,opt,name=market_with_fee,json=marketWithFee,proto3" json:"market_with_fee,omitempty"`
}

func (x *UpdateMarketFixedFeeResponse) Reset() {
	*x = UpdateMarketFixedFeeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tdex_daemon_v1_operator_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateMarketFixedFeeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMarketFixedFeeResponse) ProtoMessage() {}

func (x *UpdateMarketFixedFeeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tdex_daemon_v1_operator_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMarketFixedFeeResponse.ProtoReflect.Descriptor instead.
func (*UpdateMarketFixedFeeResponse) Descriptor() ([]byte, []int) {
	return file_tdex_daemon_v1_operator_proto_rawDescGZIP(), []int{40}
}

func (x *UpdateMarketFixedFeeResponse) GetMarketWithFee() *v1.MarketWithFee {
	if x != nil {
		return x.MarketWithFee
	}
	return nil
}

type UpdateMarketAssetsPrecisionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The market for which updating the fixed fee.
	Market *v1.Market `protobuf:"bytes,1,opt,name=market,proto3" json:"market,omitempty"`
	// The new base asset precision. A negative value is used to skip updating this field.
	BaseAssetPrecision int32 `protobuf:"varint,2,opt,name=base_asset_precision,json=baseAssetPrecision,proto3" json:"base_asset_precision,omitempty"`
	// The new quote asset precision. A negative value is used to skip updating this field.
	QuoteAssetPrecision int32 `protobuf:"varint,3,opt,name=quote_asset_precision,json=quoteAssetPrecision,proto3" json:"quote_asset_precision,omitempty"`
}

func (x *UpdateMarketAssetsPrecisionRequest) Reset() {
	*x = UpdateMarketAssetsPrecisionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tdex_daemon_v1_operator_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateMarketAssetsPrecisionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMarketAssetsPrecisionRequest) ProtoMessage() {}

func (x *UpdateMarketAssetsPrecisionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tdex_daemon_v1_operator_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMarketAssetsPrecisionRequest.ProtoReflect.Descriptor instead.
func (*UpdateMarketAssetsPrecisionRequest) Descriptor() ([]byte, []int) {
	return file_tdex_daemon_v1_operator_proto_rawDescGZIP(), []int{41}
}

func (x *UpdateMarketAssetsPrecisionRequest) GetMarket() *v1.Market {
	if x != nil {
		return x.Market
	}
	return nil
}

func (x *UpdateMarketAssetsPrecisionRequest) GetBaseAssetPrecision() int32 {
	if x != nil {
		return x.BaseAssetPrecision
	}
	return 0
}

func (x *UpdateMarketAssetsPrecisionRequest) GetQuoteAssetPrecision() int32 {
	if x != nil {
		return x.QuoteAssetPrecision
	}
	return 0
}

type UpdateMarketAssetsPrecisionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateMarketAssetsPrecisionResponse) Reset() {
	*x = UpdateMarketAssetsPrecisionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tdex_daemon_v1_operator_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateMarketAssetsPrecisionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMarketAssetsPrecisionResponse) ProtoMessage() {}

func (x *UpdateMarketAssetsPrecisionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tdex_daemon_v1_operator_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMarketAssetsPrecisionResponse.ProtoReflect.Descriptor instead.
func (*UpdateMarketAssetsPrecisionResponse) Descriptor() ([]byte, []int) {
	return file_tdex_daemon_v1_operator_proto_rawDescGZIP(), []int{42}
}

type UpdateMarketPriceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The arket for which updating the price.
	Market *v1.Market `protobuf:"bytes,1,opt,name=market,proto3" json:"market,omitempty"`
	// The new price for base and quote asset.
	Price *v1.Price `protobuf:"bytes,2,opt,name=price,proto3" json:"price,omitempty"`
}

func (x *UpdateMarketPriceRequest) Reset() {
	*x = UpdateMarketPriceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tdex_daemon_v1_operator_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateMarketPriceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMarketPriceRequest) ProtoMessage() {}

func (x *UpdateMarketPriceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tdex_daemon_v1_operator_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMarketPriceRequest.ProtoReflect.Descriptor instead.
func (*UpdateMarketPriceRequest) Descriptor() ([]byte, []int) {
	return file_tdex_daemon_v1_operator_proto_rawDescGZIP(), []int{43}
}

func (x *UpdateMarketPriceRequest) GetMarket() *v1.Market {
	if x != nil {
		return x.Market
	}
	return nil
}

func (x *UpdateMarketPriceRequest) GetPrice() *v1.Price {
	if x != nil {
		return x.Price
	}
	return nil
}

type UpdateMarketPriceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateMarketPriceResponse) Reset() {
	*x = UpdateMarketPriceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tdex_daemon_v1_operator_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateMarketPriceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMarketPriceResponse) ProtoMessage() {}

func (x *UpdateMarketPriceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tdex_daemon_v1_operator_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMarketPriceResponse.ProtoReflect.Descriptor instead.
func (*UpdateMarketPriceResponse) Descriptor() ([]byte, []int) {
	return file_tdex_daemon_v1_operator_proto_rawDescGZIP(), []int{44}
}

type UpdateMarketStrategyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The market for which changing the strategy.
	Market *v1.Market `protobuf:"bytes,1,opt,name=market,proto3" json:"market,omitempty"`
	// The new making strategy to use.
	StrategyType StrategyType `protobuf:"varint,2,opt,name=strategy_type,json=strategyType,proto3,enum=tdex_daemon.v1.StrategyType" json:"strategy_type,omitempty"`
	// The JSON string representing additional metadata about the new strategy.
	Metadata string `protobuf:"bytes,3,opt,name=metadata,proto3" json:"metadata,omitempty"`
}

func (x *UpdateMarketStrategyRequest) Reset() {
	*x = UpdateMarketStrategyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tdex_daemon_v1_operator_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateMarketStrategyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMarketStrategyRequest) ProtoMessage() {}

func (x *UpdateMarketStrategyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tdex_daemon_v1_operator_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMarketStrategyRequest.ProtoReflect.Descriptor instead.
func (*UpdateMarketStrategyRequest) Descriptor() ([]byte, []int) {
	return file_tdex_daemon_v1_operator_proto_rawDescGZIP(), []int{45}
}

func (x *UpdateMarketStrategyRequest) GetMarket() *v1.Market {
	if x != nil {
		return x.Market
	}
	return nil
}

func (x *UpdateMarketStrategyRequest) GetStrategyType() StrategyType {
	if x != nil {
		return x.StrategyType
	}
	return StrategyType_STRATEGY_TYPE_PLUGGABLE
}

func (x *UpdateMarketStrategyRequest) GetMetadata() string {
	if x != nil {
		return x.Metadata
	}
	return ""
}

type UpdateMarketStrategyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateMarketStrategyResponse) Reset() {
	*x = UpdateMarketStrategyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tdex_daemon_v1_operator_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateMarketStrategyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMarketStrategyResponse) ProtoMessage() {}

func (x *UpdateMarketStrategyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tdex_daemon_v1_operator_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMarketStrategyResponse.ProtoReflect.Descriptor instead.
func (*UpdateMarketStrategyResponse) Descriptor() ([]byte, []int) {
	return file_tdex_daemon_v1_operator_proto_rawDescGZIP(), []int{46}
}

type GetFeeFragmenterAddressRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NumOfAddresses int64 `protobuf:"varint,1,opt,name=num_of_addresses,json=numOfAddresses,proto3" json:"num_of_addresses,omitempty"`
}

func (x *GetFeeFragmenterAddressRequest) Reset() {
	*x = GetFeeFragmenterAddressRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tdex_daemon_v1_operator_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFeeFragmenterAddressRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFeeFragmenterAddressRequest) ProtoMessage() {}

func (x *GetFeeFragmenterAddressRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tdex_daemon_v1_operator_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFeeFragmenterAddressRequest.ProtoReflect.Descriptor instead.
func (*GetFeeFragmenterAddressRequest) Descriptor() ([]byte, []int) {
	return file_tdex_daemon_v1_operator_proto_rawDescGZIP(), []int{47}
}

func (x *GetFeeFragmenterAddressRequest) GetNumOfAddresses() int64 {
	if x != nil {
		return x.NumOfAddresses
	}
	return 0
}

type GetFeeFragmenterAddressResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AddressWithBlindingKey []*AddressWithBlindingKey `protobuf:"bytes,1,rep,name=address_with_blinding_key,json=addressWithBlindingKey,proto3" json:"address_with_blinding_key,omitempty"`
}

func (x *GetFeeFragmenterAddressResponse) Reset() {
	*x = GetFeeFragmenterAddressResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tdex_daemon_v1_operator_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFeeFragmenterAddressResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFeeFragmenterAddressResponse) ProtoMessage() {}

func (x *GetFeeFragmenterAddressResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tdex_daemon_v1_operator_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFeeFragmenterAddressResponse.ProtoReflect.Descriptor instead.
func (*GetFeeFragmenterAddressResponse) Descriptor() ([]byte, []int) {
	return file_tdex_daemon_v1_operator_proto_rawDescGZIP(), []int{48}
}

func (x *GetFeeFragmenterAddressResponse) GetAddressWithBlindingKey() []*AddressWithBlindingKey {
	if x != nil {
		return x.AddressWithBlindingKey
	}
	return nil
}

type ListFeeFragmenterAddressesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListFeeFragmenterAddressesRequest) Reset() {
	*x = ListFeeFragmenterAddressesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tdex_daemon_v1_operator_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListFeeFragmenterAddressesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListFeeFragmenterAddressesRequest) ProtoMessage() {}

func (x *ListFeeFragmenterAddressesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tdex_daemon_v1_operator_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListFeeFragmenterAddressesRequest.ProtoReflect.Descriptor instead.
func (*ListFeeFragmenterAddressesRequest) Descriptor() ([]byte, []int) {
	return file_tdex_daemon_v1_operator_proto_rawDescGZIP(), []int{49}
}

type ListFeeFragmenterAddressesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AddressWithBlindingKey []*AddressWithBlindingKey `protobuf:"bytes,1,rep,name=address_with_blinding_key,json=addressWithBlindingKey,proto3" json:"address_with_blinding_key,omitempty"`
}

func (x *ListFeeFragmenterAddressesResponse) Reset() {
	*x = ListFeeFragmenterAddressesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tdex_daemon_v1_operator_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListFeeFragmenterAddressesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListFeeFragmenterAddressesResponse) ProtoMessage() {}

func (x *ListFeeFragmenterAddressesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tdex_daemon_v1_operator_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListFeeFragmenterAddressesResponse.ProtoReflect.Descriptor instead.
func (*ListFeeFragmenterAddressesResponse) Descriptor() ([]byte, []int) {
	return file_tdex_daemon_v1_operator_proto_rawDescGZIP(), []int{50}
}

func (x *ListFeeFragmenterAddressesResponse) GetAddressWithBlindingKey() []*AddressWithBlindingKey {
	if x != nil {
		return x.AddressWithBlindingKey
	}
	return nil
}

type GetFeeFragmenterBalanceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetFeeFragmenterBalanceRequest) Reset() {
	*x = GetFeeFragmenterBalanceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tdex_daemon_v1_operator_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFeeFragmenterBalanceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFeeFragmenterBalanceRequest) ProtoMessage() {}

func (x *GetFeeFragmenterBalanceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tdex_daemon_v1_operator_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFeeFragmenterBalanceRequest.ProtoReflect.Descriptor instead.
func (*GetFeeFragmenterBalanceRequest) Descriptor() ([]byte, []int) {
	return file_tdex_daemon_v1_operator_proto_rawDescGZIP(), []int{51}
}

type GetFeeFragmenterBalanceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The balance info (total, confirmed, unconfirmed) of the account grouped by
	// asset.
	Balance map[string]*BalanceInfo `protobuf:"bytes,1,rep,name=balance,proto3" json:"balance,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *GetFeeFragmenterBalanceResponse) Reset() {
	*x = GetFeeFragmenterBalanceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tdex_daemon_v1_operator_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFeeFragmenterBalanceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFeeFragmenterBalanceResponse) ProtoMessage() {}

func (x *GetFeeFragmenterBalanceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tdex_daemon_v1_operator_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFeeFragmenterBalanceResponse.ProtoReflect.Descriptor instead.
func (*GetFeeFragmenterBalanceResponse) Descriptor() ([]byte, []int) {
	return file_tdex_daemon_v1_operator_proto_rawDescGZIP(), []int{52}
}

func (x *GetFeeFragmenterBalanceResponse) GetBalance() map[string]*BalanceInfo {
	if x != nil {
		return x.Balance
	}
	return nil
}

type FeeFragmenterSplitFundsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The max number of fragments the fragmenter can generate when splitting
	// its funds.
	MaxFragments     uint32 `protobuf:"varint,1,opt,name=max_fragments,json=maxFragments,proto3" json:"max_fragments,omitempty"`
	MillisatsPerByte uint64 `protobuf:"varint,2,opt,name=millisats_per_byte,json=millisatsPerByte,proto3" json:"millisats_per_byte,omitempty"`
}

func (x *FeeFragmenterSplitFundsRequest) Reset() {
	*x = FeeFragmenterSplitFundsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tdex_daemon_v1_operator_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FeeFragmenterSplitFundsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FeeFragmenterSplitFundsRequest) ProtoMessage() {}

func (x *FeeFragmenterSplitFundsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tdex_daemon_v1_operator_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FeeFragmenterSplitFundsRequest.ProtoReflect.Descriptor instead.
func (*FeeFragmenterSplitFundsRequest) Descriptor() ([]byte, []int) {
	return file_tdex_daemon_v1_operator_proto_rawDescGZIP(), []int{53}
}

func (x *FeeFragmenterSplitFundsRequest) GetMaxFragments() uint32 {
	if x != nil {
		return x.MaxFragments
	}
	return 0
}

func (x *FeeFragmenterSplitFundsRequest) GetMillisatsPerByte() uint64 {
	if x != nil {
		return x.MillisatsPerByte
	}
	return 0
}

type FeeFragmenterSplitFundsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// A sequence of string messages returned during the process.
	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *FeeFragmenterSplitFundsResponse) Reset() {
	*x = FeeFragmenterSplitFundsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tdex_daemon_v1_operator_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FeeFragmenterSplitFundsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FeeFragmenterSplitFundsResponse) ProtoMessage() {}

func (x *FeeFragmenterSplitFundsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tdex_daemon_v1_operator_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FeeFragmenterSplitFundsResponse.ProtoReflect.Descriptor instead.
func (*FeeFragmenterSplitFundsResponse) Descriptor() ([]byte, []int) {
	return file_tdex_daemon_v1_operator_proto_rawDescGZIP(), []int{54}
}

func (x *FeeFragmenterSplitFundsResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type WithdrawFeeFragmenterRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The address to send the funds to.
	Address string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	// The number of millisatoshis per byte that should be paid for network fees.
	MillisatsPerByte uint64 `protobuf:"varint,2,opt,name=millisats_per_byte,json=millisatsPerByte,proto3" json:"millisats_per_byte,omitempty"`
	// The password that unlocks the internal wallet.
	Password string `protobuf:"bytes,5,opt,name=password,proto3" json:"password,omitempty"`
}

func (x *WithdrawFeeFragmenterRequest) Reset() {
	*x = WithdrawFeeFragmenterRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tdex_daemon_v1_operator_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WithdrawFeeFragmenterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WithdrawFeeFragmenterRequest) ProtoMessage() {}

func (x *WithdrawFeeFragmenterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tdex_daemon_v1_operator_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WithdrawFeeFragmenterRequest.ProtoReflect.Descriptor instead.
func (*WithdrawFeeFragmenterRequest) Descriptor() ([]byte, []int) {
	return file_tdex_daemon_v1_operator_proto_rawDescGZIP(), []int{55}
}

func (x *WithdrawFeeFragmenterRequest) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *WithdrawFeeFragmenterRequest) GetMillisatsPerByte() uint64 {
	if x != nil {
		return x.MillisatsPerByte
	}
	return 0
}

func (x *WithdrawFeeFragmenterRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

type WithdrawFeeFragmenterResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Txid string `protobuf:"bytes,1,opt,name=txid,proto3" json:"txid,omitempty"`
}

func (x *WithdrawFeeFragmenterResponse) Reset() {
	*x = WithdrawFeeFragmenterResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tdex_daemon_v1_operator_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WithdrawFeeFragmenterResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WithdrawFeeFragmenterResponse) ProtoMessage() {}

func (x *WithdrawFeeFragmenterResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tdex_daemon_v1_operator_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WithdrawFeeFragmenterResponse.ProtoReflect.Descriptor instead.
func (*WithdrawFeeFragmenterResponse) Descriptor() ([]byte, []int) {
	return file_tdex_daemon_v1_operator_proto_rawDescGZIP(), []int{56}
}

func (x *WithdrawFeeFragmenterResponse) GetTxid() string {
	if x != nil {
		return x.Txid
	}
	return ""
}

type GetMarketFragmenterAddressRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NumOfAddresses int64 `protobuf:"varint,1,opt,name=num_of_addresses,json=numOfAddresses,proto3" json:"num_of_addresses,omitempty"`
}

func (x *GetMarketFragmenterAddressRequest) Reset() {
	*x = GetMarketFragmenterAddressRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tdex_daemon_v1_operator_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMarketFragmenterAddressRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMarketFragmenterAddressRequest) ProtoMessage() {}

func (x *GetMarketFragmenterAddressRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tdex_daemon_v1_operator_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMarketFragmenterAddressRequest.ProtoReflect.Descriptor instead.
func (*GetMarketFragmenterAddressRequest) Descriptor() ([]byte, []int) {
	return file_tdex_daemon_v1_operator_proto_rawDescGZIP(), []int{57}
}

func (x *GetMarketFragmenterAddressRequest) GetNumOfAddresses() int64 {
	if x != nil {
		return x.NumOfAddresses
	}
	return 0
}

type GetMarketFragmenterAddressResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AddressWithBlindingKey []*AddressWithBlindingKey `protobuf:"bytes,1,rep,name=address_with_blinding_key,json=addressWithBlindingKey,proto3" json:"address_with_blinding_key,omitempty"`
}

func (x *GetMarketFragmenterAddressResponse) Reset() {
	*x = GetMarketFragmenterAddressResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tdex_daemon_v1_operator_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMarketFragmenterAddressResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMarketFragmenterAddressResponse) ProtoMessage() {}

func (x *GetMarketFragmenterAddressResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tdex_daemon_v1_operator_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMarketFragmenterAddressResponse.ProtoReflect.Descriptor instead.
func (*GetMarketFragmenterAddressResponse) Descriptor() ([]byte, []int) {
	return file_tdex_daemon_v1_operator_proto_rawDescGZIP(), []int{58}
}

func (x *GetMarketFragmenterAddressResponse) GetAddressWithBlindingKey() []*AddressWithBlindingKey {
	if x != nil {
		return x.AddressWithBlindingKey
	}
	return nil
}

type ListMarketFragmenterAddressesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListMarketFragmenterAddressesRequest) Reset() {
	*x = ListMarketFragmenterAddressesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tdex_daemon_v1_operator_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListMarketFragmenterAddressesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMarketFragmenterAddressesRequest) ProtoMessage() {}

func (x *ListMarketFragmenterAddressesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tdex_daemon_v1_operator_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMarketFragmenterAddressesRequest.ProtoReflect.Descriptor instead.
func (*ListMarketFragmenterAddressesRequest) Descriptor() ([]byte, []int) {
	return file_tdex_daemon_v1_operator_proto_rawDescGZIP(), []int{59}
}

type ListMarketFragmenterAddressesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AddressWithBlindingKey []*AddressWithBlindingKey `protobuf:"bytes,1,rep,name=address_with_blinding_key,json=addressWithBlindingKey,proto3" json:"address_with_blinding_key,omitempty"`
}

func (x *ListMarketFragmenterAddressesResponse) Reset() {
	*x = ListMarketFragmenterAddressesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tdex_daemon_v1_operator_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListMarketFragmenterAddressesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMarketFragmenterAddressesResponse) ProtoMessage() {}

func (x *ListMarketFragmenterAddressesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tdex_daemon_v1_operator_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMarketFragmenterAddressesResponse.ProtoReflect.Descriptor instead.
func (*ListMarketFragmenterAddressesResponse) Descriptor() ([]byte, []int) {
	return file_tdex_daemon_v1_operator_proto_rawDescGZIP(), []int{60}
}

func (x *ListMarketFragmenterAddressesResponse) GetAddressWithBlindingKey() []*AddressWithBlindingKey {
	if x != nil {
		return x.AddressWithBlindingKey
	}
	return nil
}

type GetMarketFragmenterBalanceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetMarketFragmenterBalanceRequest) Reset() {
	*x = GetMarketFragmenterBalanceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tdex_daemon_v1_operator_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMarketFragmenterBalanceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMarketFragmenterBalanceRequest) ProtoMessage() {}

func (x *GetMarketFragmenterBalanceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tdex_daemon_v1_operator_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMarketFragmenterBalanceRequest.ProtoReflect.Descriptor instead.
func (*GetMarketFragmenterBalanceRequest) Descriptor() ([]byte, []int) {
	return file_tdex_daemon_v1_operator_proto_rawDescGZIP(), []int{61}
}

type GetMarketFragmenterBalanceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The balance info (total, confirmed, unconfirmed) of the account grouped by
	// asset.
	Balance map[string]*BalanceInfo `protobuf:"bytes,1,rep,name=balance,proto3" json:"balance,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *GetMarketFragmenterBalanceResponse) Reset() {
	*x = GetMarketFragmenterBalanceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tdex_daemon_v1_operator_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMarketFragmenterBalanceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMarketFragmenterBalanceResponse) ProtoMessage() {}

func (x *GetMarketFragmenterBalanceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tdex_daemon_v1_operator_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMarketFragmenterBalanceResponse.ProtoReflect.Descriptor instead.
func (*GetMarketFragmenterBalanceResponse) Descriptor() ([]byte, []int) {
	return file_tdex_daemon_v1_operator_proto_rawDescGZIP(), []int{62}
}

func (x *GetMarketFragmenterBalanceResponse) GetBalance() map[string]*BalanceInfo {
	if x != nil {
		return x.Balance
	}
	return nil
}

type MarketFragmenterSplitFundsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The market to which to deposit the fragmented funds owned by the market
	// fragmenter.
	Market           *v1.Market `protobuf:"bytes,1,opt,name=market,proto3" json:"market,omitempty"`
	MillisatsPerByte uint64     `protobuf:"varint,2,opt,name=millisats_per_byte,json=millisatsPerByte,proto3" json:"millisats_per_byte,omitempty"`
}

func (x *MarketFragmenterSplitFundsRequest) Reset() {
	*x = MarketFragmenterSplitFundsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tdex_daemon_v1_operator_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MarketFragmenterSplitFundsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarketFragmenterSplitFundsRequest) ProtoMessage() {}

func (x *MarketFragmenterSplitFundsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tdex_daemon_v1_operator_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarketFragmenterSplitFundsRequest.ProtoReflect.Descriptor instead.
func (*MarketFragmenterSplitFundsRequest) Descriptor() ([]byte, []int) {
	return file_tdex_daemon_v1_operator_proto_rawDescGZIP(), []int{63}
}

func (x *MarketFragmenterSplitFundsRequest) GetMarket() *v1.Market {
	if x != nil {
		return x.Market
	}
	return nil
}

func (x *MarketFragmenterSplitFundsRequest) GetMillisatsPerByte() uint64 {
	if x != nil {
		return x.MillisatsPerByte
	}
	return 0
}

type MarketFragmenterSplitFundsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// A sequence of string messages returned during the process.
	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *MarketFragmenterSplitFundsResponse) Reset() {
	*x = MarketFragmenterSplitFundsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tdex_daemon_v1_operator_proto_msgTypes[64]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MarketFragmenterSplitFundsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarketFragmenterSplitFundsResponse) ProtoMessage() {}

func (x *MarketFragmenterSplitFundsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tdex_daemon_v1_operator_proto_msgTypes[64]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarketFragmenterSplitFundsResponse.ProtoReflect.Descriptor instead.
func (*MarketFragmenterSplitFundsResponse) Descriptor() ([]byte, []int) {
	return file_tdex_daemon_v1_operator_proto_rawDescGZIP(), []int{64}
}

func (x *MarketFragmenterSplitFundsResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type WithdrawMarketFragmenterRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The address to send the funds to.
	Address string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	// The number of millisatoshis per byte that should be paid for network fees.
	MillisatsPerByte uint64 `protobuf:"varint,2,opt,name=millisats_per_byte,json=millisatsPerByte,proto3" json:"millisats_per_byte,omitempty"`
	// The password that unlocks the internal wallet.
	Password string `protobuf:"bytes,5,opt,name=password,proto3" json:"password,omitempty"`
}

func (x *WithdrawMarketFragmenterRequest) Reset() {
	*x = WithdrawMarketFragmenterRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tdex_daemon_v1_operator_proto_msgTypes[65]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WithdrawMarketFragmenterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WithdrawMarketFragmenterRequest) ProtoMessage() {}

func (x *WithdrawMarketFragmenterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tdex_daemon_v1_operator_proto_msgTypes[65]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WithdrawMarketFragmenterRequest.ProtoReflect.Descriptor instead.
func (*WithdrawMarketFragmenterRequest) Descriptor() ([]byte, []int) {
	return file_tdex_daemon_v1_operator_proto_rawDescGZIP(), []int{65}
}

func (x *WithdrawMarketFragmenterRequest) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *WithdrawMarketFragmenterRequest) GetMillisatsPerByte() uint64 {
	if x != nil {
		return x.MillisatsPerByte
	}
	return 0
}

func (x *WithdrawMarketFragmenterRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

type WithdrawMarketFragmenterResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Txid string `protobuf:"bytes,1,opt,name=txid,proto3" json:"txid,omitempty"`
}

func (x *WithdrawMarketFragmenterResponse) Reset() {
	*x = WithdrawMarketFragmenterResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tdex_daemon_v1_operator_proto_msgTypes[66]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WithdrawMarketFragmenterResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WithdrawMarketFragmenterResponse) ProtoMessage() {}

func (x *WithdrawMarketFragmenterResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tdex_daemon_v1_operator_proto_msgTypes[66]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WithdrawMarketFragmenterResponse.ProtoReflect.Descriptor instead.
func (*WithdrawMarketFragmenterResponse) Descriptor() ([]byte, []int) {
	return file_tdex_daemon_v1_operator_proto_rawDescGZIP(), []int{66}
}

func (x *WithdrawMarketFragmenterResponse) GetTxid() string {
	if x != nil {
		return x.Txid
	}
	return ""
}

type ListTradesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Optional: request all trades related to a specific market.
	Market *v1.Market `protobuf:"bytes,1,opt,name=market,proto3" json:"market,omitempty"`
	// The page for a paginated reply.
	Page *Page `protobuf:"bytes,2,opt,name=page,proto3" json:"page,omitempty"`
}

func (x *ListTradesRequest) Reset() {
	*x = ListTradesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tdex_daemon_v1_operator_proto_msgTypes[67]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListTradesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTradesRequest) ProtoMessage() {}

func (x *ListTradesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tdex_daemon_v1_operator_proto_msgTypes[67]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTradesRequest.ProtoReflect.Descriptor instead.
func (*ListTradesRequest) Descriptor() ([]byte, []int) {
	return file_tdex_daemon_v1_operator_proto_rawDescGZIP(), []int{67}
}

func (x *ListTradesRequest) GetMarket() *v1.Market {
	if x != nil {
		return x.Market
	}
	return nil
}

func (x *ListTradesRequest) GetPage() *Page {
	if x != nil {
		return x.Page
	}
	return nil
}

type ListTradesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The list of info about all trades or all trades for a market depending on
	// the request.
	Trades []*TradeInfo `protobuf:"bytes,1,rep,name=trades,proto3" json:"trades,omitempty"`
}

func (x *ListTradesResponse) Reset() {
	*x = ListTradesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tdex_daemon_v1_operator_proto_msgTypes[68]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListTradesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTradesResponse) ProtoMessage() {}

func (x *ListTradesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tdex_daemon_v1_operator_proto_msgTypes[68]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTradesResponse.ProtoReflect.Descriptor instead.
func (*ListTradesResponse) Descriptor() ([]byte, []int) {
	return file_tdex_daemon_v1_operator_proto_rawDescGZIP(), []int{68}
}

func (x *ListTradesResponse) GetTrades() []*TradeInfo {
	if x != nil {
		return x.Trades
	}
	return nil
}

type ReloadUtxosRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ReloadUtxosRequest) Reset() {
	*x = ReloadUtxosRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tdex_daemon_v1_operator_proto_msgTypes[69]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReloadUtxosRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReloadUtxosRequest) ProtoMessage() {}

func (x *ReloadUtxosRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tdex_daemon_v1_operator_proto_msgTypes[69]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReloadUtxosRequest.ProtoReflect.Descriptor instead.
func (*ReloadUtxosRequest) Descriptor() ([]byte, []int) {
	return file_tdex_daemon_v1_operator_proto_rawDescGZIP(), []int{69}
}

type ReloadUtxosResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ReloadUtxosResponse) Reset() {
	*x = ReloadUtxosResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tdex_daemon_v1_operator_proto_msgTypes[70]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReloadUtxosResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReloadUtxosResponse) ProtoMessage() {}

func (x *ReloadUtxosResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tdex_daemon_v1_operator_proto_msgTypes[70]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReloadUtxosResponse.ProtoReflect.Descriptor instead.
func (*ReloadUtxosResponse) Descriptor() ([]byte, []int) {
	return file_tdex_daemon_v1_operator_proto_rawDescGZIP(), []int{70}
}

type ListUtxosRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Optional: request all utxos owned by a specific wallet account.
	AccountIndex uint64 `protobuf:"varint,1,opt,name=account_index,json=accountIndex,proto3" json:"account_index,omitempty"`
	// The page for a paginated reply.
	Page *Page `protobuf:"bytes,2,opt,name=page,proto3" json:"page,omitempty"`
}

func (x *ListUtxosRequest) Reset() {
	*x = ListUtxosRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tdex_daemon_v1_operator_proto_msgTypes[71]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListUtxosRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListUtxosRequest) ProtoMessage() {}

func (x *ListUtxosRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tdex_daemon_v1_operator_proto_msgTypes[71]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListUtxosRequest.ProtoReflect.Descriptor instead.
func (*ListUtxosRequest) Descriptor() ([]byte, []int) {
	return file_tdex_daemon_v1_operator_proto_rawDescGZIP(), []int{71}
}

func (x *ListUtxosRequest) GetAccountIndex() uint64 {
	if x != nil {
		return x.AccountIndex
	}
	return 0
}

func (x *ListUtxosRequest) GetPage() *Page {
	if x != nil {
		return x.Page
	}
	return nil
}

type ListUtxosResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The list of all unspent utxos.
	Unspents []*UtxoInfo `protobuf:"bytes,1,rep,name=unspents,proto3" json:"unspents,omitempty"`
	// The list of all spent utxos.
	Spents []*UtxoInfo `protobuf:"bytes,2,rep,name=spents,proto3" json:"spents,omitempty"`
	// The list of all currently locked utxos.
	Locks []*UtxoInfo `protobuf:"bytes,3,rep,name=locks,proto3" json:"locks,omitempty"`
}

func (x *ListUtxosResponse) Reset() {
	*x = ListUtxosResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tdex_daemon_v1_operator_proto_msgTypes[72]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListUtxosResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListUtxosResponse) ProtoMessage() {}

func (x *ListUtxosResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tdex_daemon_v1_operator_proto_msgTypes[72]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListUtxosResponse.ProtoReflect.Descriptor instead.
func (*ListUtxosResponse) Descriptor() ([]byte, []int) {
	return file_tdex_daemon_v1_operator_proto_rawDescGZIP(), []int{72}
}

func (x *ListUtxosResponse) GetUnspents() []*UtxoInfo {
	if x != nil {
		return x.Unspents
	}
	return nil
}

func (x *ListUtxosResponse) GetSpents() []*UtxoInfo {
	if x != nil {
		return x.Spents
	}
	return nil
}

func (x *ListUtxosResponse) GetLocks() []*UtxoInfo {
	if x != nil {
		return x.Locks
	}
	return nil
}

type AddWebhookRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The endpoint of the external service to reach.
	Endpoint string `protobuf:"bytes,1,opt,name=endpoint,proto3" json:"endpoint,omitempty"`
	// The action for which the webhook should be registered.
	Action ActionType `protobuf:"varint,2,opt,name=action,proto3,enum=tdex_daemon.v1.ActionType" json:"action,omitempty"`
	// The secret to use for signign a JWT token for an authenticated request
	// to the external service.
	Secret string `protobuf:"bytes,3,opt,name=secret,proto3" json:"secret,omitempty"`
}

func (x *AddWebhookRequest) Reset() {
	*x = AddWebhookRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tdex_daemon_v1_operator_proto_msgTypes[73]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddWebhookRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddWebhookRequest) ProtoMessage() {}

func (x *AddWebhookRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tdex_daemon_v1_operator_proto_msgTypes[73]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddWebhookRequest.ProtoReflect.Descriptor instead.
func (*AddWebhookRequest) Descriptor() ([]byte, []int) {
	return file_tdex_daemon_v1_operator_proto_rawDescGZIP(), []int{73}
}

func (x *AddWebhookRequest) GetEndpoint() string {
	if x != nil {
		return x.Endpoint
	}
	return ""
}

func (x *AddWebhookRequest) GetAction() ActionType {
	if x != nil {
		return x.Action
	}
	return ActionType_ACTION_TYPE_TRADE_SETTLED
}

func (x *AddWebhookRequest) GetSecret() string {
	if x != nil {
		return x.Secret
	}
	return ""
}

type AddWebhookResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The id of the new webhook.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *AddWebhookResponse) Reset() {
	*x = AddWebhookResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tdex_daemon_v1_operator_proto_msgTypes[74]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddWebhookResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddWebhookResponse) ProtoMessage() {}

func (x *AddWebhookResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tdex_daemon_v1_operator_proto_msgTypes[74]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddWebhookResponse.ProtoReflect.Descriptor instead.
func (*AddWebhookResponse) Descriptor() ([]byte, []int) {
	return file_tdex_daemon_v1_operator_proto_rawDescGZIP(), []int{74}
}

func (x *AddWebhookResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type RemoveWebhookRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The id of the webhook to remove.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *RemoveWebhookRequest) Reset() {
	*x = RemoveWebhookRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tdex_daemon_v1_operator_proto_msgTypes[75]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveWebhookRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveWebhookRequest) ProtoMessage() {}

func (x *RemoveWebhookRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tdex_daemon_v1_operator_proto_msgTypes[75]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveWebhookRequest.ProtoReflect.Descriptor instead.
func (*RemoveWebhookRequest) Descriptor() ([]byte, []int) {
	return file_tdex_daemon_v1_operator_proto_rawDescGZIP(), []int{75}
}

func (x *RemoveWebhookRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type RemoveWebhookResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RemoveWebhookResponse) Reset() {
	*x = RemoveWebhookResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tdex_daemon_v1_operator_proto_msgTypes[76]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveWebhookResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveWebhookResponse) ProtoMessage() {}

func (x *RemoveWebhookResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tdex_daemon_v1_operator_proto_msgTypes[76]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveWebhookResponse.ProtoReflect.Descriptor instead.
func (*RemoveWebhookResponse) Descriptor() ([]byte, []int) {
	return file_tdex_daemon_v1_operator_proto_rawDescGZIP(), []int{76}
}

type ListWebhooksRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The action for which filtering the list of webhooks.
	Action ActionType `protobuf:"varint,1,opt,name=action,proto3,enum=tdex_daemon.v1.ActionType" json:"action,omitempty"`
}

func (x *ListWebhooksRequest) Reset() {
	*x = ListWebhooksRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tdex_daemon_v1_operator_proto_msgTypes[77]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListWebhooksRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListWebhooksRequest) ProtoMessage() {}

func (x *ListWebhooksRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tdex_daemon_v1_operator_proto_msgTypes[77]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListWebhooksRequest.ProtoReflect.Descriptor instead.
func (*ListWebhooksRequest) Descriptor() ([]byte, []int) {
	return file_tdex_daemon_v1_operator_proto_rawDescGZIP(), []int{77}
}

func (x *ListWebhooksRequest) GetAction() ActionType {
	if x != nil {
		return x.Action
	}
	return ActionType_ACTION_TYPE_TRADE_SETTLED
}

type ListWebhooksResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The list of info about the webhooks regitered for an action.
	WebhookInfo []*WebhookInfo `protobuf:"bytes,1,rep,name=webhook_info,json=webhookInfo,proto3" json:"webhook_info,omitempty"`
}

func (x *ListWebhooksResponse) Reset() {
	*x = ListWebhooksResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tdex_daemon_v1_operator_proto_msgTypes[78]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListWebhooksResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListWebhooksResponse) ProtoMessage() {}

func (x *ListWebhooksResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tdex_daemon_v1_operator_proto_msgTypes[78]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListWebhooksResponse.ProtoReflect.Descriptor instead.
func (*ListWebhooksResponse) Descriptor() ([]byte, []int) {
	return file_tdex_daemon_v1_operator_proto_rawDescGZIP(), []int{78}
}

func (x *ListWebhooksResponse) GetWebhookInfo() []*WebhookInfo {
	if x != nil {
		return x.WebhookInfo
	}
	return nil
}

type ListDepositsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The index of the wallet account for which listing the deposits.
	AccountIndex int64 `protobuf:"varint,1,opt,name=account_index,json=accountIndex,proto3" json:"account_index,omitempty"`
	// The page for a paginated reply.
	Page *Page `protobuf:"bytes,2,opt,name=page,proto3" json:"page,omitempty"`
}

func (x *ListDepositsRequest) Reset() {
	*x = ListDepositsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tdex_daemon_v1_operator_proto_msgTypes[79]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListDepositsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDepositsRequest) ProtoMessage() {}

func (x *ListDepositsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tdex_daemon_v1_operator_proto_msgTypes[79]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDepositsRequest.ProtoReflect.Descriptor instead.
func (*ListDepositsRequest) Descriptor() ([]byte, []int) {
	return file_tdex_daemon_v1_operator_proto_rawDescGZIP(), []int{79}
}

func (x *ListDepositsRequest) GetAccountIndex() int64 {
	if x != nil {
		return x.AccountIndex
	}
	return 0
}

func (x *ListDepositsRequest) GetPage() *Page {
	if x != nil {
		return x.Page
	}
	return nil
}

type ListDepositsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The index of the wallet account.
	AccountIndex int64 `protobuf:"varint,1,opt,name=account_index,json=accountIndex,proto3" json:"account_index,omitempty"`
	// The list of info about the deposits.
	Deposits []*Deposit `protobuf:"bytes,2,rep,name=deposits,proto3" json:"deposits,omitempty"`
}

func (x *ListDepositsResponse) Reset() {
	*x = ListDepositsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tdex_daemon_v1_operator_proto_msgTypes[80]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListDepositsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDepositsResponse) ProtoMessage() {}

func (x *ListDepositsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tdex_daemon_v1_operator_proto_msgTypes[80]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDepositsResponse.ProtoReflect.Descriptor instead.
func (*ListDepositsResponse) Descriptor() ([]byte, []int) {
	return file_tdex_daemon_v1_operator_proto_rawDescGZIP(), []int{80}
}

func (x *ListDepositsResponse) GetAccountIndex() int64 {
	if x != nil {
		return x.AccountIndex
	}
	return 0
}

func (x *ListDepositsResponse) GetDeposits() []*Deposit {
	if x != nil {
		return x.Deposits
	}
	return nil
}

type ListWithdrawalsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The index of the wallet account for which listing the withdrawals.
	AccountIndex int64 `protobuf:"varint,1,opt,name=account_index,json=accountIndex,proto3" json:"account_index,omitempty"`
	// The page for a paginated reply.
	Page *Page `protobuf:"bytes,2,opt,name=page,proto3" json:"page,omitempty"`
}

func (x *ListWithdrawalsRequest) Reset() {
	*x = ListWithdrawalsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tdex_daemon_v1_operator_proto_msgTypes[81]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListWithdrawalsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListWithdrawalsRequest) ProtoMessage() {}

func (x *ListWithdrawalsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tdex_daemon_v1_operator_proto_msgTypes[81]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListWithdrawalsRequest.ProtoReflect.Descriptor instead.
func (*ListWithdrawalsRequest) Descriptor() ([]byte, []int) {
	return file_tdex_daemon_v1_operator_proto_rawDescGZIP(), []int{81}
}

func (x *ListWithdrawalsRequest) GetAccountIndex() int64 {
	if x != nil {
		return x.AccountIndex
	}
	return 0
}

func (x *ListWithdrawalsRequest) GetPage() *Page {
	if x != nil {
		return x.Page
	}
	return nil
}

type ListWithdrawalsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The index of the wallet account.
	AccountIndex int64 `protobuf:"varint,1,opt,name=account_index,json=accountIndex,proto3" json:"account_index,omitempty"`
	// The list of info about the withdrawals.
	Withdrawals []*Withdrawal `protobuf:"bytes,2,rep,name=withdrawals,proto3" json:"withdrawals,omitempty"`
}

func (x *ListWithdrawalsResponse) Reset() {
	*x = ListWithdrawalsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tdex_daemon_v1_operator_proto_msgTypes[82]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListWithdrawalsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListWithdrawalsResponse) ProtoMessage() {}

func (x *ListWithdrawalsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tdex_daemon_v1_operator_proto_msgTypes[82]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListWithdrawalsResponse.ProtoReflect.Descriptor instead.
func (*ListWithdrawalsResponse) Descriptor() ([]byte, []int) {
	return file_tdex_daemon_v1_operator_proto_rawDescGZIP(), []int{82}
}

func (x *ListWithdrawalsResponse) GetAccountIndex() int64 {
	if x != nil {
		return x.AccountIndex
	}
	return 0
}

func (x *ListWithdrawalsResponse) GetWithdrawals() []*Withdrawal {
	if x != nil {
		return x.Withdrawals
	}
	return nil
}

type GetMarketReportRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The market for which returning the report of collected fees.
	Market *v1.Market `protobuf:"bytes,1,opt,name=market,proto3" json:"market,omitempty"`
	// time_range fetch market report from time range
	TimeRange *TimeRange `protobuf:"bytes,2,opt,name=time_range,json=timeRange,proto3" json:"time_range,omitempty"`
	// used to group volume by time_frame for the specified time_range
	TimeFrame TimeFrame `protobuf:"varint,3,opt,name=time_frame,json=timeFrame,proto3,enum=tdex_daemon.v1.TimeFrame" json:"time_frame,omitempty"`
}

func (x *GetMarketReportRequest) Reset() {
	*x = GetMarketReportRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tdex_daemon_v1_operator_proto_msgTypes[83]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMarketReportRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMarketReportRequest) ProtoMessage() {}

func (x *GetMarketReportRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tdex_daemon_v1_operator_proto_msgTypes[83]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMarketReportRequest.ProtoReflect.Descriptor instead.
func (*GetMarketReportRequest) Descriptor() ([]byte, []int) {
	return file_tdex_daemon_v1_operator_proto_rawDescGZIP(), []int{83}
}

func (x *GetMarketReportRequest) GetMarket() *v1.Market {
	if x != nil {
		return x.Market
	}
	return nil
}

func (x *GetMarketReportRequest) GetTimeRange() *TimeRange {
	if x != nil {
		return x.TimeRange
	}
	return nil
}

func (x *GetMarketReportRequest) GetTimeFrame() TimeFrame {
	if x != nil {
		return x.TimeFrame
	}
	return TimeFrame_TIME_FRAME_HOUR
}

type GetMarketReportResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// MarketReport holds info about volume and collected fees
	Report *MarketReport `protobuf:"bytes,1,opt,name=report,proto3" json:"report,omitempty"`
}

func (x *GetMarketReportResponse) Reset() {
	*x = GetMarketReportResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tdex_daemon_v1_operator_proto_msgTypes[84]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMarketReportResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMarketReportResponse) ProtoMessage() {}

func (x *GetMarketReportResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tdex_daemon_v1_operator_proto_msgTypes[84]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMarketReportResponse.ProtoReflect.Descriptor instead.
func (*GetMarketReportResponse) Descriptor() ([]byte, []int) {
	return file_tdex_daemon_v1_operator_proto_rawDescGZIP(), []int{84}
}

func (x *GetMarketReportResponse) GetReport() *MarketReport {
	if x != nil {
		return x.Report
	}
	return nil
}

var File_tdex_daemon_v1_operator_proto protoreflect.FileDescriptor

var file_tdex_daemon_v1_operator_proto_rawDesc = []byte{
	0x0a, 0x1d, 0x74, 0x64, 0x65, 0x78, 0x2d, 0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x2f, 0x76, 0x31,
	0x2f, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x0e, 0x74, 0x64, 0x65, 0x78, 0x5f, 0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x1a,
	0x1a, 0x74, 0x64, 0x65, 0x78, 0x2d, 0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x2f, 0x76, 0x31, 0x2f,
	0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x13, 0x74, 0x64, 0x65,
	0x78, 0x2f, 0x76, 0x31, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0x10, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x22, 0xc8, 0x02, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x6f, 0x6f, 0x74, 0x5f, 0x70,
	0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x6f, 0x6f, 0x74, 0x50,
	0x61, 0x74, 0x68, 0x12, 0x2e, 0x0a, 0x13, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x62, 0x6c,
	0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x11, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x42, 0x6c, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67,
	0x4b, 0x65, 0x79, 0x12, 0x3e, 0x0a, 0x0c, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69,
	0x6e, 0x66, 0x6f, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x74, 0x64, 0x65, 0x78,
	0x5f, 0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x18, 0x0a, 0x07, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x12, 0x38, 0x0a,
	0x0a, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x19, 0x2e, 0x74, 0x64, 0x65, 0x78, 0x5f, 0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x2e,
	0x76, 0x31, 0x2e, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x09, 0x62, 0x75,
	0x69, 0x6c, 0x64, 0x44, 0x61, 0x74, 0x61, 0x12, 0x28, 0x0a, 0x10, 0x66, 0x69, 0x78, 0x65, 0x64,
	0x5f, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x61, 0x73, 0x73, 0x65, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0e, 0x66, 0x69, 0x78, 0x65, 0x64, 0x42, 0x61, 0x73, 0x65, 0x41, 0x73, 0x73, 0x65,
	0x74, 0x12, 0x2a, 0x0a, 0x11, 0x66, 0x69, 0x78, 0x65, 0x64, 0x5f, 0x71, 0x75, 0x6f, 0x74, 0x65,
	0x5f, 0x61, 0x73, 0x73, 0x65, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x66, 0x69,
	0x78, 0x65, 0x64, 0x51, 0x75, 0x6f, 0x74, 0x65, 0x41, 0x73, 0x73, 0x65, 0x74, 0x22, 0x51, 0x0a,
	0x09, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x65,
	0x22, 0x44, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x46, 0x65, 0x65, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2c, 0x0a, 0x10, 0x6e, 0x75, 0x6d, 0x5f,
	0x6f, 0x66, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x42, 0x02, 0x30, 0x02, 0x52, 0x0e, 0x6e, 0x75, 0x6d, 0x4f, 0x66, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x22, 0x7a, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x46, 0x65, 0x65,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x61, 0x0a, 0x19, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x77, 0x69, 0x74, 0x68, 0x5f,
	0x62, 0x6c, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x26, 0x2e, 0x74, 0x64, 0x65, 0x78, 0x5f, 0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e,
	0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x57, 0x69, 0x74, 0x68, 0x42,
	0x6c, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x4b, 0x65, 0x79, 0x52, 0x16, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x57, 0x69, 0x74, 0x68, 0x42, 0x6c, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x4b,
	0x65, 0x79, 0x22, 0x19, 0x0a, 0x17, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x65, 0x65, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x7d, 0x0a,
	0x18, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x65, 0x65, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x61, 0x0a, 0x19, 0x61, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x5f, 0x77, 0x69, 0x74, 0x68, 0x5f, 0x62, 0x6c, 0x69, 0x6e, 0x64, 0x69,
	0x6e, 0x67, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x74,
	0x64, 0x65, 0x78, 0x5f, 0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x57, 0x69, 0x74, 0x68, 0x42, 0x6c, 0x69, 0x6e, 0x64, 0x69, 0x6e,
	0x67, 0x4b, 0x65, 0x79, 0x52, 0x16, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x57, 0x69, 0x74,
	0x68, 0x42, 0x6c, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x4b, 0x65, 0x79, 0x22, 0x16, 0x0a, 0x14,
	0x47, 0x65, 0x74, 0x46, 0x65, 0x65, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x22, 0x69, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x46, 0x65, 0x65, 0x42, 0x61,
	0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2b, 0x0a,
	0x11, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x62, 0x61, 0x6c, 0x61, 0x6e,
	0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x10, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61,
	0x62, 0x6c, 0x65, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x5f, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x0c, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x22,
	0x51, 0x0a, 0x17, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x46, 0x65, 0x65, 0x44, 0x65, 0x70, 0x6f, 0x73,
	0x69, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x36, 0x0a, 0x09, 0x6f, 0x75,
	0x74, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e,
	0x74, 0x64, 0x65, 0x78, 0x5f, 0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4f,
	0x75, 0x74, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x09, 0x6f, 0x75, 0x74, 0x70, 0x6f, 0x69, 0x6e,
	0x74, 0x73, 0x22, 0x1a, 0x0a, 0x18, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x46, 0x65, 0x65, 0x44, 0x65,
	0x70, 0x6f, 0x73, 0x69, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xa6,
	0x01, 0x0a, 0x12, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x46, 0x65, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2c, 0x0a,
	0x12, 0x6d, 0x69, 0x6c, 0x6c, 0x69, 0x73, 0x61, 0x74, 0x73, 0x5f, 0x70, 0x65, 0x72, 0x5f, 0x62,
	0x79, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x10, 0x6d, 0x69, 0x6c, 0x6c, 0x69,
	0x73, 0x61, 0x74, 0x73, 0x50, 0x65, 0x72, 0x42, 0x79, 0x74, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x73, 0x73, 0x65, 0x74, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x73, 0x73, 0x65, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x70,
	0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70,
	0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x22, 0x29, 0x0a, 0x13, 0x57, 0x69, 0x74, 0x68, 0x64,
	0x72, 0x61, 0x77, 0x46, 0x65, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x74, 0x78, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x78,
	0x69, 0x64, 0x22, 0xa1, 0x01, 0x0a, 0x10, 0x4e, 0x65, 0x77, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x27, 0x0a, 0x06, 0x6d, 0x61, 0x72, 0x6b, 0x65,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x74, 0x64, 0x65, 0x78, 0x2e, 0x76,
	0x31, 0x2e, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x52, 0x06, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74,
	0x12, 0x30, 0x0a, 0x14, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x61, 0x73, 0x73, 0x65, 0x74, 0x5f, 0x70,
	0x72, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x12,
	0x62, 0x61, 0x73, 0x65, 0x41, 0x73, 0x73, 0x65, 0x74, 0x50, 0x72, 0x65, 0x63, 0x69, 0x73, 0x69,
	0x6f, 0x6e, 0x12, 0x32, 0x0a, 0x15, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x5f, 0x61, 0x73, 0x73, 0x65,
	0x74, 0x5f, 0x70, 0x72, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x13, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x41, 0x73, 0x73, 0x65, 0x74, 0x50, 0x72, 0x65,
	0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x13, 0x0a, 0x11, 0x4e, 0x65, 0x77, 0x4d, 0x61, 0x72,
	0x6b, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x3f, 0x0a, 0x14, 0x47,
	0x65, 0x74, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x27, 0x0a, 0x06, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x74, 0x64, 0x65, 0x78, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x61,
	0x72, 0x6b, 0x65, 0x74, 0x52, 0x06, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x22, 0x47, 0x0a, 0x15,
	0x47, 0x65, 0x74, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x74, 0x64, 0x65, 0x78, 0x5f, 0x64, 0x61, 0x65, 0x6d, 0x6f,
	0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x04, 0x69, 0x6e, 0x66, 0x6f, 0x22, 0x70, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x72, 0x6b,
	0x65, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x27, 0x0a, 0x06, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0f, 0x2e, 0x74, 0x64, 0x65, 0x78, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x61, 0x72, 0x6b, 0x65,
	0x74, 0x52, 0x06, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x12, 0x2c, 0x0a, 0x10, 0x6e, 0x75, 0x6d,
	0x5f, 0x6f, 0x66, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x42, 0x02, 0x30, 0x02, 0x52, 0x0e, 0x6e, 0x75, 0x6d, 0x4f, 0x66, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x22, 0x7d, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x4d, 0x61,
	0x72, 0x6b, 0x65, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x61, 0x0a, 0x19, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x77,
	0x69, 0x74, 0x68, 0x5f, 0x62, 0x6c, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x74, 0x64, 0x65, 0x78, 0x5f, 0x64, 0x61,
	0x65, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x57,
	0x69, 0x74, 0x68, 0x42, 0x6c, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x4b, 0x65, 0x79, 0x52, 0x16,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x57, 0x69, 0x74, 0x68, 0x42, 0x6c, 0x69, 0x6e, 0x64,
	0x69, 0x6e, 0x67, 0x4b, 0x65, 0x79, 0x22, 0x45, 0x0a, 0x1a, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x61,
	0x72, 0x6b, 0x65, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x27, 0x0a, 0x06, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x74, 0x64, 0x65, 0x78, 0x2e, 0x76, 0x31, 0x2e, 0x4d,
	0x61, 0x72, 0x6b, 0x65, 0x74, 0x52, 0x06, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x22, 0x80, 0x01,
	0x0a, 0x1b, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x61, 0x0a,
	0x19, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x77, 0x69, 0x74, 0x68, 0x5f, 0x62, 0x6c,
	0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x26, 0x2e, 0x74, 0x64, 0x65, 0x78, 0x5f, 0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x2e, 0x76,
	0x31, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x57, 0x69, 0x74, 0x68, 0x42, 0x6c, 0x69,
	0x6e, 0x64, 0x69, 0x6e, 0x67, 0x4b, 0x65, 0x79, 0x52, 0x16, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x57, 0x69, 0x74, 0x68, 0x42, 0x6c, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x4b, 0x65, 0x79,
	0x22, 0x42, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x42, 0x61, 0x6c,
	0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x27, 0x0a, 0x06, 0x6d,
	0x61, 0x72, 0x6b, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x74, 0x64,
	0x65, 0x78, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x52, 0x06, 0x6d, 0x61,
	0x72, 0x6b, 0x65, 0x74, 0x22, 0x90, 0x01, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x72, 0x6b,
	0x65, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x3d, 0x0a, 0x11, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x62,
	0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x74,
	0x64, 0x65, 0x78, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x10,
	0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65,
	0x12, 0x35, 0x0a, 0x0d, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x74, 0x64, 0x65, 0x78, 0x2e, 0x76,
	0x31, 0x2e, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x0c, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x22, 0x7d, 0x0a, 0x1a, 0x43, 0x6c, 0x61, 0x69, 0x6d,
	0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x27, 0x0a, 0x06, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x74, 0x64, 0x65, 0x78, 0x2e, 0x76, 0x31, 0x2e,
	0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x52, 0x06, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x12, 0x36,
	0x0a, 0x09, 0x6f, 0x75, 0x74, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x18, 0x2e, 0x74, 0x64, 0x65, 0x78, 0x5f, 0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x2e,
	0x76, 0x31, 0x2e, 0x4f, 0x75, 0x74, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x09, 0x6f, 0x75, 0x74,
	0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x22, 0x1d, 0x0a, 0x1b, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x4d,
	0x61, 0x72, 0x6b, 0x65, 0x74, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x3c, 0x0a, 0x11, 0x4f, 0x70, 0x65, 0x6e, 0x4d, 0x61, 0x72,
	0x6b, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x27, 0x0a, 0x06, 0x6d, 0x61,
	0x72, 0x6b, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x74, 0x64, 0x65,
	0x78, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x52, 0x06, 0x6d, 0x61, 0x72,
	0x6b, 0x65, 0x74, 0x22, 0x14, 0x0a, 0x12, 0x4f, 0x70, 0x65, 0x6e, 0x4d, 0x61, 0x72, 0x6b, 0x65,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x3d, 0x0a, 0x12, 0x43, 0x6c, 0x6f,
	0x73, 0x65, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x27, 0x0a, 0x06, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0f, 0x2e, 0x74, 0x64, 0x65, 0x78, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74,
	0x52, 0x06, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x22, 0x15, 0x0a, 0x13, 0x43, 0x6c, 0x6f, 0x73,
	0x65, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x14, 0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x4b, 0x0a, 0x13, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x61, 0x72,
	0x6b, 0x65, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x34, 0x0a, 0x07,
	0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x74, 0x64, 0x65, 0x78, 0x5f, 0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4d,
	0x61, 0x72, 0x6b, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x07, 0x6d, 0x61, 0x72, 0x6b, 0x65,
	0x74, 0x73, 0x22, 0x3c, 0x0a, 0x11, 0x44, 0x72, 0x6f, 0x70, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x27, 0x0a, 0x06, 0x6d, 0x61, 0x72, 0x6b, 0x65,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x74, 0x64, 0x65, 0x78, 0x2e, 0x76,
	0x31, 0x2e, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x52, 0x06, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74,
	0x22, 0x14, 0x0a, 0x12, 0x44, 0x72, 0x6f, 0x70, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x76, 0x0a, 0x21, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x72,
	0x6b, 0x65, 0x74, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x53, 0x77, 0x61, 0x70,
	0x46, 0x65, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x27, 0x0a, 0x06, 0x6d,
	0x61, 0x72, 0x6b, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x74, 0x64,
	0x65, 0x78, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x52, 0x06, 0x6d, 0x61,
	0x72, 0x6b, 0x65, 0x74, 0x12, 0x28, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x14, 0x2e, 0x74, 0x64, 0x65, 0x78, 0x5f, 0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e,
	0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x22, 0xcc,
	0x02, 0x0a, 0x22, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x43, 0x6f, 0x6c, 0x6c,
	0x65, 0x63, 0x74, 0x65, 0x64, 0x53, 0x77, 0x61, 0x70, 0x46, 0x65, 0x65, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3e, 0x0a, 0x0e, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74,
	0x65, 0x64, 0x5f, 0x66, 0x65, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e,
	0x74, 0x64, 0x65, 0x78, 0x5f, 0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x46,
	0x65, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0d, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x65,
	0x64, 0x46, 0x65, 0x65, 0x73, 0x12, 0x96, 0x01, 0x0a, 0x1e, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f,
	0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x5f, 0x66, 0x65, 0x65, 0x73, 0x5f, 0x70,
	0x65, 0x72, 0x5f, 0x61, 0x73, 0x73, 0x65, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x52,
	0x2e, 0x74, 0x64, 0x65, 0x78, 0x5f, 0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e,
	0x47, 0x65, 0x74, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74,
	0x65, 0x64, 0x53, 0x77, 0x61, 0x70, 0x46, 0x65, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x2e, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x65,
	0x64, 0x46, 0x65, 0x65, 0x73, 0x50, 0x65, 0x72, 0x41, 0x73, 0x73, 0x65, 0x74, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x52, 0x1a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74,
	0x65, 0x64, 0x46, 0x65, 0x65, 0x73, 0x50, 0x65, 0x72, 0x41, 0x73, 0x73, 0x65, 0x74, 0x1a, 0x4d,
	0x0a, 0x1f, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64,
	0x46, 0x65, 0x65, 0x73, 0x50, 0x65, 0x72, 0x41, 0x73, 0x73, 0x65, 0x74, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xe6, 0x01,
	0x0a, 0x15, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x27, 0x0a, 0x06, 0x6d, 0x61, 0x72, 0x6b, 0x65,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x74, 0x64, 0x65, 0x78, 0x2e, 0x76,
	0x31, 0x2e, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x52, 0x06, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74,
	0x12, 0x40, 0x0a, 0x13, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x74, 0x6f, 0x5f, 0x77,
	0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e,
	0x74, 0x64, 0x65, 0x78, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52,
	0x11, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x54, 0x6f, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72,
	0x61, 0x77, 0x12, 0x2c, 0x0a, 0x12, 0x6d, 0x69, 0x6c, 0x6c, 0x69, 0x73, 0x61, 0x74, 0x73, 0x5f,
	0x70, 0x65, 0x72, 0x5f, 0x62, 0x79, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x10,
	0x6d, 0x69, 0x6c, 0x6c, 0x69, 0x73, 0x61, 0x74, 0x73, 0x50, 0x65, 0x72, 0x42, 0x79, 0x74, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61,
	0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61,
	0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x22, 0x2c, 0x0a, 0x16, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72,
	0x61, 0x77, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x74, 0x78, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x74, 0x78, 0x69, 0x64, 0x22, 0x70, 0x0a, 0x20, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x61,
	0x72, 0x6b, 0x65, 0x74, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x46, 0x65,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x27, 0x0a, 0x06, 0x6d, 0x61, 0x72, 0x6b,
	0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x74, 0x64, 0x65, 0x78, 0x2e,
	0x76, 0x31, 0x2e, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x52, 0x06, 0x6d, 0x61, 0x72, 0x6b, 0x65,
	0x74, 0x12, 0x23, 0x0a, 0x0b, 0x62, 0x61, 0x73, 0x69, 0x73, 0x5f, 0x70, 0x6f, 0x69, 0x6e, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x42, 0x02, 0x30, 0x02, 0x52, 0x0a, 0x62, 0x61, 0x73, 0x69,
	0x73, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x22, 0x63, 0x0a, 0x21, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65,
	0x46, 0x65, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3e, 0x0a, 0x0f, 0x6d,
	0x61, 0x72, 0x6b, 0x65, 0x74, 0x5f, 0x77, 0x69, 0x74, 0x68, 0x5f, 0x66, 0x65, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x74, 0x64, 0x65, 0x78, 0x2e, 0x76, 0x31, 0x2e, 0x4d,
	0x61, 0x72, 0x6b, 0x65, 0x74, 0x57, 0x69, 0x74, 0x68, 0x46, 0x65, 0x65, 0x52, 0x0d, 0x6d, 0x61,
	0x72, 0x6b, 0x65, 0x74, 0x57, 0x69, 0x74, 0x68, 0x46, 0x65, 0x65, 0x22, 0x6c, 0x0a, 0x1b, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x46, 0x69, 0x78, 0x65, 0x64,
	0x46, 0x65, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x27, 0x0a, 0x06, 0x6d, 0x61,
	0x72, 0x6b, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x74, 0x64, 0x65,
	0x78, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x52, 0x06, 0x6d, 0x61, 0x72,
	0x6b, 0x65, 0x74, 0x12, 0x24, 0x0a, 0x05, 0x66, 0x69, 0x78, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x74, 0x64, 0x65, 0x78, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x69, 0x78,
	0x65, 0x64, 0x52, 0x05, 0x66, 0x69, 0x78, 0x65, 0x64, 0x22, 0x5e, 0x0a, 0x1c, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x46, 0x69, 0x78, 0x65, 0x64, 0x46, 0x65,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3e, 0x0a, 0x0f, 0x6d, 0x61, 0x72,
	0x6b, 0x65, 0x74, 0x5f, 0x77, 0x69, 0x74, 0x68, 0x5f, 0x66, 0x65, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x16, 0x2e, 0x74, 0x64, 0x65, 0x78, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x61, 0x72,
	0x6b, 0x65, 0x74, 0x57, 0x69, 0x74, 0x68, 0x46, 0x65, 0x65, 0x52, 0x0d, 0x6d, 0x61, 0x72, 0x6b,
	0x65, 0x74, 0x57, 0x69, 0x74, 0x68, 0x46, 0x65, 0x65, 0x22, 0xb3, 0x01, 0x0a, 0x22, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x41, 0x73, 0x73, 0x65, 0x74, 0x73,
	0x50, 0x72, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x27, 0x0a, 0x06, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0f, 0x2e, 0x74, 0x64, 0x65, 0x78, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x61, 0x72, 0x6b, 0x65,
	0x74, 0x52, 0x06, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x12, 0x30, 0x0a, 0x14, 0x62, 0x61, 0x73,
	0x65, 0x5f, 0x61, 0x73, 0x73, 0x65, 0x74, 0x5f, 0x70, 0x72, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x12, 0x62, 0x61, 0x73, 0x65, 0x41, 0x73, 0x73,
	0x65, 0x74, 0x50, 0x72, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x32, 0x0a, 0x15, 0x71,
	0x75, 0x6f, 0x74, 0x65, 0x5f, 0x61, 0x73, 0x73, 0x65, 0x74, 0x5f, 0x70, 0x72, 0x65, 0x63, 0x69,
	0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x13, 0x71, 0x75, 0x6f, 0x74,
	0x65, 0x41, 0x73, 0x73, 0x65, 0x74, 0x50, 0x72, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x22,
	0x25, 0x0a, 0x23, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x41,
	0x73, 0x73, 0x65, 0x74, 0x73, 0x50, 0x72, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x69, 0x0a, 0x18, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x27, 0x0a, 0x06, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x74, 0x64, 0x65, 0x78, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x61, 0x72,
	0x6b, 0x65, 0x74, 0x52, 0x06, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x12, 0x24, 0x0a, 0x05, 0x70,
	0x72, 0x69, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x74, 0x64, 0x65,
	0x78, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x69, 0x63, 0x65, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63,
	0x65, 0x22, 0x1b, 0x0a, 0x19, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x72, 0x6b, 0x65,
	0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xa5,
	0x01, 0x0a, 0x1b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x53,
	0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x27,
	0x0a, 0x06, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f,
	0x2e, 0x74, 0x64, 0x65, 0x78, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x52,
	0x06, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x12, 0x41, 0x0a, 0x0d, 0x73, 0x74, 0x72, 0x61, 0x74,
	0x65, 0x67, 0x79, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1c,
	0x2e, 0x74, 0x64, 0x65, 0x78, 0x5f, 0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e,
	0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0c, 0x73, 0x74,
	0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x22, 0x1e, 0x0a, 0x1c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x4e, 0x0a, 0x1e, 0x47, 0x65, 0x74, 0x46, 0x65, 0x65,
	0x46, 0x72, 0x61, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2c, 0x0a, 0x10, 0x6e, 0x75, 0x6d, 0x5f,
	0x6f, 0x66, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x42, 0x02, 0x30, 0x02, 0x52, 0x0e, 0x6e, 0x75, 0x6d, 0x4f, 0x66, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x22, 0x84, 0x01, 0x0a, 0x1f, 0x47, 0x65, 0x74, 0x46, 0x65,
	0x65, 0x46, 0x72, 0x61, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x61, 0x0a, 0x19, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x77, 0x69, 0x74, 0x68, 0x5f, 0x62, 0x6c, 0x69, 0x6e, 0x64,
	0x69, 0x6e, 0x67, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e,
	0x74, 0x64, 0x65, 0x78, 0x5f, 0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x57, 0x69, 0x74, 0x68, 0x42, 0x6c, 0x69, 0x6e, 0x64, 0x69,
	0x6e, 0x67, 0x4b, 0x65, 0x79, 0x52, 0x16, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x57, 0x69,
	0x74, 0x68, 0x42, 0x6c, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x4b, 0x65, 0x79, 0x22, 0x23, 0x0a,
	0x21, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x65, 0x65, 0x46, 0x72, 0x61, 0x67, 0x6d, 0x65, 0x6e, 0x74,
	0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x22, 0x87, 0x01, 0x0a, 0x22, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x65, 0x65, 0x46, 0x72,
	0x61, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x61, 0x0a, 0x19, 0x61, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x5f, 0x77, 0x69, 0x74, 0x68, 0x5f, 0x62, 0x6c, 0x69, 0x6e, 0x64, 0x69,
	0x6e, 0x67, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x74,
	0x64, 0x65, 0x78, 0x5f, 0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x57, 0x69, 0x74, 0x68, 0x42, 0x6c, 0x69, 0x6e, 0x64, 0x69, 0x6e,
	0x67, 0x4b, 0x65, 0x79, 0x52, 0x16, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x57, 0x69, 0x74,
	0x68, 0x42, 0x6c, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x4b, 0x65, 0x79, 0x22, 0x20, 0x0a, 0x1e,
	0x47, 0x65, 0x74, 0x46, 0x65, 0x65, 0x46, 0x72, 0x61, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x65, 0x72,
	0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0xd2,
	0x01, 0x0a, 0x1f, 0x47, 0x65, 0x74, 0x46, 0x65, 0x65, 0x46, 0x72, 0x61, 0x67, 0x6d, 0x65, 0x6e,
	0x74, 0x65, 0x72, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x56, 0x0a, 0x07, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x3c, 0x2e, 0x74, 0x64, 0x65, 0x78, 0x5f, 0x64, 0x61, 0x65, 0x6d, 0x6f,
	0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x46, 0x65, 0x65, 0x46, 0x72, 0x61, 0x67, 0x6d,
	0x65, 0x6e, 0x74, 0x65, 0x72, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x07, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x1a, 0x57, 0x0a, 0x0c, 0x42, 0x61,
	0x6c, 0x61, 0x6e, 0x63, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x31, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x74, 0x64,
	0x65, 0x78, 0x5f, 0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x61, 0x6c,
	0x61, 0x6e, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a,
	0x02, 0x38, 0x01, 0x22, 0x73, 0x0a, 0x1e, 0x46, 0x65, 0x65, 0x46, 0x72, 0x61, 0x67, 0x6d, 0x65,
	0x6e, 0x74, 0x65, 0x72, 0x53, 0x70, 0x6c, 0x69, 0x74, 0x46, 0x75, 0x6e, 0x64, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x6d, 0x61, 0x78, 0x5f, 0x66, 0x72, 0x61,
	0x67, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x6d, 0x61,
	0x78, 0x46, 0x72, 0x61, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x2c, 0x0a, 0x12, 0x6d, 0x69,
	0x6c, 0x6c, 0x69, 0x73, 0x61, 0x74, 0x73, 0x5f, 0x70, 0x65, 0x72, 0x5f, 0x62, 0x79, 0x74, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x10, 0x6d, 0x69, 0x6c, 0x6c, 0x69, 0x73, 0x61, 0x74,
	0x73, 0x50, 0x65, 0x72, 0x42, 0x79, 0x74, 0x65, 0x22, 0x3b, 0x0a, 0x1f, 0x46, 0x65, 0x65, 0x46,
	0x72, 0x61, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x53, 0x70, 0x6c, 0x69, 0x74, 0x46, 0x75,
	0x6e, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x82, 0x01, 0x0a, 0x1c, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72,
	0x61, 0x77, 0x46, 0x65, 0x65, 0x46, 0x72, 0x61, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x12, 0x2c, 0x0a, 0x12, 0x6d, 0x69, 0x6c, 0x6c, 0x69, 0x73, 0x61, 0x74, 0x73, 0x5f, 0x70, 0x65,
	0x72, 0x5f, 0x62, 0x79, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x10, 0x6d, 0x69,
	0x6c, 0x6c, 0x69, 0x73, 0x61, 0x74, 0x73, 0x50, 0x65, 0x72, 0x42, 0x79, 0x74, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x22, 0x33, 0x0a, 0x1d, 0x57, 0x69,
	0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x46, 0x65, 0x65, 0x46, 0x72, 0x61, 0x67, 0x6d, 0x65, 0x6e,
	0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74,
	0x78, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x78, 0x69, 0x64, 0x22,
	0x51, 0x0a, 0x21, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x46, 0x72, 0x61, 0x67,
	0x6d, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x2c, 0x0a, 0x10, 0x6e, 0x75, 0x6d, 0x5f, 0x6f, 0x66, 0x5f, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x42, 0x02,
	0x30, 0x02, 0x52, 0x0e, 0x6e, 0x75, 0x6d, 0x4f, 0x66, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x65, 0x73, 0x22, 0x87, 0x01, 0x0a, 0x22, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74,
	0x46, 0x72, 0x61, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x61, 0x0a, 0x19, 0x61, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x5f, 0x77, 0x69, 0x74, 0x68, 0x5f, 0x62, 0x6c, 0x69, 0x6e, 0x64, 0x69,
	0x6e, 0x67, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x74,
	0x64, 0x65, 0x78, 0x5f, 0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x57, 0x69, 0x74, 0x68, 0x42, 0x6c, 0x69, 0x6e, 0x64, 0x69, 0x6e,
	0x67, 0x4b, 0x65, 0x79, 0x52, 0x16, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x57, 0x69, 0x74,
	0x68, 0x42, 0x6c, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x4b, 0x65, 0x79, 0x22, 0x26, 0x0a, 0x24,
	0x4c, 0x69, 0x73, 0x74, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x46, 0x72, 0x61, 0x67, 0x6d, 0x65,
	0x6e, 0x74, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x22, 0x8a, 0x01, 0x0a, 0x25, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x61, 0x72,
	0x6b, 0x65, 0x74, 0x46, 0x72, 0x61, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x61,
	0x0a, 0x19, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x77, 0x69, 0x74, 0x68, 0x5f, 0x62,
	0x6c, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x26, 0x2e, 0x74, 0x64, 0x65, 0x78, 0x5f, 0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x2e,
	0x76, 0x31, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x57, 0x69, 0x74, 0x68, 0x42, 0x6c,
	0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x4b, 0x65, 0x79, 0x52, 0x16, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x57, 0x69, 0x74, 0x68, 0x42, 0x6c, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x4b, 0x65,
	0x79, 0x22, 0x23, 0x0a, 0x21, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x46, 0x72,
	0x61, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0xd8, 0x01, 0x0a, 0x22, 0x47, 0x65, 0x74, 0x4d, 0x61,
	0x72, 0x6b, 0x65, 0x74, 0x46, 0x72, 0x61, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x42, 0x61,
	0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x59, 0x0a,
	0x07, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3f,
	0x2e, 0x74, 0x64, 0x65, 0x78, 0x5f, 0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e,
	0x47, 0x65, 0x74, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x46, 0x72, 0x61, 0x67, 0x6d, 0x65, 0x6e,
	0x74, 0x65, 0x72, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x2e, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52,
	0x07, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x1a, 0x57, 0x0a, 0x0c, 0x42, 0x61, 0x6c, 0x61,
	0x6e, 0x63, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x31, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x74, 0x64, 0x65, 0x78,
	0x5f, 0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x61, 0x6c, 0x61, 0x6e,
	0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38,
	0x01, 0x22, 0x7a, 0x0a, 0x21, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x46, 0x72, 0x61, 0x67, 0x6d,
	0x65, 0x6e, 0x74, 0x65, 0x72, 0x53, 0x70, 0x6c, 0x69, 0x74, 0x46, 0x75, 0x6e, 0x64, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x27, 0x0a, 0x06, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x74, 0x64, 0x65, 0x78, 0x2e, 0x76, 0x31,
	0x2e, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x52, 0x06, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x12,
	0x2c, 0x0a, 0x12, 0x6d, 0x69, 0x6c, 0x6c, 0x69, 0x73, 0x61, 0x74, 0x73, 0x5f, 0x70, 0x65, 0x72,
	0x5f, 0x62, 0x79, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x10, 0x6d, 0x69, 0x6c,
	0x6c, 0x69, 0x73, 0x61, 0x74, 0x73, 0x50, 0x65, 0x72, 0x42, 0x79, 0x74, 0x65, 0x22, 0x3e, 0x0a,
	0x22, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x46, 0x72, 0x61, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x65,
	0x72, 0x53, 0x70, 0x6c, 0x69, 0x74, 0x46, 0x75, 0x6e, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x85, 0x01,
	0x0a, 0x1f, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74,
	0x46, 0x72, 0x61, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x2c, 0x0a, 0x12, 0x6d,
	0x69, 0x6c, 0x6c, 0x69, 0x73, 0x61, 0x74, 0x73, 0x5f, 0x70, 0x65, 0x72, 0x5f, 0x62, 0x79, 0x74,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x10, 0x6d, 0x69, 0x6c, 0x6c, 0x69, 0x73, 0x61,
	0x74, 0x73, 0x50, 0x65, 0x72, 0x42, 0x79, 0x74, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73,
	0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73,
	0x73, 0x77, 0x6f, 0x72, 0x64, 0x22, 0x36, 0x0a, 0x20, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61,
	0x77, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x46, 0x72, 0x61, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x65,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x78, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x78, 0x69, 0x64, 0x22, 0x66, 0x0a,
	0x11, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x72, 0x61, 0x64, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x27, 0x0a, 0x06, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x74, 0x64, 0x65, 0x78, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x61, 0x72,
	0x6b, 0x65, 0x74, 0x52, 0x06, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x12, 0x28, 0x0a, 0x04, 0x70,
	0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x74, 0x64, 0x65, 0x78,
	0x5f, 0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x52,
	0x04, 0x70, 0x61, 0x67, 0x65, 0x22, 0x47, 0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x72, 0x61,
	0x64, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x31, 0x0a, 0x06, 0x74,
	0x72, 0x61, 0x64, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x74, 0x64,
	0x65, 0x78, 0x5f, 0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x72, 0x61,
	0x64, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x06, 0x74, 0x72, 0x61, 0x64, 0x65, 0x73, 0x22, 0x14,
	0x0a, 0x12, 0x52, 0x65, 0x6c, 0x6f, 0x61, 0x64, 0x55, 0x74, 0x78, 0x6f, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x22, 0x15, 0x0a, 0x13, 0x52, 0x65, 0x6c, 0x6f, 0x61, 0x64, 0x55, 0x74,
	0x78, 0x6f, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x65, 0x0a, 0x10, 0x4c,
	0x69, 0x73, 0x74, 0x55, 0x74, 0x78, 0x6f, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x27, 0x0a, 0x0d, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x42, 0x02, 0x30, 0x02, 0x52, 0x0c, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x28, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x74, 0x64, 0x65, 0x78, 0x5f, 0x64, 0x61,
	0x65, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x52, 0x04, 0x70, 0x61,
	0x67, 0x65, 0x22, 0xab, 0x01, 0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74, 0x55, 0x74, 0x78, 0x6f, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x34, 0x0a, 0x08, 0x75, 0x6e, 0x73, 0x70,
	0x65, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x74, 0x64, 0x65,
	0x78, 0x5f, 0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x74, 0x78, 0x6f,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x75, 0x6e, 0x73, 0x70, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x30,
	0x0a, 0x06, 0x73, 0x70, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18,
	0x2e, 0x74, 0x64, 0x65, 0x78, 0x5f, 0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e,
	0x55, 0x74, 0x78, 0x6f, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x06, 0x73, 0x70, 0x65, 0x6e, 0x74, 0x73,
	0x12, 0x2e, 0x0a, 0x05, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x18, 0x2e, 0x74, 0x64, 0x65, 0x78, 0x5f, 0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31,
	0x2e, 0x55, 0x74, 0x78, 0x6f, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x6c, 0x6f, 0x63, 0x6b, 0x73,
	0x22, 0x7b, 0x0a, 0x11, 0x41, 0x64, 0x64, 0x57, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e,
	0x74, 0x12, 0x32, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x1a, 0x2e, 0x74, 0x64, 0x65, 0x78, 0x5f, 0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x2e,
	0x76, 0x31, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x06, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x22, 0x24, 0x0a,
	0x12, 0x41, 0x64, 0x64, 0x57, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x22, 0x26, 0x0a, 0x14, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x57, 0x65, 0x62,
	0x68, 0x6f, 0x6f, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x17, 0x0a, 0x15, 0x52,
	0x65, 0x6d, 0x6f, 0x76, 0x65, 0x57, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x49, 0x0a, 0x13, 0x4c, 0x69, 0x73, 0x74, 0x57, 0x65, 0x62, 0x68,
	0x6f, 0x6f, 0x6b, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x32, 0x0a, 0x06, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1a, 0x2e, 0x74, 0x64,
	0x65, 0x78, 0x5f, 0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22,
	0x56, 0x0a, 0x14, 0x4c, 0x69, 0x73, 0x74, 0x57, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3e, 0x0a, 0x0c, 0x77, 0x65, 0x62, 0x68, 0x6f,
	0x6f, 0x6b, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e,
	0x74, 0x64, 0x65, 0x78, 0x5f, 0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x57,
	0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0b, 0x77, 0x65, 0x62, 0x68,
	0x6f, 0x6f, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x68, 0x0a, 0x13, 0x4c, 0x69, 0x73, 0x74, 0x44,
	0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x27,
	0x0a, 0x0d, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x42, 0x02, 0x30, 0x02, 0x52, 0x0c, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x28, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x74, 0x64, 0x65, 0x78, 0x5f, 0x64, 0x61, 0x65,
	0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x52, 0x04, 0x70, 0x61, 0x67,
	0x65, 0x22, 0x74, 0x0a, 0x14, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x27, 0x0a, 0x0d, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x42, 0x02, 0x30, 0x02, 0x52, 0x0c, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e, 0x64,
	0x65, 0x78, 0x12, 0x33, 0x0a, 0x08, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x74, 0x64, 0x65, 0x78, 0x5f, 0x64, 0x61, 0x65, 0x6d,
	0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x52, 0x08, 0x64,
	0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x73, 0x22, 0x6b, 0x0a, 0x16, 0x4c, 0x69, 0x73, 0x74, 0x57,
	0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x61, 0x6c, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x27, 0x0a, 0x0d, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x6e, 0x64,
	0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x42, 0x02, 0x30, 0x02, 0x52, 0x0c, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x28, 0x0a, 0x04, 0x70, 0x61,
	0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x74, 0x64, 0x65, 0x78, 0x5f,
	0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x52, 0x04,
	0x70, 0x61, 0x67, 0x65, 0x22, 0x80, 0x01, 0x0a, 0x17, 0x4c, 0x69, 0x73, 0x74, 0x57, 0x69, 0x74,
	0x68, 0x64, 0x72, 0x61, 0x77, 0x61, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x27, 0x0a, 0x0d, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x6e, 0x64, 0x65,
	0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x42, 0x02, 0x30, 0x02, 0x52, 0x0c, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x3c, 0x0a, 0x0b, 0x77, 0x69, 0x74,
	0x68, 0x64, 0x72, 0x61, 0x77, 0x61, 0x6c, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x74, 0x64, 0x65, 0x78, 0x5f, 0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e,
	0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x61, 0x6c, 0x52, 0x0b, 0x77, 0x69, 0x74, 0x68,
	0x64, 0x72, 0x61, 0x77, 0x61, 0x6c, 0x73, 0x22, 0xb5, 0x01, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x4d,
	0x61, 0x72, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x27, 0x0a, 0x06, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x74, 0x64, 0x65, 0x78, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x61, 0x72,
	0x6b, 0x65, 0x74, 0x52, 0x06, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x12, 0x38, 0x0a, 0x0a, 0x74,
	0x69, 0x6d, 0x65, 0x5f, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x19, 0x2e, 0x74, 0x64, 0x65, 0x78, 0x5f, 0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65,
	0x52, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x38, 0x0a, 0x0a, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x66, 0x72,
	0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x74, 0x64, 0x65, 0x78,
	0x5f, 0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x46,
	0x72, 0x61, 0x6d, 0x65, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x22,
	0x4f, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x70, 0x6f,
	0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x34, 0x0a, 0x06, 0x72, 0x65,
	0x70, 0x6f, 0x72, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x74, 0x64, 0x65,
	0x78, 0x5f, 0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x61, 0x72, 0x6b,
	0x65, 0x74, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x06, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74,
	0x32, 0xd2, 0x23, 0x0a, 0x0f, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x12, 0x4c, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x1e, 0x2e, 0x74, 0x64, 0x65, 0x78, 0x5f, 0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1f, 0x2e, 0x74, 0x64, 0x65, 0x78, 0x5f, 0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x5e, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x46, 0x65, 0x65, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x12, 0x24, 0x2e, 0x74, 0x64, 0x65, 0x78, 0x5f, 0x64, 0x61, 0x65, 0x6d, 0x6f,
	0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x46, 0x65, 0x65, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x74, 0x64, 0x65, 0x78,
	0x5f, 0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x46, 0x65,
	0x65, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x67, 0x0a, 0x10, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x65, 0x65, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x12, 0x27, 0x2e, 0x74, 0x64, 0x65, 0x78, 0x5f, 0x64, 0x61,
	0x65, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x65, 0x65, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x28, 0x2e, 0x74, 0x64, 0x65, 0x78, 0x5f, 0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x65, 0x65, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5e, 0x0a, 0x0d, 0x47,
	0x65, 0x74, 0x46, 0x65, 0x65, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x24, 0x2e, 0x74,
	0x64, 0x65, 0x78, 0x5f, 0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65,
	0x74, 0x46, 0x65, 0x65, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x25, 0x2e, 0x74, 0x64, 0x65, 0x78, 0x5f, 0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x46, 0x65, 0x65, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x67, 0x0a, 0x10, 0x43,
	0x6c, 0x61, 0x69, 0x6d, 0x46, 0x65, 0x65, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x73, 0x12,
	0x27, 0x2e, 0x74, 0x64, 0x65, 0x78, 0x5f, 0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31,
	0x2e, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x46, 0x65, 0x65, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x74, 0x64, 0x65, 0x78, 0x5f,
	0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x46,
	0x65, 0x65, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x58, 0x0a, 0x0b, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77,
	0x46, 0x65, 0x65, 0x12, 0x22, 0x2e, 0x74, 0x64, 0x65, 0x78, 0x5f, 0x64, 0x61, 0x65, 0x6d, 0x6f,
	0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x46, 0x65, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x74, 0x64, 0x65, 0x78, 0x5f, 0x64,
	0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61,
	0x77, 0x46, 0x65, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x52,
	0x0a, 0x09, 0x4e, 0x65, 0x77, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x12, 0x20, 0x2e, 0x74, 0x64,
	0x65, 0x78, 0x5f, 0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x65, 0x77,
	0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e,
	0x74, 0x64, 0x65, 0x78, 0x5f, 0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4e,
	0x65, 0x77, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x5e, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x24, 0x2e, 0x74, 0x64, 0x65, 0x78, 0x5f, 0x64, 0x61, 0x65, 0x6d, 0x6f,
	0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x74, 0x64, 0x65, 0x78,
	0x5f, 0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x61,
	0x72, 0x6b, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x67, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x27, 0x2e, 0x74, 0x64, 0x65, 0x78, 0x5f, 0x64, 0x61,
	0x65, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x72, 0x6b, 0x65,
	0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x28, 0x2e, 0x74, 0x64, 0x65, 0x78, 0x5f, 0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x70, 0x0a, 0x13, 0x4c,
	0x69, 0x73, 0x74, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x65, 0x73, 0x12, 0x2a, 0x2e, 0x74, 0x64, 0x65, 0x78, 0x5f, 0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e,
	0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b,
	0x2e, 0x74, 0x64, 0x65, 0x78, 0x5f, 0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x67, 0x0a,
	0x10, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63,
	0x65, 0x12, 0x27, 0x2e, 0x74, 0x64, 0x65, 0x78, 0x5f, 0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x42, 0x61, 0x6c, 0x61,
	0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x74, 0x64, 0x65,
	0x78, 0x5f, 0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4d,
	0x61, 0x72, 0x6b, 0x65, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x70, 0x0a, 0x13, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x4d,
	0x61, 0x72, 0x6b, 0x65, 0x74, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x73, 0x12, 0x2a, 0x2e,
	0x74, 0x64, 0x65, 0x78, 0x5f, 0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x43,
	0x6c, 0x61, 0x69, 0x6d, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69,
	0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x74, 0x64, 0x65, 0x78,
	0x5f, 0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6c, 0x61, 0x69, 0x6d,
	0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x55, 0x0a, 0x0a, 0x4f, 0x70, 0x65, 0x6e,
	0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x12, 0x21, 0x2e, 0x74, 0x64, 0x65, 0x78, 0x5f, 0x64, 0x61,
	0x65, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x4d, 0x61, 0x72, 0x6b,
	0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x74, 0x64, 0x65, 0x78,
	0x5f, 0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x4d,
	0x61, 0x72, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x58, 0x0a, 0x0b, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x12, 0x22,
	0x2e, 0x74, 0x64, 0x65, 0x78, 0x5f, 0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e,
	0x43, 0x6c, 0x6f, 0x73, 0x65, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x23, 0x2e, 0x74, 0x64, 0x65, 0x78, 0x5f, 0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e,
	0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x55, 0x0a, 0x0a, 0x44, 0x72, 0x6f,
	0x70, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x12, 0x21, 0x2e, 0x74, 0x64, 0x65, 0x78, 0x5f, 0x64,
	0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x72, 0x6f, 0x70, 0x4d, 0x61, 0x72,
	0x6b, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x74, 0x64, 0x65,
	0x78, 0x5f, 0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x72, 0x6f, 0x70,
	0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x85, 0x01, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x43, 0x6f,
	0x6c, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x53, 0x77, 0x61, 0x70, 0x46, 0x65, 0x65, 0x73, 0x12,
	0x31, 0x2e, 0x74, 0x64, 0x65, 0x78, 0x5f, 0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63,
	0x74, 0x65, 0x64, 0x53, 0x77, 0x61, 0x70, 0x46, 0x65, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x32, 0x2e, 0x74, 0x64, 0x65, 0x78, 0x5f, 0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x43, 0x6f, 0x6c,
	0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x53, 0x77, 0x61, 0x70, 0x46, 0x65, 0x65, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x61, 0x0a, 0x0e, 0x57, 0x69, 0x74, 0x68,
	0x64, 0x72, 0x61, 0x77, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x12, 0x25, 0x2e, 0x74, 0x64, 0x65,
	0x78, 0x5f, 0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x69, 0x74, 0x68,
	0x64, 0x72, 0x61, 0x77, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x26, 0x2e, 0x74, 0x64, 0x65, 0x78, 0x5f, 0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x2e,
	0x76, 0x31, 0x2e, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x4d, 0x61, 0x72, 0x6b, 0x65,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x82, 0x01, 0x0a, 0x19,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x50, 0x65, 0x72, 0x63,
	0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x46, 0x65, 0x65, 0x12, 0x30, 0x2e, 0x74, 0x64, 0x65, 0x78,
	0x5f, 0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67,
	0x65, 0x46, 0x65, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x31, 0x2e, 0x74, 0x64,
	0x65, 0x78, 0x5f, 0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74,
	0x61, 0x67, 0x65, 0x46, 0x65, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x73, 0x0a, 0x14, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74,
	0x46, 0x69, 0x78, 0x65, 0x64, 0x46, 0x65, 0x65, 0x12, 0x2b, 0x2e, 0x74, 0x64, 0x65, 0x78, 0x5f,
	0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x46, 0x69, 0x78, 0x65, 0x64, 0x46, 0x65, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x74, 0x64, 0x65, 0x78, 0x5f, 0x64, 0x61, 0x65,
	0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x72,
	0x6b, 0x65, 0x74, 0x46, 0x69, 0x78, 0x65, 0x64, 0x46, 0x65, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x88, 0x01, 0x0a, 0x1b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x41, 0x73, 0x73, 0x65, 0x74, 0x73, 0x50, 0x72, 0x65, 0x63,
	0x69, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x32, 0x2e, 0x74, 0x64, 0x65, 0x78, 0x5f, 0x64, 0x61, 0x65,
	0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x72,
	0x6b, 0x65, 0x74, 0x41, 0x73, 0x73, 0x65, 0x74, 0x73, 0x50, 0x72, 0x65, 0x63, 0x69, 0x73, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x33, 0x2e, 0x74, 0x64, 0x65, 0x78,
	0x5f, 0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x41, 0x73, 0x73, 0x65, 0x74, 0x73, 0x50, 0x72, 0x65,
	0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x6a, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74,
	0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x28, 0x2e, 0x74, 0x64, 0x65, 0x78, 0x5f, 0x64, 0x61, 0x65,
	0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x72,
	0x6b, 0x65, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x29, 0x2e, 0x74, 0x64, 0x65, 0x78, 0x5f, 0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x50, 0x72, 0x69,
	0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x73, 0x0a, 0x14,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x53, 0x74, 0x72, 0x61,
	0x74, 0x65, 0x67, 0x79, 0x12, 0x2b, 0x2e, 0x74, 0x64, 0x65, 0x78, 0x5f, 0x64, 0x61, 0x65, 0x6d,
	0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x72, 0x6b,
	0x65, 0x74, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x2c, 0x2e, 0x74, 0x64, 0x65, 0x78, 0x5f, 0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x2e,
	0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x53,
	0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x7c, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x46, 0x65, 0x65, 0x46, 0x72, 0x61, 0x67, 0x6d,
	0x65, 0x6e, 0x74, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x2e, 0x2e, 0x74,
	0x64, 0x65, 0x78, 0x5f, 0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65,
	0x74, 0x46, 0x65, 0x65, 0x46, 0x72, 0x61, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2f, 0x2e, 0x74,
	0x64, 0x65, 0x78, 0x5f, 0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65,
	0x74, 0x46, 0x65, 0x65, 0x46, 0x72, 0x61, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x85, 0x01, 0x0a, 0x1a, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x65, 0x65, 0x46, 0x72, 0x61, 0x67, 0x6d,
	0x65, 0x6e, 0x74, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x12, 0x31,
	0x2e, 0x74, 0x64, 0x65, 0x78, 0x5f, 0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x46, 0x65, 0x65, 0x46, 0x72, 0x61, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x65,
	0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x32, 0x2e, 0x74, 0x64, 0x65, 0x78, 0x5f, 0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x2e,
	0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x65, 0x65, 0x46, 0x72, 0x61, 0x67, 0x6d, 0x65,
	0x6e, 0x74, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x7c, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x46, 0x65,
	0x65, 0x46, 0x72, 0x61, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x42, 0x61, 0x6c, 0x61, 0x6e,
	0x63, 0x65, 0x12, 0x2e, 0x2e, 0x74, 0x64, 0x65, 0x78, 0x5f, 0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x46, 0x65, 0x65, 0x46, 0x72, 0x61, 0x67, 0x6d, 0x65,
	0x6e, 0x74, 0x65, 0x72, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x2f, 0x2e, 0x74, 0x64, 0x65, 0x78, 0x5f, 0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x46, 0x65, 0x65, 0x46, 0x72, 0x61, 0x67, 0x6d, 0x65,
	0x6e, 0x74, 0x65, 0x72, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x7e, 0x0a, 0x17, 0x46, 0x65, 0x65, 0x46, 0x72, 0x61, 0x67,
	0x6d, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x53, 0x70, 0x6c, 0x69, 0x74, 0x46, 0x75, 0x6e, 0x64, 0x73,
	0x12, 0x2e, 0x2e, 0x74, 0x64, 0x65, 0x78, 0x5f, 0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x2e, 0x76,
	0x31, 0x2e, 0x46, 0x65, 0x65, 0x46, 0x72, 0x61, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x53,
	0x70, 0x6c, 0x69, 0x74, 0x46, 0x75, 0x6e, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x2f, 0x2e, 0x74, 0x64, 0x65, 0x78, 0x5f, 0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x2e, 0x76,
	0x31, 0x2e, 0x46, 0x65, 0x65, 0x46, 0x72, 0x61, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x53,
	0x70, 0x6c, 0x69, 0x74, 0x46, 0x75, 0x6e, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x30, 0x01, 0x12, 0x76, 0x0a, 0x15, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61,
	0x77, 0x46, 0x65, 0x65, 0x46, 0x72, 0x61, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x12, 0x2c,
	0x2e, 0x74, 0x64, 0x65, 0x78, 0x5f, 0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e,
	0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x46, 0x65, 0x65, 0x46, 0x72, 0x61, 0x67, 0x6d,
	0x65, 0x6e, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2d, 0x2e, 0x74,
	0x64, 0x65, 0x78, 0x5f, 0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x69,
	0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x46, 0x65, 0x65, 0x46, 0x72, 0x61, 0x67, 0x6d, 0x65, 0x6e,
	0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x85, 0x01,
	0x0a, 0x1a, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x46, 0x72, 0x61, 0x67, 0x6d,
	0x65, 0x6e, 0x74, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x31, 0x2e, 0x74,
	0x64, 0x65, 0x78, 0x5f, 0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65,
	0x74, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x46, 0x72, 0x61, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x65,
	0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x32, 0x2e, 0x74, 0x64, 0x65, 0x78, 0x5f, 0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x46, 0x72, 0x61, 0x67, 0x6d, 0x65,
	0x6e, 0x74, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x8e, 0x01, 0x0a, 0x1d, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x61,
	0x72, 0x6b, 0x65, 0x74, 0x46, 0x72, 0x61, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x12, 0x34, 0x2e, 0x74, 0x64, 0x65, 0x78, 0x5f, 0x64,
	0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x61, 0x72,
	0x6b, 0x65, 0x74, 0x46, 0x72, 0x61, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x35, 0x2e,
	0x74, 0x64, 0x65, 0x78, 0x5f, 0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x46, 0x72, 0x61, 0x67, 0x6d, 0x65, 0x6e,
	0x74, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x85, 0x01, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x4d, 0x61,
	0x72, 0x6b, 0x65, 0x74, 0x46, 0x72, 0x61, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x42, 0x61,
	0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x31, 0x2e, 0x74, 0x64, 0x65, 0x78, 0x5f, 0x64, 0x61, 0x65,
	0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74,
	0x46, 0x72, 0x61, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x32, 0x2e, 0x74, 0x64, 0x65, 0x78, 0x5f,
	0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x72,
	0x6b, 0x65, 0x74, 0x46, 0x72, 0x61, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x42, 0x61, 0x6c,
	0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x87,
	0x01, 0x0a, 0x1a, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x46, 0x72, 0x61, 0x67, 0x6d, 0x65, 0x6e,
	0x74, 0x65, 0x72, 0x53, 0x70, 0x6c, 0x69, 0x74, 0x46, 0x75, 0x6e, 0x64, 0x73, 0x12, 0x31, 0x2e,
	0x74, 0x64, 0x65, 0x78, 0x5f, 0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4d,
	0x61, 0x72, 0x6b, 0x65, 0x74, 0x46, 0x72, 0x61, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x53,
	0x70, 0x6c, 0x69, 0x74, 0x46, 0x75, 0x6e, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x32, 0x2e, 0x74, 0x64, 0x65, 0x78, 0x5f, 0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x2e, 0x76,
	0x31, 0x2e, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x46, 0x72, 0x61, 0x67, 0x6d, 0x65, 0x6e, 0x74,
	0x65, 0x72, 0x53, 0x70, 0x6c, 0x69, 0x74, 0x46, 0x75, 0x6e, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x30, 0x01, 0x12, 0x7f, 0x0a, 0x18, 0x57, 0x69, 0x74, 0x68,
	0x64, 0x72, 0x61, 0x77, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x46, 0x72, 0x61, 0x67, 0x6d, 0x65,
	0x6e, 0x74, 0x65, 0x72, 0x12, 0x2f, 0x2e, 0x74, 0x64, 0x65, 0x78, 0x5f, 0x64, 0x61, 0x65, 0x6d,
	0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x4d, 0x61,
	0x72, 0x6b, 0x65, 0x74, 0x46, 0x72, 0x61, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x30, 0x2e, 0x74, 0x64, 0x65, 0x78, 0x5f, 0x64, 0x61, 0x65,
	0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x4d,
	0x61, 0x72, 0x6b, 0x65, 0x74, 0x46, 0x72, 0x61, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x58, 0x0a, 0x0b, 0x4c, 0x69, 0x73,
	0x74, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x73, 0x12, 0x22, 0x2e, 0x74, 0x64, 0x65, 0x78, 0x5f,
	0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x61,
	0x72, 0x6b, 0x65, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x74,
	0x64, 0x65, 0x78, 0x5f, 0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x55, 0x0a, 0x0a, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x72, 0x61, 0x64, 0x65,
	0x73, 0x12, 0x21, 0x2e, 0x74, 0x64, 0x65, 0x78, 0x5f, 0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x2e,
	0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x72, 0x61, 0x64, 0x65, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x74, 0x64, 0x65, 0x78, 0x5f, 0x64, 0x61, 0x65, 0x6d,
	0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x72, 0x61, 0x64, 0x65, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x58, 0x0a, 0x0b, 0x52, 0x65,
	0x6c, 0x6f, 0x61, 0x64, 0x55, 0x74, 0x78, 0x6f, 0x73, 0x12, 0x22, 0x2e, 0x74, 0x64, 0x65, 0x78,
	0x5f, 0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x6c, 0x6f, 0x61,
	0x64, 0x55, 0x74, 0x78, 0x6f, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e,
	0x74, 0x64, 0x65, 0x78, 0x5f, 0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x52,
	0x65, 0x6c, 0x6f, 0x61, 0x64, 0x55, 0x74, 0x78, 0x6f, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x52, 0x0a, 0x09, 0x4c, 0x69, 0x73, 0x74, 0x55, 0x74, 0x78, 0x6f,
	0x73, 0x12, 0x20, 0x2e, 0x74, 0x64, 0x65, 0x78, 0x5f, 0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x2e,
	0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x55, 0x74, 0x78, 0x6f, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x74, 0x64, 0x65, 0x78, 0x5f, 0x64, 0x61, 0x65, 0x6d, 0x6f,
	0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x55, 0x74, 0x78, 0x6f, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x55, 0x0a, 0x0a, 0x41, 0x64, 0x64, 0x57,
	0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x12, 0x21, 0x2e, 0x74, 0x64, 0x65, 0x78, 0x5f, 0x64, 0x61,
	0x65, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x64, 0x57, 0x65, 0x62, 0x68, 0x6f,
	0x6f, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x74, 0x64, 0x65, 0x78,
	0x5f, 0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x64, 0x57, 0x65,
	0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x5e, 0x0a, 0x0d, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x57, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b,
	0x12, 0x24, 0x2e, 0x74, 0x64, 0x65, 0x78, 0x5f, 0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x2e, 0x76,
	0x31, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x57, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x74, 0x64, 0x65, 0x78, 0x5f, 0x64, 0x61,
	0x65, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x57, 0x65,
	0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x5b, 0x0a, 0x0c, 0x4c, 0x69, 0x73, 0x74, 0x57, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x73, 0x12,
	0x23, 0x2e, 0x74, 0x64, 0x65, 0x78, 0x5f, 0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x57, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x74, 0x64, 0x65, 0x78, 0x5f, 0x64, 0x61, 0x65, 0x6d,
	0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x57, 0x65, 0x62, 0x68, 0x6f, 0x6f,
	0x6b, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5b, 0x0a, 0x0c,
	0x4c, 0x69, 0x73, 0x74, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x73, 0x12, 0x23, 0x2e, 0x74,
	0x64, 0x65, 0x78, 0x5f, 0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x24, 0x2e, 0x74, 0x64, 0x65, 0x78, 0x5f, 0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x2e,
	0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x64, 0x0a, 0x0f, 0x4c, 0x69, 0x73,
	0x74, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x61, 0x6c, 0x73, 0x12, 0x26, 0x2e, 0x74,
	0x64, 0x65, 0x78, 0x5f, 0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x61, 0x6c, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x74, 0x64, 0x65, 0x78, 0x5f, 0x64, 0x61, 0x65, 0x6d,
	0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72,
	0x61, 0x77, 0x61, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x64, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x70, 0x6f,
	0x72, 0x74, 0x12, 0x26, 0x2e, 0x74, 0x64, 0x65, 0x78, 0x5f, 0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x70,
	0x6f, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x74, 0x64, 0x65,
	0x78, 0x5f, 0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4d,
	0x61, 0x72, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0xd0, 0x01, 0x0a, 0x12, 0x63, 0x6f, 0x6d, 0x2e, 0x74, 0x64,
	0x65, 0x78, 0x5f, 0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x42, 0x0d, 0x4f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x56, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x74, 0x64, 0x65, 0x78, 0x2d, 0x6e,
	0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2f, 0x74, 0x64, 0x65, 0x78, 0x2d, 0x64, 0x61, 0x65, 0x6d,
	0x6f, 0x6e, 0x2f, 0x61, 0x70, 0x69, 0x2d, 0x73, 0x70, 0x65, 0x63, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x74, 0x64, 0x65, 0x78, 0x2d, 0x64, 0x61,
	0x65, 0x6d, 0x6f, 0x6e, 0x2f, 0x76, 0x31, 0x3b, 0x74, 0x64, 0x65, 0x78, 0x5f, 0x64, 0x61, 0x65,
	0x6d, 0x6f, 0x6e, 0x76, 0x31, 0xa2, 0x02, 0x03, 0x54, 0x58, 0x58, 0xaa, 0x02, 0x0d, 0x54, 0x64,
	0x65, 0x78, 0x44, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x2e, 0x56, 0x31, 0xca, 0x02, 0x0d, 0x54, 0x64,
	0x65, 0x78, 0x44, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x5c, 0x56, 0x31, 0xe2, 0x02, 0x19, 0x54, 0x64,
	0x65, 0x78, 0x44, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x5c, 0x56, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x0e, 0x54, 0x64, 0x65, 0x78, 0x44, 0x61,
	0x65, 0x6d, 0x6f, 0x6e, 0x3a, 0x3a, 0x56, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_tdex_daemon_v1_operator_proto_rawDescOnce sync.Once
	file_tdex_daemon_v1_operator_proto_rawDescData = file_tdex_daemon_v1_operator_proto_rawDesc
)

func file_tdex_daemon_v1_operator_proto_rawDescGZIP() []byte {
	file_tdex_daemon_v1_operator_proto_rawDescOnce.Do(func() {
		file_tdex_daemon_v1_operator_proto_rawDescData = protoimpl.X.CompressGZIP(file_tdex_daemon_v1_operator_proto_rawDescData)
	})
	return file_tdex_daemon_v1_operator_proto_rawDescData
}

var file_tdex_daemon_v1_operator_proto_msgTypes = make([]protoimpl.MessageInfo, 88)
var file_tdex_daemon_v1_operator_proto_goTypes = []interface{}{
	(*GetInfoRequest)(nil),                        // 0: tdex_daemon.v1.GetInfoRequest
	(*GetInfoResponse)(nil),                       // 1: tdex_daemon.v1.GetInfoResponse
	(*BuildInfo)(nil),                             // 2: tdex_daemon.v1.BuildInfo
	(*GetFeeAddressRequest)(nil),                  // 3: tdex_daemon.v1.GetFeeAddressRequest
	(*GetFeeAddressResponse)(nil),                 // 4: tdex_daemon.v1.GetFeeAddressResponse
	(*ListFeeAddressesRequest)(nil),               // 5: tdex_daemon.v1.ListFeeAddressesRequest
	(*ListFeeAddressesResponse)(nil),              // 6: tdex_daemon.v1.ListFeeAddressesResponse
	(*GetFeeBalanceRequest)(nil),                  // 7: tdex_daemon.v1.GetFeeBalanceRequest
	(*GetFeeBalanceResponse)(nil),                 // 8: tdex_daemon.v1.GetFeeBalanceResponse
	(*ClaimFeeDepositsRequest)(nil),               // 9: tdex_daemon.v1.ClaimFeeDepositsRequest
	(*ClaimFeeDepositsResponse)(nil),              // 10: tdex_daemon.v1.ClaimFeeDepositsResponse
	(*WithdrawFeeRequest)(nil),                    // 11: tdex_daemon.v1.WithdrawFeeRequest
	(*WithdrawFeeResponse)(nil),                   // 12: tdex_daemon.v1.WithdrawFeeResponse
	(*NewMarketRequest)(nil),                      // 13: tdex_daemon.v1.NewMarketRequest
	(*NewMarketResponse)(nil),                     // 14: tdex_daemon.v1.NewMarketResponse
	(*GetMarketInfoRequest)(nil),                  // 15: tdex_daemon.v1.GetMarketInfoRequest
	(*GetMarketInfoResponse)(nil),                 // 16: tdex_daemon.v1.GetMarketInfoResponse
	(*GetMarketAddressRequest)(nil),               // 17: tdex_daemon.v1.GetMarketAddressRequest
	(*GetMarketAddressResponse)(nil),              // 18: tdex_daemon.v1.GetMarketAddressResponse
	(*ListMarketAddressesRequest)(nil),            // 19: tdex_daemon.v1.ListMarketAddressesRequest
	(*ListMarketAddressesResponse)(nil),           // 20: tdex_daemon.v1.ListMarketAddressesResponse
	(*GetMarketBalanceRequest)(nil),               // 21: tdex_daemon.v1.GetMarketBalanceRequest
	(*GetMarketBalanceResponse)(nil),              // 22: tdex_daemon.v1.GetMarketBalanceResponse
	(*ClaimMarketDepositsRequest)(nil),            // 23: tdex_daemon.v1.ClaimMarketDepositsRequest
	(*ClaimMarketDepositsResponse)(nil),           // 24: tdex_daemon.v1.ClaimMarketDepositsResponse
	(*OpenMarketRequest)(nil),                     // 25: tdex_daemon.v1.OpenMarketRequest
	(*OpenMarketResponse)(nil),                    // 26: tdex_daemon.v1.OpenMarketResponse
	(*CloseMarketRequest)(nil),                    // 27: tdex_daemon.v1.CloseMarketRequest
	(*CloseMarketResponse)(nil),                   // 28: tdex_daemon.v1.CloseMarketResponse
	(*ListMarketsRequest)(nil),                    // 29: tdex_daemon.v1.ListMarketsRequest
	(*ListMarketsResponse)(nil),                   // 30: tdex_daemon.v1.ListMarketsResponse
	(*DropMarketRequest)(nil),                     // 31: tdex_daemon.v1.DropMarketRequest
	(*DropMarketResponse)(nil),                    // 32: tdex_daemon.v1.DropMarketResponse
	(*GetMarketCollectedSwapFeesRequest)(nil),     // 33: tdex_daemon.v1.GetMarketCollectedSwapFeesRequest
	(*GetMarketCollectedSwapFeesResponse)(nil),    // 34: tdex_daemon.v1.GetMarketCollectedSwapFeesResponse
	(*WithdrawMarketRequest)(nil),                 // 35: tdex_daemon.v1.WithdrawMarketRequest
	(*WithdrawMarketResponse)(nil),                // 36: tdex_daemon.v1.WithdrawMarketResponse
	(*UpdateMarketPercentageFeeRequest)(nil),      // 37: tdex_daemon.v1.UpdateMarketPercentageFeeRequest
	(*UpdateMarketPercentageFeeResponse)(nil),     // 38: tdex_daemon.v1.UpdateMarketPercentageFeeResponse
	(*UpdateMarketFixedFeeRequest)(nil),           // 39: tdex_daemon.v1.UpdateMarketFixedFeeRequest
	(*UpdateMarketFixedFeeResponse)(nil),          // 40: tdex_daemon.v1.UpdateMarketFixedFeeResponse
	(*UpdateMarketAssetsPrecisionRequest)(nil),    // 41: tdex_daemon.v1.UpdateMarketAssetsPrecisionRequest
	(*UpdateMarketAssetsPrecisionResponse)(nil),   // 42: tdex_daemon.v1.UpdateMarketAssetsPrecisionResponse
	(*UpdateMarketPriceRequest)(nil),              // 43: tdex_daemon.v1.UpdateMarketPriceRequest
	(*UpdateMarketPriceResponse)(nil),             // 44: tdex_daemon.v1.UpdateMarketPriceResponse
	(*UpdateMarketStrategyRequest)(nil),           // 45: tdex_daemon.v1.UpdateMarketStrategyRequest
	(*UpdateMarketStrategyResponse)(nil),          // 46: tdex_daemon.v1.UpdateMarketStrategyResponse
	(*GetFeeFragmenterAddressRequest)(nil),        // 47: tdex_daemon.v1.GetFeeFragmenterAddressRequest
	(*GetFeeFragmenterAddressResponse)(nil),       // 48: tdex_daemon.v1.GetFeeFragmenterAddressResponse
	(*ListFeeFragmenterAddressesRequest)(nil),     // 49: tdex_daemon.v1.ListFeeFragmenterAddressesRequest
	(*ListFeeFragmenterAddressesResponse)(nil),    // 50: tdex_daemon.v1.ListFeeFragmenterAddressesResponse
	(*GetFeeFragmenterBalanceRequest)(nil),        // 51: tdex_daemon.v1.GetFeeFragmenterBalanceRequest
	(*GetFeeFragmenterBalanceResponse)(nil),       // 52: tdex_daemon.v1.GetFeeFragmenterBalanceResponse
	(*FeeFragmenterSplitFundsRequest)(nil),        // 53: tdex_daemon.v1.FeeFragmenterSplitFundsRequest
	(*FeeFragmenterSplitFundsResponse)(nil),       // 54: tdex_daemon.v1.FeeFragmenterSplitFundsResponse
	(*WithdrawFeeFragmenterRequest)(nil),          // 55: tdex_daemon.v1.WithdrawFeeFragmenterRequest
	(*WithdrawFeeFragmenterResponse)(nil),         // 56: tdex_daemon.v1.WithdrawFeeFragmenterResponse
	(*GetMarketFragmenterAddressRequest)(nil),     // 57: tdex_daemon.v1.GetMarketFragmenterAddressRequest
	(*GetMarketFragmenterAddressResponse)(nil),    // 58: tdex_daemon.v1.GetMarketFragmenterAddressResponse
	(*ListMarketFragmenterAddressesRequest)(nil),  // 59: tdex_daemon.v1.ListMarketFragmenterAddressesRequest
	(*ListMarketFragmenterAddressesResponse)(nil), // 60: tdex_daemon.v1.ListMarketFragmenterAddressesResponse
	(*GetMarketFragmenterBalanceRequest)(nil),     // 61: tdex_daemon.v1.GetMarketFragmenterBalanceRequest
	(*GetMarketFragmenterBalanceResponse)(nil),    // 62: tdex_daemon.v1.GetMarketFragmenterBalanceResponse
	(*MarketFragmenterSplitFundsRequest)(nil),     // 63: tdex_daemon.v1.MarketFragmenterSplitFundsRequest
	(*MarketFragmenterSplitFundsResponse)(nil),    // 64: tdex_daemon.v1.MarketFragmenterSplitFundsResponse
	(*WithdrawMarketFragmenterRequest)(nil),       // 65: tdex_daemon.v1.WithdrawMarketFragmenterRequest
	(*WithdrawMarketFragmenterResponse)(nil),      // 66: tdex_daemon.v1.WithdrawMarketFragmenterResponse
	(*ListTradesRequest)(nil),                     // 67: tdex_daemon.v1.ListTradesRequest
	(*ListTradesResponse)(nil),                    // 68: tdex_daemon.v1.ListTradesResponse
	(*ReloadUtxosRequest)(nil),                    // 69: tdex_daemon.v1.ReloadUtxosRequest
	(*ReloadUtxosResponse)(nil),                   // 70: tdex_daemon.v1.ReloadUtxosResponse
	(*ListUtxosRequest)(nil),                      // 71: tdex_daemon.v1.ListUtxosRequest
	(*ListUtxosResponse)(nil),                     // 72: tdex_daemon.v1.ListUtxosResponse
	(*AddWebhookRequest)(nil),                     // 73: tdex_daemon.v1.AddWebhookRequest
	(*AddWebhookResponse)(nil),                    // 74: tdex_daemon.v1.AddWebhookResponse
	(*RemoveWebhookRequest)(nil),                  // 75: tdex_daemon.v1.RemoveWebhookRequest
	(*RemoveWebhookResponse)(nil),                 // 76: tdex_daemon.v1.RemoveWebhookResponse
	(*ListWebhooksRequest)(nil),                   // 77: tdex_daemon.v1.ListWebhooksRequest
	(*ListWebhooksResponse)(nil),                  // 78: tdex_daemon.v1.ListWebhooksResponse
	(*ListDepositsRequest)(nil),                   // 79: tdex_daemon.v1.ListDepositsRequest
	(*ListDepositsResponse)(nil),                  // 80: tdex_daemon.v1.ListDepositsResponse
	(*ListWithdrawalsRequest)(nil),                // 81: tdex_daemon.v1.ListWithdrawalsRequest
	(*ListWithdrawalsResponse)(nil),               // 82: tdex_daemon.v1.ListWithdrawalsResponse
	(*GetMarketReportRequest)(nil),                // 83: tdex_daemon.v1.GetMarketReportRequest
	(*GetMarketReportResponse)(nil),               // 84: tdex_daemon.v1.GetMarketReportResponse
	nil,                                           // 85: tdex_daemon.v1.GetMarketCollectedSwapFeesResponse.TotalCollectedFeesPerAssetEntry
	nil,                                           // 86: tdex_daemon.v1.GetFeeFragmenterBalanceResponse.BalanceEntry
	nil,                                           // 87: tdex_daemon.v1.GetMarketFragmenterBalanceResponse.BalanceEntry
	(*AccountInfo)(nil),                           // 88: tdex_daemon.v1.AccountInfo
	(*AddressWithBlindingKey)(nil),                // 89: tdex_daemon.v1.AddressWithBlindingKey
	(*Outpoint)(nil),                              // 90: tdex_daemon.v1.Outpoint
	(*v1.Market)(nil),                             // 91: tdex.v1.Market
	(*MarketInfo)(nil),                            // 92: tdex_daemon.v1.MarketInfo
	(*v1.Balance)(nil),                            // 93: tdex.v1.Balance
	(*Page)(nil),                                  // 94: tdex_daemon.v1.Page
	(*FeeInfo)(nil),                               // 95: tdex_daemon.v1.FeeInfo
	(*v1.MarketWithFee)(nil),                      // 96: tdex.v1.MarketWithFee
	(*v1.Fixed)(nil),                              // 97: tdex.v1.Fixed
	(*v1.Price)(nil),                              // 98: tdex.v1.Price
	(StrategyType)(0),                             // 99: tdex_daemon.v1.StrategyType
	(*TradeInfo)(nil),                             // 100: tdex_daemon.v1.TradeInfo
	(*UtxoInfo)(nil),                              // 101: tdex_daemon.v1.UtxoInfo
	(ActionType)(0),                               // 102: tdex_daemon.v1.ActionType
	(*WebhookInfo)(nil),                           // 103: tdex_daemon.v1.WebhookInfo
	(*Deposit)(nil),                               // 104: tdex_daemon.v1.Deposit
	(*Withdrawal)(nil),                            // 105: tdex_daemon.v1.Withdrawal
	(*TimeRange)(nil),                             // 106: tdex_daemon.v1.TimeRange
	(TimeFrame)(0),                                // 107: tdex_daemon.v1.TimeFrame
	(*MarketReport)(nil),                          // 108: tdex_daemon.v1.MarketReport
	(*BalanceInfo)(nil),                           // 109: tdex_daemon.v1.BalanceInfo
}
var file_tdex_daemon_v1_operator_proto_depIdxs = []int32{
	88,  // 0: tdex_daemon.v1.GetInfoResponse.account_info:type_name -> tdex_daemon.v1.AccountInfo
	2,   // 1: tdex_daemon.v1.GetInfoResponse.build_data:type_name -> tdex_daemon.v1.BuildInfo
	89,  // 2: tdex_daemon.v1.GetFeeAddressResponse.address_with_blinding_key:type_name -> tdex_daemon.v1.AddressWithBlindingKey
	89,  // 3: tdex_daemon.v1.ListFeeAddressesResponse.address_with_blinding_key:type_name -> tdex_daemon.v1.AddressWithBlindingKey
	90,  // 4: tdex_daemon.v1.ClaimFeeDepositsRequest.outpoints:type_name -> tdex_daemon.v1.Outpoint
	91,  // 5: tdex_daemon.v1.NewMarketRequest.market:type_name -> tdex.v1.Market
	91,  // 6: tdex_daemon.v1.GetMarketInfoRequest.market:type_name -> tdex.v1.Market
	92,  // 7: tdex_daemon.v1.GetMarketInfoResponse.info:type_name -> tdex_daemon.v1.MarketInfo
	91,  // 8: tdex_daemon.v1.GetMarketAddressRequest.market:type_name -> tdex.v1.Market
	89,  // 9: tdex_daemon.v1.GetMarketAddressResponse.address_with_blinding_key:type_name -> tdex_daemon.v1.AddressWithBlindingKey
	91,  // 10: tdex_daemon.v1.ListMarketAddressesRequest.market:type_name -> tdex.v1.Market
	89,  // 11: tdex_daemon.v1.ListMarketAddressesResponse.address_with_blinding_key:type_name -> tdex_daemon.v1.AddressWithBlindingKey
	91,  // 12: tdex_daemon.v1.GetMarketBalanceRequest.market:type_name -> tdex.v1.Market
	93,  // 13: tdex_daemon.v1.GetMarketBalanceResponse.available_balance:type_name -> tdex.v1.Balance
	93,  // 14: tdex_daemon.v1.GetMarketBalanceResponse.total_balance:type_name -> tdex.v1.Balance
	91,  // 15: tdex_daemon.v1.ClaimMarketDepositsRequest.market:type_name -> tdex.v1.Market
	90,  // 16: tdex_daemon.v1.ClaimMarketDepositsRequest.outpoints:type_name -> tdex_daemon.v1.Outpoint
	91,  // 17: tdex_daemon.v1.OpenMarketRequest.market:type_name -> tdex.v1.Market
	91,  // 18: tdex_daemon.v1.CloseMarketRequest.market:type_name -> tdex.v1.Market
	92,  // 19: tdex_daemon.v1.ListMarketsResponse.markets:type_name -> tdex_daemon.v1.MarketInfo
	91,  // 20: tdex_daemon.v1.DropMarketRequest.market:type_name -> tdex.v1.Market
	91,  // 21: tdex_daemon.v1.GetMarketCollectedSwapFeesRequest.market:type_name -> tdex.v1.Market
	94,  // 22: tdex_daemon.v1.GetMarketCollectedSwapFeesRequest.page:type_name -> tdex_daemon.v1.Page
	95,  // 23: tdex_daemon.v1.GetMarketCollectedSwapFeesResponse.collected_fees:type_name -> tdex_daemon.v1.FeeInfo
	85,  // 24: tdex_daemon.v1.GetMarketCollectedSwapFeesResponse.total_collected_fees_per_asset:type_name -> tdex_daemon.v1.GetMarketCollectedSwapFeesResponse.TotalCollectedFeesPerAssetEntry
	91,  // 25: tdex_daemon.v1.WithdrawMarketRequest.market:type_name -> tdex.v1.Market
	93,  // 26: tdex_daemon.v1.WithdrawMarketRequest.balance_to_withdraw:type_name -> tdex.v1.Balance
	91,  // 27: tdex_daemon.v1.UpdateMarketPercentageFeeRequest.market:type_name -> tdex.v1.Market
	96,  // 28: tdex_daemon.v1.UpdateMarketPercentageFeeResponse.market_with_fee:type_name -> tdex.v1.MarketWithFee
	91,  // 29: tdex_daemon.v1.UpdateMarketFixedFeeRequest.market:type_name -> tdex.v1.Market
	97,  // 30: tdex_daemon.v1.UpdateMarketFixedFeeRequest.fixed:type_name -> tdex.v1.Fixed
	96,  // 31: tdex_daemon.v1.UpdateMarketFixedFeeResponse.market_with_fee:type_name -> tdex.v1.MarketWithFee
	91,  // 32: tdex_daemon.v1.UpdateMarketAssetsPrecisionRequest.market:type_name -> tdex.v1.Market
	91,  // 33: tdex_daemon.v1.UpdateMarketPriceRequest.market:type_name -> tdex.v1.Market
	98,  // 34: tdex_daemon.v1.UpdateMarketPriceRequest.price:type_name -> tdex.v1.Price
	91,  // 35: tdex_daemon.v1.UpdateMarketStrategyRequest.market:type_name -> tdex.v1.Market
	99,  // 36: tdex_daemon.v1.UpdateMarketStrategyRequest.strategy_type:type_name -> tdex_daemon.v1.StrategyType
	89,  // 37: tdex_daemon.v1.GetFeeFragmenterAddressResponse.address_with_blinding_key:type_name -> tdex_daemon.v1.AddressWithBlindingKey
	89,  // 38: tdex_daemon.v1.ListFeeFragmenterAddressesResponse.address_with_blinding_key:type_name -> tdex_daemon.v1.AddressWithBlindingKey
	86,  // 39: tdex_daemon.v1.GetFeeFragmenterBalanceResponse.balance:type_name -> tdex_daemon.v1.GetFeeFragmenterBalanceResponse.BalanceEntry
	89,  // 40: tdex_daemon.v1.GetMarketFragmenterAddressResponse.address_with_blinding_key:type_name -> tdex_daemon.v1.AddressWithBlindingKey
	89,  // 41: tdex_daemon.v1.ListMarketFragmenterAddressesResponse.address_with_blinding_key:type_name -> tdex_daemon.v1.AddressWithBlindingKey
	87,  // 42: tdex_daemon.v1.GetMarketFragmenterBalanceResponse.balance:type_name -> tdex_daemon.v1.GetMarketFragmenterBalanceResponse.BalanceEntry
	91,  // 43: tdex_daemon.v1.MarketFragmenterSplitFundsRequest.market:type_name -> tdex.v1.Market
	91,  // 44: tdex_daemon.v1.ListTradesRequest.market:type_name -> tdex.v1.Market
	94,  // 45: tdex_daemon.v1.ListTradesRequest.page:type_name -> tdex_daemon.v1.Page
	100, // 46: tdex_daemon.v1.ListTradesResponse.trades:type_name -> tdex_daemon.v1.TradeInfo
	94,  // 47: tdex_daemon.v1.ListUtxosRequest.page:type_name -> tdex_daemon.v1.Page
	101, // 48: tdex_daemon.v1.ListUtxosResponse.unspents:type_name -> tdex_daemon.v1.UtxoInfo
	101, // 49: tdex_daemon.v1.ListUtxosResponse.spents:type_name -> tdex_daemon.v1.UtxoInfo
	101, // 50: tdex_daemon.v1.ListUtxosResponse.locks:type_name -> tdex_daemon.v1.UtxoInfo
	102, // 51: tdex_daemon.v1.AddWebhookRequest.action:type_name -> tdex_daemon.v1.ActionType
	102, // 52: tdex_daemon.v1.ListWebhooksRequest.action:type_name -> tdex_daemon.v1.ActionType
	103, // 53: tdex_daemon.v1.ListWebhooksResponse.webhook_info:type_name -> tdex_daemon.v1.WebhookInfo
	94,  // 54: tdex_daemon.v1.ListDepositsRequest.page:type_name -> tdex_daemon.v1.Page
	104, // 55: tdex_daemon.v1.ListDepositsResponse.deposits:type_name -> tdex_daemon.v1.Deposit
	94,  // 56: tdex_daemon.v1.ListWithdrawalsRequest.page:type_name -> tdex_daemon.v1.Page
	105, // 57: tdex_daemon.v1.ListWithdrawalsResponse.withdrawals:type_name -> tdex_daemon.v1.Withdrawal
	91,  // 58: tdex_daemon.v1.GetMarketReportRequest.market:type_name -> tdex.v1.Market
	106, // 59: tdex_daemon.v1.GetMarketReportRequest.time_range:type_name -> tdex_daemon.v1.TimeRange
	107, // 60: tdex_daemon.v1.GetMarketReportRequest.time_frame:type_name -> tdex_daemon.v1.TimeFrame
	108, // 61: tdex_daemon.v1.GetMarketReportResponse.report:type_name -> tdex_daemon.v1.MarketReport
	109, // 62: tdex_daemon.v1.GetFeeFragmenterBalanceResponse.BalanceEntry.value:type_name -> tdex_daemon.v1.BalanceInfo
	109, // 63: tdex_daemon.v1.GetMarketFragmenterBalanceResponse.BalanceEntry.value:type_name -> tdex_daemon.v1.BalanceInfo
	0,   // 64: tdex_daemon.v1.OperatorService.GetInfo:input_type -> tdex_daemon.v1.GetInfoRequest
	3,   // 65: tdex_daemon.v1.OperatorService.GetFeeAddress:input_type -> tdex_daemon.v1.GetFeeAddressRequest
	5,   // 66: tdex_daemon.v1.OperatorService.ListFeeAddresses:input_type -> tdex_daemon.v1.ListFeeAddressesRequest
	7,   // 67: tdex_daemon.v1.OperatorService.GetFeeBalance:input_type -> tdex_daemon.v1.GetFeeBalanceRequest
	9,   // 68: tdex_daemon.v1.OperatorService.ClaimFeeDeposits:input_type -> tdex_daemon.v1.ClaimFeeDepositsRequest
	11,  // 69: tdex_daemon.v1.OperatorService.WithdrawFee:input_type -> tdex_daemon.v1.WithdrawFeeRequest
	13,  // 70: tdex_daemon.v1.OperatorService.NewMarket:input_type -> tdex_daemon.v1.NewMarketRequest
	15,  // 71: tdex_daemon.v1.OperatorService.GetMarketInfo:input_type -> tdex_daemon.v1.GetMarketInfoRequest
	17,  // 72: tdex_daemon.v1.OperatorService.GetMarketAddress:input_type -> tdex_daemon.v1.GetMarketAddressRequest
	19,  // 73: tdex_daemon.v1.OperatorService.ListMarketAddresses:input_type -> tdex_daemon.v1.ListMarketAddressesRequest
	21,  // 74: tdex_daemon.v1.OperatorService.GetMarketBalance:input_type -> tdex_daemon.v1.GetMarketBalanceRequest
	23,  // 75: tdex_daemon.v1.OperatorService.ClaimMarketDeposits:input_type -> tdex_daemon.v1.ClaimMarketDepositsRequest
	25,  // 76: tdex_daemon.v1.OperatorService.OpenMarket:input_type -> tdex_daemon.v1.OpenMarketRequest
	27,  // 77: tdex_daemon.v1.OperatorService.CloseMarket:input_type -> tdex_daemon.v1.CloseMarketRequest
	31,  // 78: tdex_daemon.v1.OperatorService.DropMarket:input_type -> tdex_daemon.v1.DropMarketRequest
	33,  // 79: tdex_daemon.v1.OperatorService.GetMarketCollectedSwapFees:input_type -> tdex_daemon.v1.GetMarketCollectedSwapFeesRequest
	35,  // 80: tdex_daemon.v1.OperatorService.WithdrawMarket:input_type -> tdex_daemon.v1.WithdrawMarketRequest
	37,  // 81: tdex_daemon.v1.OperatorService.UpdateMarketPercentageFee:input_type -> tdex_daemon.v1.UpdateMarketPercentageFeeRequest
	39,  // 82: tdex_daemon.v1.OperatorService.UpdateMarketFixedFee:input_type -> tdex_daemon.v1.UpdateMarketFixedFeeRequest
	41,  // 83: tdex_daemon.v1.OperatorService.UpdateMarketAssetsPrecision:input_type -> tdex_daemon.v1.UpdateMarketAssetsPrecisionRequest
	43,  // 84: tdex_daemon.v1.OperatorService.UpdateMarketPrice:input_type -> tdex_daemon.v1.UpdateMarketPriceRequest
	45,  // 85: tdex_daemon.v1.OperatorService.UpdateMarketStrategy:input_type -> tdex_daemon.v1.UpdateMarketStrategyRequest
	47,  // 86: tdex_daemon.v1.OperatorService.GetFeeFragmenterAddress:input_type -> tdex_daemon.v1.GetFeeFragmenterAddressRequest
	49,  // 87: tdex_daemon.v1.OperatorService.ListFeeFragmenterAddresses:input_type -> tdex_daemon.v1.ListFeeFragmenterAddressesRequest
	51,  // 88: tdex_daemon.v1.OperatorService.GetFeeFragmenterBalance:input_type -> tdex_daemon.v1.GetFeeFragmenterBalanceRequest
	53,  // 89: tdex_daemon.v1.OperatorService.FeeFragmenterSplitFunds:input_type -> tdex_daemon.v1.FeeFragmenterSplitFundsRequest
	55,  // 90: tdex_daemon.v1.OperatorService.WithdrawFeeFragmenter:input_type -> tdex_daemon.v1.WithdrawFeeFragmenterRequest
	57,  // 91: tdex_daemon.v1.OperatorService.GetMarketFragmenterAddress:input_type -> tdex_daemon.v1.GetMarketFragmenterAddressRequest
	59,  // 92: tdex_daemon.v1.OperatorService.ListMarketFragmenterAddresses:input_type -> tdex_daemon.v1.ListMarketFragmenterAddressesRequest
	61,  // 93: tdex_daemon.v1.OperatorService.GetMarketFragmenterBalance:input_type -> tdex_daemon.v1.GetMarketFragmenterBalanceRequest
	63,  // 94: tdex_daemon.v1.OperatorService.MarketFragmenterSplitFunds:input_type -> tdex_daemon.v1.MarketFragmenterSplitFundsRequest
	65,  // 95: tdex_daemon.v1.OperatorService.WithdrawMarketFragmenter:input_type -> tdex_daemon.v1.WithdrawMarketFragmenterRequest
	29,  // 96: tdex_daemon.v1.OperatorService.ListMarkets:input_type -> tdex_daemon.v1.ListMarketsRequest
	67,  // 97: tdex_daemon.v1.OperatorService.ListTrades:input_type -> tdex_daemon.v1.ListTradesRequest
	69,  // 98: tdex_daemon.v1.OperatorService.ReloadUtxos:input_type -> tdex_daemon.v1.ReloadUtxosRequest
	71,  // 99: tdex_daemon.v1.OperatorService.ListUtxos:input_type -> tdex_daemon.v1.ListUtxosRequest
	73,  // 100: tdex_daemon.v1.OperatorService.AddWebhook:input_type -> tdex_daemon.v1.AddWebhookRequest
	75,  // 101: tdex_daemon.v1.OperatorService.RemoveWebhook:input_type -> tdex_daemon.v1.RemoveWebhookRequest
	77,  // 102: tdex_daemon.v1.OperatorService.ListWebhooks:input_type -> tdex_daemon.v1.ListWebhooksRequest
	79,  // 103: tdex_daemon.v1.OperatorService.ListDeposits:input_type -> tdex_daemon.v1.ListDepositsRequest
	81,  // 104: tdex_daemon.v1.OperatorService.ListWithdrawals:input_type -> tdex_daemon.v1.ListWithdrawalsRequest
	83,  // 105: tdex_daemon.v1.OperatorService.GetMarketReport:input_type -> tdex_daemon.v1.GetMarketReportRequest
	1,   // 106: tdex_daemon.v1.OperatorService.GetInfo:output_type -> tdex_daemon.v1.GetInfoResponse
	4,   // 107: tdex_daemon.v1.OperatorService.GetFeeAddress:output_type -> tdex_daemon.v1.GetFeeAddressResponse
	6,   // 108: tdex_daemon.v1.OperatorService.ListFeeAddresses:output_type -> tdex_daemon.v1.ListFeeAddressesResponse
	8,   // 109: tdex_daemon.v1.OperatorService.GetFeeBalance:output_type -> tdex_daemon.v1.GetFeeBalanceResponse
	10,  // 110: tdex_daemon.v1.OperatorService.ClaimFeeDeposits:output_type -> tdex_daemon.v1.ClaimFeeDepositsResponse
	12,  // 111: tdex_daemon.v1.OperatorService.WithdrawFee:output_type -> tdex_daemon.v1.WithdrawFeeResponse
	14,  // 112: tdex_daemon.v1.OperatorService.NewMarket:output_type -> tdex_daemon.v1.NewMarketResponse
	16,  // 113: tdex_daemon.v1.OperatorService.GetMarketInfo:output_type -> tdex_daemon.v1.GetMarketInfoResponse
	18,  // 114: tdex_daemon.v1.OperatorService.GetMarketAddress:output_type -> tdex_daemon.v1.GetMarketAddressResponse
	20,  // 115: tdex_daemon.v1.OperatorService.ListMarketAddresses:output_type -> tdex_daemon.v1.ListMarketAddressesResponse
	22,  // 116: tdex_daemon.v1.OperatorService.GetMarketBalance:output_type -> tdex_daemon.v1.GetMarketBalanceResponse
	24,  // 117: tdex_daemon.v1.OperatorService.ClaimMarketDeposits:output_type -> tdex_daemon.v1.ClaimMarketDepositsResponse
	26,  // 118: tdex_daemon.v1.OperatorService.OpenMarket:output_type -> tdex_daemon.v1.OpenMarketResponse
	28,  // 119: tdex_daemon.v1.OperatorService.CloseMarket:output_type -> tdex_daemon.v1.CloseMarketResponse
	32,  // 120: tdex_daemon.v1.OperatorService.DropMarket:output_type -> tdex_daemon.v1.DropMarketResponse
	34,  // 121: tdex_daemon.v1.OperatorService.GetMarketCollectedSwapFees:output_type -> tdex_daemon.v1.GetMarketCollectedSwapFeesResponse
	36,  // 122: tdex_daemon.v1.OperatorService.WithdrawMarket:output_type -> tdex_daemon.v1.WithdrawMarketResponse
	38,  // 123: tdex_daemon.v1.OperatorService.UpdateMarketPercentageFee:output_type -> tdex_daemon.v1.UpdateMarketPercentageFeeResponse
	40,  // 124: tdex_daemon.v1.OperatorService.UpdateMarketFixedFee:output_type -> tdex_daemon.v1.UpdateMarketFixedFeeResponse
	42,  // 125: tdex_daemon.v1.OperatorService.UpdateMarketAssetsPrecision:output_type -> tdex_daemon.v1.UpdateMarketAssetsPrecisionResponse
	44,  // 126: tdex_daemon.v1.OperatorService.UpdateMarketPrice:output_type -> tdex_daemon.v1.UpdateMarketPriceResponse
	46,  // 127: tdex_daemon.v1.OperatorService.UpdateMarketStrategy:output_type -> tdex_daemon.v1.UpdateMarketStrategyResponse
	48,  // 128: tdex_daemon.v1.OperatorService.GetFeeFragmenterAddress:output_type -> tdex_daemon.v1.GetFeeFragmenterAddressResponse
	50,  // 129: tdex_daemon.v1.OperatorService.ListFeeFragmenterAddresses:output_type -> tdex_daemon.v1.ListFeeFragmenterAddressesResponse
	52,  // 130: tdex_daemon.v1.OperatorService.GetFeeFragmenterBalance:output_type -> tdex_daemon.v1.GetFeeFragmenterBalanceResponse
	54,  // 131: tdex_daemon.v1.OperatorService.FeeFragmenterSplitFunds:output_type -> tdex_daemon.v1.FeeFragmenterSplitFundsResponse
	56,  // 132: tdex_daemon.v1.OperatorService.WithdrawFeeFragmenter:output_type -> tdex_daemon.v1.WithdrawFeeFragmenterResponse
	58,  // 133: tdex_daemon.v1.OperatorService.GetMarketFragmenterAddress:output_type -> tdex_daemon.v1.GetMarketFragmenterAddressResponse
	60,  // 134: tdex_daemon.v1.OperatorService.ListMarketFragmenterAddresses:output_type -> tdex_daemon.v1.ListMarketFragmenterAddressesResponse
	62,  // 135: tdex_daemon.v1.OperatorService.GetMarketFragmenterBalance:output_type -> tdex_daemon.v1.GetMarketFragmenterBalanceResponse
	64,  // 136: tdex_daemon.v1.OperatorService.MarketFragmenterSplitFunds:output_type -> tdex_daemon.v1.MarketFragmenterSplitFundsResponse
	66,  // 137: tdex_daemon.v1.OperatorService.WithdrawMarketFragmenter:output_type -> tdex_daemon.v1.WithdrawMarketFragmenterResponse
	30,  // 138: tdex_daemon.v1.OperatorService.ListMarkets:output_type -> tdex_daemon.v1.ListMarketsResponse
	68,  // 139: tdex_daemon.v1.OperatorService.ListTrades:output_type -> tdex_daemon.v1.ListTradesResponse
	70,  // 140: tdex_daemon.v1.OperatorService.ReloadUtxos:output_type -> tdex_daemon.v1.ReloadUtxosResponse
	72,  // 141: tdex_daemon.v1.OperatorService.ListUtxos:output_type -> tdex_daemon.v1.ListUtxosResponse
	74,  // 142: tdex_daemon.v1.OperatorService.AddWebhook:output_type -> tdex_daemon.v1.AddWebhookResponse
	76,  // 143: tdex_daemon.v1.OperatorService.RemoveWebhook:output_type -> tdex_daemon.v1.RemoveWebhookResponse
	78,  // 144: tdex_daemon.v1.OperatorService.ListWebhooks:output_type -> tdex_daemon.v1.ListWebhooksResponse
	80,  // 145: tdex_daemon.v1.OperatorService.ListDeposits:output_type -> tdex_daemon.v1.ListDepositsResponse
	82,  // 146: tdex_daemon.v1.OperatorService.ListWithdrawals:output_type -> tdex_daemon.v1.ListWithdrawalsResponse
	84,  // 147: tdex_daemon.v1.OperatorService.GetMarketReport:output_type -> tdex_daemon.v1.GetMarketReportResponse
	106, // [106:148] is the sub-list for method output_type
	64,  // [64:106] is the sub-list for method input_type
	64,  // [64:64] is the sub-list for extension type_name
	64,  // [64:64] is the sub-list for extension extendee
	0,   // [0:64] is the sub-list for field type_name
}

func init() { file_tdex_daemon_v1_operator_proto_init() }
func file_tdex_daemon_v1_operator_proto_init() {
	if File_tdex_daemon_v1_operator_proto != nil {
		return
	}
	file_tdex_daemon_v1_types_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_tdex_daemon_v1_operator_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tdex_daemon_v1_operator_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tdex_daemon_v1_operator_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BuildInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tdex_daemon_v1_operator_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFeeAddressRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tdex_daemon_v1_operator_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFeeAddressResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tdex_daemon_v1_operator_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListFeeAddressesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tdex_daemon_v1_operator_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListFeeAddressesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tdex_daemon_v1_operator_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFeeBalanceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tdex_daemon_v1_operator_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFeeBalanceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tdex_daemon_v1_operator_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClaimFeeDepositsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tdex_daemon_v1_operator_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClaimFeeDepositsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tdex_daemon_v1_operator_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WithdrawFeeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tdex_daemon_v1_operator_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WithdrawFeeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tdex_daemon_v1_operator_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NewMarketRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tdex_daemon_v1_operator_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NewMarketResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tdex_daemon_v1_operator_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMarketInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tdex_daemon_v1_operator_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMarketInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tdex_daemon_v1_operator_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMarketAddressRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tdex_daemon_v1_operator_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMarketAddressResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tdex_daemon_v1_operator_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListMarketAddressesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tdex_daemon_v1_operator_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListMarketAddressesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tdex_daemon_v1_operator_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMarketBalanceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tdex_daemon_v1_operator_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMarketBalanceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tdex_daemon_v1_operator_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClaimMarketDepositsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tdex_daemon_v1_operator_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClaimMarketDepositsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tdex_daemon_v1_operator_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OpenMarketRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tdex_daemon_v1_operator_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OpenMarketResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tdex_daemon_v1_operator_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CloseMarketRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tdex_daemon_v1_operator_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CloseMarketResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tdex_daemon_v1_operator_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListMarketsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tdex_daemon_v1_operator_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListMarketsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tdex_daemon_v1_operator_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DropMarketRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tdex_daemon_v1_operator_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DropMarketResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tdex_daemon_v1_operator_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMarketCollectedSwapFeesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tdex_daemon_v1_operator_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMarketCollectedSwapFeesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tdex_daemon_v1_operator_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WithdrawMarketRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tdex_daemon_v1_operator_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WithdrawMarketResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tdex_daemon_v1_operator_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateMarketPercentageFeeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tdex_daemon_v1_operator_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateMarketPercentageFeeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tdex_daemon_v1_operator_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateMarketFixedFeeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tdex_daemon_v1_operator_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateMarketFixedFeeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tdex_daemon_v1_operator_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateMarketAssetsPrecisionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tdex_daemon_v1_operator_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateMarketAssetsPrecisionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tdex_daemon_v1_operator_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateMarketPriceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tdex_daemon_v1_operator_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateMarketPriceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tdex_daemon_v1_operator_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateMarketStrategyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tdex_daemon_v1_operator_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateMarketStrategyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tdex_daemon_v1_operator_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFeeFragmenterAddressRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tdex_daemon_v1_operator_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFeeFragmenterAddressResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tdex_daemon_v1_operator_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListFeeFragmenterAddressesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tdex_daemon_v1_operator_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListFeeFragmenterAddressesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tdex_daemon_v1_operator_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFeeFragmenterBalanceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tdex_daemon_v1_operator_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFeeFragmenterBalanceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tdex_daemon_v1_operator_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FeeFragmenterSplitFundsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tdex_daemon_v1_operator_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FeeFragmenterSplitFundsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tdex_daemon_v1_operator_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WithdrawFeeFragmenterRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tdex_daemon_v1_operator_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WithdrawFeeFragmenterResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tdex_daemon_v1_operator_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMarketFragmenterAddressRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tdex_daemon_v1_operator_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMarketFragmenterAddressResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tdex_daemon_v1_operator_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListMarketFragmenterAddressesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tdex_daemon_v1_operator_proto_msgTypes[60].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListMarketFragmenterAddressesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tdex_daemon_v1_operator_proto_msgTypes[61].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMarketFragmenterBalanceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tdex_daemon_v1_operator_proto_msgTypes[62].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMarketFragmenterBalanceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tdex_daemon_v1_operator_proto_msgTypes[63].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MarketFragmenterSplitFundsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tdex_daemon_v1_operator_proto_msgTypes[64].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MarketFragmenterSplitFundsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tdex_daemon_v1_operator_proto_msgTypes[65].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WithdrawMarketFragmenterRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tdex_daemon_v1_operator_proto_msgTypes[66].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WithdrawMarketFragmenterResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tdex_daemon_v1_operator_proto_msgTypes[67].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListTradesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tdex_daemon_v1_operator_proto_msgTypes[68].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListTradesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tdex_daemon_v1_operator_proto_msgTypes[69].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReloadUtxosRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tdex_daemon_v1_operator_proto_msgTypes[70].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReloadUtxosResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tdex_daemon_v1_operator_proto_msgTypes[71].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListUtxosRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tdex_daemon_v1_operator_proto_msgTypes[72].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListUtxosResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tdex_daemon_v1_operator_proto_msgTypes[73].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddWebhookRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tdex_daemon_v1_operator_proto_msgTypes[74].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddWebhookResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tdex_daemon_v1_operator_proto_msgTypes[75].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveWebhookRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tdex_daemon_v1_operator_proto_msgTypes[76].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveWebhookResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tdex_daemon_v1_operator_proto_msgTypes[77].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListWebhooksRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tdex_daemon_v1_operator_proto_msgTypes[78].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListWebhooksResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tdex_daemon_v1_operator_proto_msgTypes[79].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListDepositsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tdex_daemon_v1_operator_proto_msgTypes[80].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListDepositsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tdex_daemon_v1_operator_proto_msgTypes[81].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListWithdrawalsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tdex_daemon_v1_operator_proto_msgTypes[82].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListWithdrawalsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tdex_daemon_v1_operator_proto_msgTypes[83].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMarketReportRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tdex_daemon_v1_operator_proto_msgTypes[84].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMarketReportResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_tdex_daemon_v1_operator_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   88,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_tdex_daemon_v1_operator_proto_goTypes,
		DependencyIndexes: file_tdex_daemon_v1_operator_proto_depIdxs,
		MessageInfos:      file_tdex_daemon_v1_operator_proto_msgTypes,
	}.Build()
	File_tdex_daemon_v1_operator_proto = out.File
	file_tdex_daemon_v1_operator_proto_rawDesc = nil
	file_tdex_daemon_v1_operator_proto_goTypes = nil
	file_tdex_daemon_v1_operator_proto_depIdxs = nil
}
